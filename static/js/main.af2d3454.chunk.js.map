{"version":3,"sources":["templates/layout/Layout.tsx","models/color/CommonColor.tsx","components/tools/ToolButton.tsx","contexts/storeContext.ts","hooks/useStores.tsx","models/tools/ToolTypes.ts","utils/FileUtils.tsx","components/tools/MenuToolButton.tsx","components/tools/ToolBox.tsx","models/tools/Brush.ts","components/input/Range.tsx","components/input/ColorPicker.tsx","components/input/ColorPalette.tsx","hooks/usePrevious.tsx","components/input/ColorSelect.tsx","components/tools/PropBoxLayout.tsx","components/tools/BrushPropBox.tsx","models/tools/Shape.ts","components/tools/ShapePropBox.tsx","components/tools/TextPropBox.tsx","components/tools/PropBox.tsx","templates/canvas/Canvas.tsx","App.tsx","stores/mouseEventStore.ts","stores/brushStore.ts","stores/canvasStore.ts","stores/objectManagerStore.ts","stores/objectEventStore.ts","stores/shapeStore.ts","stores/UIStore.ts","stores/textStore.ts","stores/rootStore.ts","index.tsx"],"names":["useStyles","makeStyles","progressWrapper","display","justifyContent","alignItems","Layout","loading","children","classes","Fragment","CssBaseline","className","CircularProgress","CommonColor","theme","button","cursor","color","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","textAlign","caption","fontSize","selected","background","ToolButton","icon","text","onClick","clsx","StoreContext","React","createContext","StoreProvider","Provider","useStores","useContext","ToolTypes","value","_values","push","this","values","find","v","SELECT","BRUSH","SHAPE","TEXT","CANVAS","MimeType","FileUtils","fileName","blob","Blob","type","objectURL","window","URL","createObjectURL","write","dataURL","a","document","createElement","download","href","click","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","backgroundColor","palette","primary","main","common","white","MenuItem","MenuToolButton","useState","anchorEl","setAnchorEl","canvasStore","inputRef","useRef","handleClose","onChange","e","target","files","item","read","then","jsonString","canvas","loadFromJSON","catch","console","error","ref","style","accept","event","currentTarget","keepMounted","open","Boolean","onClose","current","ListItemIcon","ListItemText","writeText","JSON","stringify","toJSON","fullQuality","toDataURL","appBarColor","left","center","flex","right","ToolBox","observer","AppBar","colorDefault","Toolbar","variant","setCanvasMode","canvasMode","BrushType","PENCIL","fabric","PencilBrush","CIRCLE","CircleBrush","SPRAY","SprayBrush","label","Range","prefix","min","max","Typography","Input","margin","inputProps","endAdornment","InputAdornment","position","Slider","newValue","colorBox","width","height","borderStyle","borderColor","disabled","ColorPicker","Popover","disableAlpha","onChangeComplete","ColorPalette","Box","mb","usePrevious","useEffect","ColorSelect","previousColor","selectedValue","setSelectedValue","mr","flexBasis","rgb","r","g","b","hex","FormControl","fullWidth","Select","undefined","flexDirection","title","marginBottom","propBoxWrapper","PropBoxLayout","objectManagerStore","activeObject","getObjectTypeName","borderRadius","padding","marginRight","propBox","BrushPropBox","brushStore","brushType","setBrushType","faPencilAlt","size","faSprayCan","faCircle","strokeWidth","setStrokeWidth","Divider","stroke","setStroke","ShapeType","options","RECT","Rect","ELLIPSE","Ellipse","TRIANGLE","Triangle","ShapePropBox","shapeStore","shapeType","setShapeType","cx","cy","fill","points","setFill","TextPropBox","textStore","setFontSize","PropBox","selectedTool","isPath","isShape","isText","flexBox","contents","canvasWrapper","Canvas","rootStore","canvasRef","init","App","MouseEventType","defaultStyles","BrushStore","objectManager","makeAutoObservable","addReactions","setFreeDrawingBrush","set","freeDrawingBrush","renderAll","getBrush","subscribe","updateObject","bind","object","isBrush","updatePathStyles","styles","setPathStyles","isType","CanvasStore","setWidth","setHeight","setBackgroundColor","mode","discardActiveObject","isDrawingMode","defaultCursor","setSelectable","selectable","selection","getObjects","forEach","obj","hoverCursor","SelectionEventType","MouseEventStore","startCursorPosition","x","y","currentCursorPosition","Map","addEventListeners","eventType","listener","has","get","filter","fn","getCursorPosition","MOUSE_DOWN","callback","MOUSE_MOVE","MOUSE_UP","on","onMouseDown","onMouseMove","onMouseUp","getPointer","ObjectEventType","ObjectManagerStore","listeners","Set","onSelected","onCleared","SELECTION_CREATED","SELECTION_UPDATED","SELECTION_CLEARED","reaction","log","add","delete","isRect","isEllipse","isTriangle","ObjectEventStore","addEventListener","OBJECT_SCALING","onScaling","OBJECT_MODIFIED","onModified","callbackFn","ShapeStore","mouseEventStore","isDragMode","updateShapeStyles","setShapeStyles","isShapeTool","getShape","top","strokeUniform","rx","ry","Math","abs","flipX","flipY","MIN_OBJECT_SIZE","setCoords","circle","setActiveObject","UIStore","TextStore","objectEventStore","updateTextStyles","setTextStyles","isTextTool","IText","lockUniScaling","setControlVisible","selectAll","enterEditing","parseInt","scaleX","toFixed","scaleY","canvasElement","body","append","container","parentElement","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.af2d3454.chunk.js","sourcesContent":["import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(() => ({\n    progressWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    }\n}))\n\nconst Layout = ({ loading, children }: Props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <div>\n                {loading ? (\n                    <div className={classes.progressWrapper}><CircularProgress /></div>\n                ) : children}\n            </div>\n        </React.Fragment>\n    )\n}\n\ninterface Props {\n    loading?: boolean;\n    children: React.ReactElement | React.ReactElement[];\n}\n\nexport default Layout;","export const CommonColor = {\n    PRIMARY: \"#ac76ff\",\n    BACKGROUND_GRADIENT: \"linear-gradient(90deg, rgba(172,118,255,1) 0%, rgba(91,91,255,1) 100%)\",\n    BACKGROUND_GRADIENT_HOVER: \"linear-gradient(90deg, rgba(172,118,255,.4) 0%, rgba(91,91,255,.4) 100%)\",\n}","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport clsx from \"clsx\";\nimport {CommonColor} from \"../../models/color/CommonColor\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: \"inline-block\",\n        cursor: \"pointer\",\n        color: \"#fff\",\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        textAlign: \"center\",\n    },\n    caption: {\n        fontSize: \"0.70rem\",\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n    }\n}));\n\nconst ToolButton = ({icon, text, onClick, selected}: Props) => {\n    const classes = useStyles();\n    return (\n        <div className={clsx(classes.button, {\n            [classes.selected]: selected,\n        })} onClick={onClick}>\n            {icon}\n            <div className={classes.caption}>{text}</div>\n        </div>\n    )\n}\n\ninterface Props {\n    icon: any;\n    text: string;\n    onClick: (event: React.MouseEvent<HTMLElement>) => void;\n    selected?: boolean;\n}\n\nexport default ToolButton;","import React from \"react\";\nimport { RootStore } from \"stores/rootStore\";\n\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\nexport const StoreProvider = StoreContext.Provider;","import React from \"react\";\nimport {RootStore} from \"../stores/rootStore\";\nimport {StoreContext} from \"../contexts/storeContext\";\n\nexport const useStores = (): RootStore => React.useContext(StoreContext);","export class ToolTypes {\n    private static readonly _values: ToolTypes[] = [];\n    public static readonly SELECT = new ToolTypes(\"select\", \"선택\");\n    public static readonly BRUSH = new ToolTypes(\"brush\", \"브러쉬\");\n    public static readonly SHAPE = new ToolTypes(\"shape\", \"셰이프\");\n    public static readonly TEXT = new ToolTypes(\"text\", \"텍스트\");\n    public static readonly CANVAS = new ToolTypes(\"canvas\", \"캔버스\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        ToolTypes._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n}","enum MimeType {\n    TEXT = \"text/plain\",\n}\n\nexport class FileUtils {\n    public static writeText(fileName: string, text: string) {\n        const blob = new Blob([text], { type: MimeType.TEXT });\n        const objectURL = window.URL.createObjectURL(blob);\n        this.write(fileName, objectURL);\n    }\n\n    public static write(fileName: string, dataURL: string) {\n        const a = document.createElement('a');\n        a.download = fileName;\n        a.href = dataURL;\n        a.click();\n    }\n\n    public static async read(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = () => reject();\n            reader.readAsText(file);\n        });\n    }\n}","import React from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Menu, {MenuProps} from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ToolButton from \"./ToolButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {FileUtils} from \"../../utils/FileUtils\";\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: \"1px solid #d3d4d5\",\n    },\n})((props: MenuProps) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n        }}\n        transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n        }}\n        {...props}\n    />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        \"&:focus\": {\n            backgroundColor: theme.palette.primary.main,\n            \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n                color: theme.palette.common.white,\n            },\n        },\n    },\n}))(MenuItem);\n\nexport default function MenuToolButton() {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const {canvasStore} = useStores();\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleFileOpen = () => {\n        inputRef.current?.click();\n        handleClose();\n    }\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.item(0);\n        e.target.value = \"\";\n\n        if (!!file) {\n            FileUtils.read(file).then(jsonString => {\n                canvasStore.canvas.loadFromJSON(jsonString, () => {\n                    //\n                })\n            }).catch(e => console.error(e));\n        }\n    }\n\n    const handleSave = () => {\n        FileUtils.writeText(\"canvas.json\", JSON.stringify(canvasStore.canvas.toJSON()));\n        handleClose();\n    }\n\n    const handleImageSave = () => {\n        const fullQuality = canvasStore.canvas.toDataURL();\n        FileUtils.write(\"canvas.png\", fullQuality);\n        handleClose();\n    }\n\n    return (\n        <div>\n            <input\n                type={\"file\"}\n                onChange={handleFileChange}\n                ref={inputRef}\n                style={{display: \"none\"}}\n                accept=\"application/json\"\n            />\n            <ToolButton icon={<MenuIcon/>} text={\"메뉴\"} onClick={handleClick}/>\n            <StyledMenu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <StyledMenuItem onClick={handleFileOpen}>\n                    <ListItemIcon>\n                        <DescriptionIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"열기\"/>\n                </StyledMenuItem>\n                <StyledMenuItem onClick={handleSave}>\n                    <ListItemIcon>\n                        <SaveIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"저장\"/>\n                </StyledMenuItem>\n                <StyledMenuItem onClick={handleImageSave}>\n                    <ListItemIcon>\n                        <SaveAltIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"이미지로 저장\"/>\n                </StyledMenuItem>\n            </StyledMenu>\n        </div>\n    );\n}","import React from \"react\";\nimport {AppBar, Toolbar} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\nimport ToolButton from \"./ToolButton\";\nimport MouseIcon from '@material-ui/icons/Mouse';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BrushIcon from \"@material-ui/icons/Brush\";\nimport {ToolTypes} from \"../../models/tools/ToolTypes\";\nimport MenuToolButton from \"./MenuToolButton\";\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport PhotoSizeSelectSmallIcon from \"@material-ui/icons/PhotoSizeSelectSmall\";\n\nconst useStyles = makeStyles(() => ({\n    appBarColor: {\n        backgroundColor: \"rgba(30,30,30,0.95)\",\n    },\n    left: {\n        justifyContent: \"flex-start\",\n    },\n    center: {\n        display: \"flex\",\n        flex: 1,\n        justifyContent: \"center\",\n    },\n    right: {\n        justifyContent: \"flex-end\",\n    }\n}));\n\nconst ToolBox = observer(() => {\n    const classes = useStyles();\n    const {canvasStore} = useStores();\n\n    return (\n        <AppBar\n            classes={{\n                colorDefault: classes.appBarColor,\n            }}\n            color={\"default\"}\n            elevation={0}\n        >\n            <Toolbar variant={\"dense\"}>\n                <div className={classes.left}>\n                    <MenuToolButton/>\n                </div>\n                <div className={classes.center}>\n                    <ToolButton\n                        icon={<MouseIcon/>}\n                        text={ToolTypes.SELECT.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SELECT)}\n                        selected={canvasStore.canvasMode === ToolTypes.SELECT}\n                    />\n                    <ToolButton\n                        icon={<BrushIcon/>}\n                        text={ToolTypes.BRUSH.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.BRUSH)}\n                        selected={canvasStore.canvasMode === ToolTypes.BRUSH}\n                    />\n                    <ToolButton\n                        icon={<DashboardIcon/>}\n                        text={ToolTypes.SHAPE.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SHAPE)}\n                        selected={canvasStore.canvasMode === ToolTypes.SHAPE}\n                    />\n                    <ToolButton\n                        icon={<TextFieldsIcon/>}\n                        text={ToolTypes.TEXT.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.TEXT)}\n                        selected={canvasStore.canvasMode === ToolTypes.TEXT}\n                    />\n                    <ToolButton\n                        icon={<PhotoSizeSelectSmallIcon/>}\n                        text={ToolTypes.CANVAS.display}\n                        onClick={() => canvasStore.canvasMode = ToolTypes.CANVAS}\n                        selected={canvasStore.canvasMode === ToolTypes.CANVAS}\n                    />\n                </div>\n                <div className={classes.right}>\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n})\n\nexport default ToolBox;","import {fabric} from \"fabric\";\n\nexport class BrushType {\n    private static readonly _values: BrushType[] = [];\n    public static readonly PENCIL = new BrushType(\"pencil\", \"연필\");\n    public static readonly CIRCLE = new BrushType(\"circle\", \"원형\");\n    public static readonly SPRAY = new BrushType(\"spray\", \"스프레이\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        BrushType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getBrush(canvas: fabric.Canvas) {\n        switch (this) {\n            case BrushType.PENCIL:\n                return new (fabric.PencilBrush as any)(canvas);\n            case BrushType.CIRCLE:\n                return new (fabric.CircleBrush as any)(canvas);\n            case BrushType.SPRAY:\n                return new (fabric.SprayBrush as any)(canvas);\n            default:\n                return new (fabric.PencilBrush as any)(canvas);\n        }\n    }\n}","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Slider } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { InputAdornment } from \"@material-ui/core\";\n\ninterface Props {\n    label: string;\n    value: number;\n    onChange: (value: number) => void;\n    prefix?: string;\n    min?: number;\n    max?: number;\n}\n\nconst useStyles = makeStyles(theme => ({\n    label: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    }\n}));\n\nconst Range = ({ label, value, onChange, prefix, min, max }: Props) => {\n    const classes = useStyles();\n\n    const handleSliderChange = (event: any, newValue: number | number[]) => {\n        if (typeof newValue === \"number\") {\n            onChange(newValue);\n        }\n    };\n\n    return (\n        <div>\n            <div className={classes.label}>\n                <Typography variant={\"caption\"}>{label}</Typography>\n                <Input\n                    value={value}\n                    margin=\"dense\"\n                    inputProps={{\n                        min: 1,\n                        max: 100,\n                        type: 'number',\n                    }}\n                    endAdornment={<InputAdornment position=\"end\">{prefix}</InputAdornment>}\n                />\n            </div>\n            <div>\n                <Slider\n                    min={min}\n                    max={max}\n                    value={value}\n                    onChange={handleSliderChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Range;","import { Popover, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { ChromePicker, ColorResult } from \"react-color\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\ninterface Props {\n    label?: string,\n    color: string | undefined,\n    disableAlpha?: boolean,\n    disabled?: boolean,\n    onChange: (color: ColorResult) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    colorBox: {\n        width: \"100%\",\n        height: 35,\n        border: 1,\n        borderStyle: \"solid\",\n        borderColor: \"#c0c0c0\",\n        backgroundColor: (props: Props) => props.color,\n        cursor: (props: Props) => !props.disabled ? \"pointer\" : \"default\",\n    }\n}));\n\nconst ColorPicker = (props: Props) => {\n    const classes = useStyles(props);\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n    const open = !!anchorEl;\n\n    const handleClick = (e: any) => {\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            {props.label && <Typography variant={\"caption\"}>{props.label}</Typography>}\n            <div>\n                <div className={classes.colorBox} onClick={handleClick} />\n                <Popover\n                    open={open && !props.disabled}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                >\n                    <ChromePicker color={props.color} disableAlpha={props.disableAlpha} onChangeComplete={props.onChange} />\n                </Popover>\n            </div>\n        </div>\n    )\n}\n\nexport default ColorPicker;","import { Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport { ColorResult, TwitterPicker } from \"react-color\"\nimport ColorPicker from \"./ColorPicker\";\n\ninterface Props {\n    color: string,\n    disableAlpha?: boolean,\n    onChange: (color: ColorResult) => void;\n}\n\nconst ColorPalette = (props: Props) => {\n    return (\n        <div>\n            <Box mb={2}>\n                <ColorPicker {...props} />\n            </Box>\n            <TwitterPicker width={\"100%\"} color={props.color} onChangeComplete={props.onChange} />\n        </div>\n    )\n}\n\nexport default ColorPalette;","import React from \"react\";\n\nconst usePrevious = (value: any) => {\n    const ref = React.useRef();\n    React.useEffect(() => {\n        ref.current = value;\n    });\n\n    return ref.current;\n}\n\nexport default usePrevious;","import { Select } from \"@material-ui/core\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { FormControl } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\nimport usePrevious from \"hooks/usePrevious\";\nimport { CommonColor } from \"models/color/CommonColor\";\nimport React from \"react\"\nimport { ColorResult } from \"react-color\"\nimport ColorPicker from \"./ColorPicker\"\n\ninterface Props {\n    color: string | undefined;\n    onChange: (color: string | undefined) => void;\n}\n\nconst ColorSelect = ({ color, onChange }: Props) => {\n    const previousColor = usePrevious(color);\n    const [selectedValue, setSelectedValue] = React.useState<string>(!color ? \"none\" : \"solid\");\n\n    const handleColorChange = (color: ColorResult) => {\n        const rgb = !color.rgb.a && color.rgb.a !== 0 ? color.hex : `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n        onChange(rgb);\n    }\n\n    const handleSelectedValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const value = event.target.value as string;\n        setSelectedValue(value);\n\n        if (value === \"none\") {\n            onChange(undefined);\n        } else {\n            onChange(previousColor || CommonColor.PRIMARY);\n        }\n    };\n\n    return (\n        <Box display={\"flex\"}>\n            <Box mr={1.5} flexBasis={35}>\n                <ColorPicker color={color} onChange={handleColorChange} disabled={selectedValue === \"none\"} />\n            </Box>\n            <Box flex={1}>\n                <FormControl fullWidth>\n                    <Select\n                        value={selectedValue}\n                        onChange={handleSelectedValueChange}\n                    >\n                        <MenuItem value=\"none\">\n                            <em>없음</em>\n                        </MenuItem>\n                        <MenuItem value={\"solid\"}>단색</MenuItem>\n                    </Select>\n                </FormControl>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ColorSelect","import { Typography } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { useStores } from \"hooks/useStores\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n    },\n    title: {\n        marginBottom: theme.spacing(3),\n    },\n    propBoxWrapper: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n}))\n\nconst PropBoxLayout: React.FC = observer(({ children }) => {\n    const classes = useStyles();\n    const { canvasStore, objectManagerStore } = useStores();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.title}>\n                <Typography variant={\"h6\"} color={\"primary\"}>{objectManagerStore.activeObject ? objectManagerStore.getObjectTypeName() : canvasStore.canvasMode.display}</Typography>\n            </div>\n            <div className={classes.propBoxWrapper}>\n                {children}\n            </div>\n        </div>\n    )\n})\n\nexport default PropBoxLayout;","import { Box, Divider, Typography } from \"@material-ui/core\";\nimport { BrushType } from \"../../models/tools/Brush\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { observer } from \"mobx-react\";\nimport { useStores } from \"../../hooks/useStores\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faSprayCan, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport clsx from \"clsx\";\nimport { CommonColor } from \"../../models/color/CommonColor\";\nimport { ColorPalette, Range } from \"components/input\";\nimport PropBoxLayout from \"./PropBoxLayout\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        \"&:hover\": {\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\n            \"& *\": {\n                color: \"white\",\n            }\n        },\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        \"& *\": {\n            color: \"white\",\n        }\n    },\n    propBox: {\n        flex: 1,\n        \"& > div\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}))\n\nconst BrushPropBox = observer(() => {\n    const classes = useStyles();\n    const { brushStore } = useStores();\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                {!brushStore.item && <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>모양</Typography>\n                    </Box>\n                    <Box display=\"flex\">\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.PENCIL && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.PENCIL)}\n                        >\n                            <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" />\n                        </div>\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.SPRAY && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.SPRAY)}\n                        >\n                            <FontAwesomeIcon icon={faSprayCan} size=\"lg\" />\n                        </div>\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.CIRCLE && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.CIRCLE)}\n                        >\n                            <FontAwesomeIcon icon={faCircle} size=\"lg\" />\n                        </div>\n                    </Box>\n                </div>}\n                <div>\n                    <Range\n                        label=\"두께\"\n                        value={brushStore.strokeWidth}\n                        onChange={(strokeWidth) => brushStore.setStrokeWidth(strokeWidth)}\n                        prefix={\"px\"}\n                        min={1}\n                    />\n                </div>\n            </div>\n            <div>\n                <Box paddingTop={3} paddingBottom={3}><Divider /></Box>\n                <ColorPalette color={brushStore.stroke} onChange={(color) => brushStore.setStroke(color.hex)} disableAlpha={true} />\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default BrushPropBox;","import {fabric} from \"fabric\";\n\nexport class ShapeType {\n    private static readonly _values: ShapeType[] = [];\n    public static readonly RECT = new ShapeType(\"rect\", \"사각형\");\n    public static readonly ELLIPSE = new ShapeType(\"ellipse\", \"원\");\n    public static readonly TRIANGLE = new ShapeType(\"triangle\", \"삼각형\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        ShapeType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getShape<T extends fabric.IObjectOptions>(options?: T) {\n        switch (this) {\n            case ShapeType.RECT:\n                return new fabric.Rect(options);\n            case ShapeType.ELLIPSE:\n                return new fabric.Ellipse(options);\n            case ShapeType.TRIANGLE:\n                return new fabric.Triangle(options);\n            default:\n                return new fabric.Rect(options);\n        }\n    }\n}","import { Box, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { observer } from \"mobx-react\";\nimport { ShapeType } from \"../../models/tools/Shape\";\nimport clsx from \"clsx\";\nimport { CommonColor } from \"../../models/color/CommonColor\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport { useStores } from \"hooks/useStores\";\nimport { ColorSelect, Range } from \"components/input\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        height: 40,\n        \"&:hover\": {\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\n            \"& svg > *\": {\n                stroke: \"white\",\n            }\n        },\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        \"& svg > *\": {\n            stroke: \"white\",\n        }\n    },\n    propBox: {\n        \"& > div\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}))\n\nconst ShapePropBox = observer(() => {\n    const classes = useStyles();\n    const { shapeStore } = useStores();\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                {!shapeStore.item && <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>모양</Typography>\n                    </Box>\n                    <Box display={\"flex\"}>\n                        <div\n                            className={clsx(classes.button, shapeStore.shapeType === ShapeType.ELLIPSE && classes.selected)}\n                            onClick={() => shapeStore.setShapeType(ShapeType.ELLIPSE)}\n                        >\n                            <svg height=\"24\" width=\"24\">\n                                <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\n                            </svg>\n                        </div>\n                        <div\n                            className={clsx(classes.button, shapeStore.shapeType === ShapeType.RECT && classes.selected)}\n                            onClick={() => shapeStore.setShapeType(ShapeType.RECT)}\n                        >\n                            <svg width=\"24\" height=\"24\">\n                                <rect width=\"24\" height=\"24\" stroke=\"black\" fill=\"transparent\" strokeWidth={4} />\n                            </svg>\n                        </div>\n                        <div\n                            className={clsx(classes.button, shapeStore.shapeType === ShapeType.TRIANGLE && classes.selected)}\n                            onClick={() => shapeStore.setShapeType(ShapeType.TRIANGLE)}\n                        >\n                            <svg width=\"24\" height=\"24\">\n                                <polygon points=\"12,2 22,22 2,22\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\n                            </svg>\n                        </div>\n                    </Box>\n                </div>}\n                <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>채우기</Typography>\n                        <div>\n                            <ColorSelect color={shapeStore.fill} onChange={(color: string | undefined) => shapeStore.setFill(color)} />\n                        </div>\n                    </Box>\n                </div>\n                <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>선 색상</Typography>\n                        <div>\n                            <ColorSelect color={shapeStore.stroke} onChange={(color: string | undefined) => shapeStore.setStroke(color)} />\n                        </div>\n                    </Box>\n                </div>\n                <div>\n                    <Range label=\"선 두께\" value={shapeStore.strokeWidth} onChange={(strokeWidth) => shapeStore.setStrokeWidth(strokeWidth)} prefix={\"px\"} />\n                </div>\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default ShapePropBox;","import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport React from \"react\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport { Range } from \"../input\";\nimport { useStores } from \"hooks/useStores\";\nimport { observer } from \"mobx-react\";\n\nconst useStyles = makeStyles(theme => ({\n    propBox: {\n        \"& > div\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}))\n\nconst TextPropBox = observer(() => {\n    const classes = useStyles();\n    const { textStore } = useStores();\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                <div>\n                    <Range\n                        label={\"폰트 사이즈\"}\n                        value={textStore.fontSize}\n                        onChange={(value: number) => textStore.setFontSize(value)}\n                        prefix={\"pt\"}\n                        min={8}\n                    />\n                </div>\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default TextPropBox;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { useStores } from \"../../hooks/useStores\";\nimport { ToolTypes } from \"../../models/tools/ToolTypes\";\nimport BrushPropBox from \"./BrushPropBox\";\nimport ShapePropBox from \"./ShapePropBox\";\nimport TextPropBox from \"./TextPropBox\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n    }\n}));\n\nconst PropBox = observer(() => {\n    const classes = useStyles();\n    const { canvasStore, objectManagerStore } = useStores();\n    const selectedTool = canvasStore.canvasMode;\n    const activeObject = objectManagerStore.activeObject;\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {!activeObject && <React.Fragment>\n                    {selectedTool === ToolTypes.BRUSH && (<BrushPropBox />)}\n                    {selectedTool === ToolTypes.SHAPE && (<ShapePropBox />)}\n                    {selectedTool === ToolTypes.TEXT && (<TextPropBox />)}\n                </React.Fragment>}\n                {activeObject && <React.Fragment>\n                    {objectManagerStore.isPath() && <BrushPropBox />}\n                    {objectManagerStore.isShape() && <ShapePropBox />}\n                    {objectManagerStore.isText() && <TextPropBox />}\n                </React.Fragment>}\n            </div>\n        </React.Fragment>\n    )\n})\n\nexport default PropBox;","import React from \"react\";\nimport {Layout} from \"../layout\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {PropBox, ToolBox} from \"../../components/tools\";\nimport {observer} from \"mobx-react\";\nimport {Toolbar} from \"@material-ui/core\";\nimport {useStores} from \"../../hooks/useStores\";\n\nconst leftMenuWidth = 260;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100vw\",\n        height: \"100vh\",\n    },\n    flexBox: {\n        display: \"flex\",\n        flex: 1,\n    },\n    contents: {\n        display: \"flex\",\n    },\n    left: {\n        flexBasis: `${leftMenuWidth}px`,\n        backgroundColor: \"#f0f0f0\",\n    },\n    canvasWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1,\n        backgroundColor: \"#c0c0c0\",\n        padding: theme.spacing(3),\n    },\n}))\n\nconst Canvas = observer(() => {\n    const classes = useStyles();\n    const rootStore = useStores();\n    const canvasRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!canvasRef.current) {\n            return;\n        }\n\n        rootStore.init(canvasRef.current);\n        // eslint-disable-next-line\n    }, [canvasRef]);\n\n    return (\n        <Layout>\n            <ToolBox/>\n            <div className={classes.root}>\n                <Toolbar variant={\"dense\"}/>\n                <div className={classes.flexBox}>\n                    <div className={classes.left}>\n                        <PropBox/>\n                    </div>\n                    <div className={classes.canvasWrapper} ref={canvasRef}/>\n                </div>\n            </div>\n        </Layout>\n    )\n})\n\nexport default Canvas;","import {Canvas} from 'templates/canvas';\nimport React from 'react';\n\nfunction App() {\n    return (\n        <Canvas/>\n    );\n}\n\nexport default App;\n","import { IEvent } from \"fabric/fabric-impl\";\nimport { RootStore } from \"./rootStore\";\n\nexport enum MouseEventType {\n    MOUSE_UP = \"mouse:up\",\n    MOUSE_DOWN = \"mouse:down\",\n    MOUSE_MOVE = \"mouse:move\",\n}\n\nexport interface MouseEventObject {\n    startCursorPosition: {x: number, y: number},\n    currentCursorPosition: {x: number, y: number},\n}\n\nexport class MouseEventStore {\n    private startCursorPosition = { x: 0, y: 0 };\n    private currentCursorPosition = { x: 0, y: 0 };\n    private observer: Map<MouseEventType, Array<(e: MouseEventObject) => void>> = new Map();\n\n    constructor(private readonly rootStore: RootStore) {\n        this.addEventListeners();\n    }\n\n    subscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\n        if (!this.observer.has(eventType)) {\n            this.observer.set(eventType, []);\n        }\n        \n        this.observer.get(eventType)?.push(listener);\n    }\n\n    unsubscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\n        this.observer.set(eventType, this.observer.get(eventType)?.filter(fn => fn !== listener) || []);\n    }\n\n    private onMouseDown(e: IEvent) {\n        this.startCursorPosition = { ...this.getCursorPosition(e) };\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_DOWN)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }))\n    }\n\n    private onMouseMove(e: IEvent) {\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_MOVE)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }))\n    }\n\n    private onMouseUp(e: IEvent) {\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_UP)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }))\n    }\n\n    private addEventListeners() {\n        const { canvas } = this.rootStore.canvasStore;\n        canvas.on(MouseEventType.MOUSE_DOWN, this.onMouseDown.bind(this));\n        canvas.on(MouseEventType.MOUSE_MOVE, this.onMouseMove.bind(this));\n        canvas.on(MouseEventType.MOUSE_UP, this.onMouseUp.bind(this));\n    }\n\n    private getCursorPosition(e: IEvent) {\n        return this.rootStore.canvasStore.canvas.getPointer(e.e);\n    }\n}","import { makeAutoObservable } from \"mobx\";\nimport { BrushType } from \"models/tools/Brush\";\nimport { RootStore } from \"./rootStore\";\nimport { fabric } from \"fabric\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\n\nconst defaultStyles = {\n    brushType: BrushType.PENCIL,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n}\n\ninterface PathStyles {\n    stroke: string | undefined,\n    strokeWidth: number | undefined,\n}\n\nexport class BrushStore {\n    brushType = defaultStyles.brushType;\n    stroke = defaultStyles.stroke;\n    strokeWidth = defaultStyles.strokeWidth;\n    item: fabric.Path | undefined;\n\n    private readonly canvas: fabric.Canvas;\n    private readonly objectManager: ObjectManagerStore;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        this.canvas = rootStore.canvasStore.canvas;\n        this.objectManager = rootStore.objectManagerStore;\n        this.addReactions();\n    }\n\n    setBrushType(brushType: BrushType) {\n        this.brushType = brushType;\n        this.setFreeDrawingBrush();\n    }\n\n    setStroke(stroke: string | undefined) {\n        this.stroke = stroke || defaultStyles.stroke;\n        this.item?.set(\"stroke\", stroke);\n        this.canvas.freeDrawingBrush.color = this.stroke;\n        this.canvas.renderAll();\n    }\n\n    setStrokeWidth(strokeWidth: number | undefined) {\n        this.strokeWidth = strokeWidth || defaultStyles.strokeWidth;\n        this.item?.set(\"strokeWidth\", strokeWidth);\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\n        this.canvas.renderAll();\n    }\n\n    private setFreeDrawingBrush() {\n        this.canvas.freeDrawingBrush = this.rootStore.brushStore.brushType.getBrush(this.canvas);\n        this.canvas.freeDrawingBrush.color = this.stroke;\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\n    }\n\n    private addReactions() {\n        this.objectManager.subscribe(this.updateObject.bind(this));\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (this.isBrush(object)) {\n            this.item = object as fabric.Path;\n            this.updatePathStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private setPathStyles(styles: PathStyles) {\n        this.setStroke(styles.stroke);\n        this.setStrokeWidth(styles.strokeWidth);\n    }\n\n    private updatePathStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            stroke,\n            strokeWidth,\n        } = this.item;\n\n        this.setPathStyles({\n            stroke: stroke,\n            strokeWidth: strokeWidth,\n        })\n    }\n\n    private isBrush(object: fabric.Object | undefined) {\n        return object?.isType(\"path\");\n    }\n}","import { makeAutoObservable } from \"mobx\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport { RootStore } from \"./rootStore\";\n\nconst defaultStyles = {\n    width: 500,\n    height: 500,\n    backgroundColor: \"#ffffff\",\n}\n\nexport class CanvasStore {\n    width = defaultStyles.width;\n    height = defaultStyles.height;\n    backgroundColor = defaultStyles.backgroundColor;\n    canvasMode = ToolTypes.BRUSH;\n\n    constructor(\n        private readonly rootStore: RootStore,\n        readonly canvas: fabric.Canvas,\n    ) {\n        makeAutoObservable(this);\n        this.canvas.setWidth(this.width);\n        this.canvas.setHeight(this.height);\n        this.canvas.setBackgroundColor(this.backgroundColor, () => { });\n    }\n\n    init() {\n        this.setCanvasMode(this.canvasMode);\n    }\n\n    setCanvasMode(mode: ToolTypes) {\n        this.canvasMode = mode;\n        this.canvas.discardActiveObject().renderAll();\n        this.canvas.isDrawingMode = mode === ToolTypes.BRUSH;\n        this.canvas.defaultCursor = \"default\";\n        this.setSelectable(false);\n\n        if (mode === ToolTypes.BRUSH) {\n            const { brushStore } = this.rootStore;\n            brushStore.setBrushType(brushStore.brushType);\n        } else if (mode === ToolTypes.SELECT) {\n            this.setSelectable(true);\n        } else if (mode === ToolTypes.SHAPE) {\n            this.canvas.defaultCursor = \"crosshair\";\n        } else if (mode === ToolTypes.TEXT) {\n            this.canvas.defaultCursor = \"text\";\n        }\n    }\n\n    private setSelectable(selectable: boolean) {\n        this.canvas.selection = selectable;\n        this.canvas.getObjects().forEach(obj => {\n            obj.selectable = selectable;\n            obj.hoverCursor = selectable ? \"move\" : \"default\";\n        });\n    }\n}","import { IEvent } from \"fabric/fabric-impl\";\nimport { makeAutoObservable, reaction } from \"mobx\";\nimport { ShapeType } from \"models/tools/Shape\";\nimport { CanvasStore } from \"./canvasStore\";\nimport { RootStore } from \"./rootStore\";\n\nexport enum SelectionEventType {\n    SELECTION_CLEARED = \"selection:cleared\",\n    SELECTION_CREATED = \"selection:created\",\n    SELECTION_UPDATED = \"selection:updated\",\n}\n\nexport class ObjectManagerStore {\n    private readonly canvasStore: CanvasStore;\n    private readonly listeners: { [eventName: string]: (e: IEvent) => void }\n    private readonly observer: Set<(object: fabric.Object | undefined) => void> = new Set();\n\n    activeObject: fabric.Object | undefined;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        this.canvasStore = rootStore.canvasStore;\n        this.listeners = {\n            onSelected: this.onSelected.bind(this),\n            onCleared: this.onCleared.bind(this),\n        }\n        this.addEventListeners();\n    }\n\n    private onSelected(e: IEvent) {\n        const { target } = e;\n        if (!target) {\n            return;\n        }\n\n        this.activeObject = target;\n    }\n\n    private onCleared() {\n        this.activeObject = undefined;\n    }\n\n    private addEventListeners() {\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CREATED, this.listeners.onSelected);\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_UPDATED, this.listeners.onSelected);\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CLEARED, this.listeners.onCleared);\n        reaction(\n            () => this.activeObject,\n            () => {\n                console.log(this.activeObject);\n                this.observer.forEach(callback => callback(this.activeObject));\n            },\n        );\n    }\n\n    subscribe(listener: (object: fabric.Object | undefined) => void) {\n        this.observer.add(listener);\n    }\n\n    unsubscribe(listener: (object: fabric.Object | undefined) => void) {\n        this.observer.delete(listener);\n    }\n\n    isRect() {\n        return this.activeObject?.isType(ShapeType.RECT.value);\n    }\n\n    isEllipse() {\n        return this.activeObject?.isType(ShapeType.ELLIPSE.value);\n    }\n\n    isTriangle() {\n        return this.activeObject?.isType(ShapeType.TRIANGLE.value);\n    }\n\n    isShape() {\n        return this.isRect() || this.isEllipse() || this.isTriangle();\n    }\n\n    isPath() {\n        return this.activeObject?.isType(\"path\");\n    }\n\n    isText() {\n        return this.activeObject?.isType(\"i-text\");\n    }\n\n    getObjectTypeName(): string {\n        if (this.isRect()) {\n            return ShapeType.RECT.display;\n        } else if (this.isEllipse()) {\n            return ShapeType.ELLIPSE.display;\n        } else if (this.isTriangle()) {\n            return ShapeType.TRIANGLE.display;\n        } else if (this.isPath()) {\n            return \"패스\";\n        } else if (this.isText()) {\n            return \"텍스트\";\n        } else {\n            return \"오브젝트\";\n        }\n    }\n}","import { IEvent } from \"fabric/fabric-impl\";\nimport { RootStore } from \"./rootStore\";\n\nexport enum ObjectEventType {\n    OBJECT_SCALING = \"object:scaling\",\n    OBJECT_MODIFIED = \"object:modified\",\n}\n\nexport class ObjectEventStore {\n    private observer: Map<ObjectEventType, Set<(e: IEvent) => void>> = new Map();\n\n    constructor(private readonly rootStore: RootStore) {\n        this.addEventListener();\n    }\n\n    private addEventListener() {\n        const {canvas} = this.rootStore.canvasStore;\n        canvas.on(ObjectEventType.OBJECT_SCALING, this.onScaling.bind(this));\n        canvas.on(ObjectEventType.OBJECT_MODIFIED, this.onModified.bind(this));\n    }\n\n    private onScaling(e: IEvent) {\n        this.observer.get(ObjectEventType.OBJECT_SCALING)?.forEach(callbackFn => callbackFn(e));\n    }\n\n    private onModified(e: IEvent) {\n        this.observer.get(ObjectEventType.OBJECT_MODIFIED)?.forEach(callbackFn => callbackFn(e));\n    }\n\n    subscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\n        if (!this.observer.has(eventType)) {\n            this.observer.set(eventType, new Set());\n        }\n\n        this.observer.get(eventType)?.add(listener);\n    }\n\n    unsubscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\n        this.observer.get(eventType)?.delete(listener);\n    }\n}\n\nexport default ObjectEventStore;","import { makeAutoObservable } from \"mobx\";\nimport { ShapeType } from \"models/tools/Shape\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport { MouseEventObject, MouseEventStore, MouseEventType } from \"./mouseEventStore\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\nimport { RootStore } from \"./rootStore\";\n\nconst defaultStyles = {\n    shapeType: ShapeType.ELLIPSE,\n    fill: undefined,\n    strokeWidth: 3,\n    stroke: \"#000000\",\n}\n\ninterface ShapeStyles {\n    fill: string | undefined;\n    strokeWidth: number;\n    stroke: string | undefined;\n}\n\nexport class ShapeStore {\n    private static readonly MIN_OBJECT_SIZE = 30;\n    private readonly canvas: fabric.Canvas;\n    private readonly mouseEventStore: MouseEventStore;\n    private readonly objectManager: ObjectManagerStore;\n    private isDragMode = false;\n\n    item: fabric.Rect | fabric.Triangle | fabric.Ellipse | undefined;\n    shapeType = defaultStyles.shapeType;\n    fill: string | undefined = defaultStyles.fill;\n    strokeWidth = defaultStyles.strokeWidth;\n    stroke: string | undefined = defaultStyles.stroke;\n\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);\n        this.canvas = rootStore.canvasStore.canvas;\n        this.mouseEventStore = rootStore.mouseEventStore;\n        this.objectManager = rootStore.objectManagerStore;\n        this.addEventListeners();\n        this.addReactions();\n    }\n\n    setShapeType(shapeType: ShapeType) {\n        this.shapeType = shapeType;\n    }\n\n    setFill(fill: string | undefined) {\n        this.fill = fill;\n        if (this.item) {\n            this.item.set({ fill: fill });\n            this.canvas.renderAll();\n        }\n    }\n\n    setStroke(stroke: string | undefined) {\n        this.stroke = stroke;\n        if (this.item) {\n            this.item.set({ stroke: stroke });\n            this.canvas.renderAll();\n        }\n    }\n\n    setStrokeWidth(strokeWidth: number) {\n        this.strokeWidth = strokeWidth;\n        if (this.item) {\n            this.item.set({ strokeWidth: strokeWidth });\n            this.canvas.renderAll();\n        }\n    }\n\n    private addReactions() {\n        this.objectManager.subscribe(this.updateObject.bind(this));\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (this.isShape(object)) {\n            this.item = object;\n            this.updateShapeStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private setShapeStyles(styles: ShapeStyles) {\n        this.setFill(styles.fill);\n        this.setStroke(styles.stroke);\n        this.setStrokeWidth(styles.strokeWidth);\n    }\n\n    private updateShapeStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            stroke,\n            strokeWidth,\n            fill,\n        } = this.item;\n\n        this.setShapeStyles({\n            fill: fill === undefined ? defaultStyles.fill : fill as string,\n            stroke: stroke,\n            strokeWidth: strokeWidth || defaultStyles.strokeWidth,\n        })\n    }\n\n    private addEventListeners() {\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.onMouseUp.bind(this));\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_DOWN, this.onMouseDown.bind(this));\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_MOVE, this.onMouseMove.bind(this));\n    }\n\n    private isShapeTool() {\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.SHAPE;\n    }\n\n    private isShape(object: fabric.Object | undefined) {\n        return object?.isType(ShapeType.ELLIPSE.value) || object?.isType(ShapeType.RECT.value) || object?.isType(ShapeType.TRIANGLE.value);\n    }\n\n    private onMouseDown(e: MouseEventObject) {\n        if (!this.isShapeTool()) {\n            return;\n        }\n\n        this.isDragMode = true;\n        this.item = this.shapeType.getShape({\n            left: e.startCursorPosition.x,\n            top: e.startCursorPosition.y,\n            stroke: this.stroke,\n            strokeWidth: this.strokeWidth,\n            fill: this.fill,\n            selectable: false,\n            hoverCursor: \"default\",\n            strokeUniform: true,\n        });\n\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: 0,\n                height: 0,\n            })\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            (this.item as fabric.Ellipse).set({\n                rx: 0,\n                ry: 0,\n            })\n        }\n\n        this.rootStore.canvasStore.canvas.add(this.item);\n    }\n\n    private onMouseMove(e: MouseEventObject) {\n        if (!this.isShapeTool() || !this.isDragMode || !this.item) {\n            return;\n        }\n\n        if (e.currentCursorPosition.x < e.startCursorPosition.x) {\n            this.item.set({ left: Math.abs(e.currentCursorPosition.x) });\n        }\n\n        if (e.currentCursorPosition.y < e.startCursorPosition.y) {\n            this.item.set({ top: Math.abs(e.currentCursorPosition.y) });\n        }\n\n        this.item.set({ flipX: e.currentCursorPosition.x < e.startCursorPosition.x });\n        this.item.set({ flipY: e.currentCursorPosition.y < e.startCursorPosition.y });\n\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x),\n                height: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y),\n            });\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            (this.item as fabric.Ellipse).set({\n                rx: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x) / 2,\n                ry: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y) / 2,\n            })\n        }\n\n        this.rootStore.canvasStore.canvas.renderAll();\n    }\n\n    private onMouseUp(e: MouseEventObject) {\n        if (!this.isShapeTool() || !this.item) {\n            return;\n        }\n\n        this.isDragMode = false;\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.width || ShapeStore.MIN_OBJECT_SIZE),\n                height: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.height || ShapeStore.MIN_OBJECT_SIZE),\n            }).setCoords();\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            const circle = this.item as fabric.Ellipse;\n            circle.set({\n                rx: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.rx || ShapeStore.MIN_OBJECT_SIZE / 2),\n                ry: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.ry || ShapeStore.MIN_OBJECT_SIZE / 2),\n            }).setCoords();\n        }\n\n        const canvasStore = this.rootStore.canvasStore;\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\n        canvasStore.canvas.setActiveObject(this.item);\n        canvasStore.canvas.renderAll();\n\n        this.item = undefined;\n    }\n}","import { makeAutoObservable } from \"mobx\";\nimport { RootStore } from \"./rootStore\";\n\nexport class UIStore {\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);;\n    }\n}","import { MouseEventObject, MouseEventStore, MouseEventType } from \"./mouseEventStore\";\nimport { RootStore } from \"./rootStore\";\nimport { fabric } from \"fabric\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport { ObjectEventStore, ObjectEventType } from \"./objectEventStore\";\nimport { IEvent } from \"fabric/fabric-impl\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\nimport { makeAutoObservable } from \"mobx\";\n\nconst defaultStyles = {\n    FONT_SIZE: 30,\n}\n\ninterface TextStyles {\n    fontSize: number,\n}\n\nexport class TextStore {\n    private readonly objectManager: ObjectManagerStore;\n    private readonly mouseEventStore: MouseEventStore;\n    private readonly objectEventStore: ObjectEventStore;\n    private readonly canvas: fabric.Canvas;\n\n    fontSize = defaultStyles.FONT_SIZE;\n    item: fabric.IText | undefined;\n\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);\n        this.objectManager = rootStore.objectManagerStore;\n        this.mouseEventStore = rootStore.mouseEventStore;\n        this.objectEventStore = rootStore.objectEventStore;\n        this.canvas = rootStore.canvasStore.canvas;\n        this.addEventListener();\n    }\n\n    setFontSize(fontSize: number) {\n        this.fontSize = fontSize;\n        if (this.item) {\n            this.item.set({fontSize: fontSize});\n            this.canvas.renderAll();\n        }\n    }\n\n    private addEventListener() {\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.onMouseUp.bind(this));\n        this.objectEventStore.subscribe(ObjectEventType.OBJECT_MODIFIED, this.onModified.bind(this));\n        this.objectManager.subscribe(this.updateObject.bind(this));\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (object && this.isText(object)) {\n            this.item = object as fabric.IText;\n            this.updateTextStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private updateTextStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            fontSize,\n        } = this.item;\n\n        this.setTextStyles({\n            fontSize: fontSize || defaultStyles.FONT_SIZE,\n        })\n    }\n\n    private setTextStyles(styles: TextStyles) {\n        this.setFontSize(styles.fontSize);\n    }\n\n    private onMouseUp(e: MouseEventObject) {\n        if (!this.isTextTool()) {\n            return;\n        }\n\n        this.item = new fabric.IText(\"텍스트를 입력해주세요\", {\n            top: e.currentCursorPosition.y,\n            left: e.currentCursorPosition.x,\n            fontSize: this.fontSize,\n            lockUniScaling: true,\n        });\n\n        this.item.setControlVisible(\"mt\", false);\n        this.item.setControlVisible(\"mb\", false);\n        this.item.setControlVisible(\"ml\", false);\n        this.item.setControlVisible(\"mr\", false);\n\n        const canvasStore = this.rootStore.canvasStore;\n        canvasStore.canvas.add(this.item);\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\n        canvasStore.canvas.setActiveObject(this.item);\n\n        this.item.selectAll();\n        this.item.enterEditing();\n    }\n\n    private onModified(e: IEvent) {\n        const { target } = e;\n        if (!target || !this.isText(target)) {\n            return;\n        }\n\n        const text = target as fabric.IText;\n        const fontSize = parseInt(((text.fontSize || defaultStyles.FONT_SIZE) * (text.scaleX || 1)).toFixed(0), 10);\n        text.set({\n            scaleX: 1,\n            scaleY: 1,\n        });\n        this.setFontSize(fontSize);\n    }\n\n    private isTextTool() {\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.TEXT;\n    }\n\n    private isText(object: fabric.Object) {\n        return object.isType(\"i-text\");\n    }\n}","import { fabric } from \"fabric\";\nimport { BrushStore } from \"./brushStore\";\nimport { CanvasStore } from \"./canvasStore\";\nimport { MouseEventStore } from \"./mouseEventStore\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\nimport { ObjectEventStore } from \"./objectEventStore\";\nimport { ShapeStore } from \"./shapeStore\";\nimport { UIStore } from \"./UIStore\";\nimport { TextStore } from \"./textStore\";\n\nexport class RootStore {\n    private readonly canvasElement: HTMLCanvasElement;\n    canvasStore: CanvasStore;\n    objectManagerStore: ObjectManagerStore;\n    objectEventStore: ObjectEventStore;\n    mouseEventStore: MouseEventStore;\n    brushStore: BrushStore;\n    shapeStore: ShapeStore;\n    textStore: TextStore;\n    UIStore: UIStore;\n\n    constructor() {\n        this.canvasElement = document.createElement(\"canvas\");\n        document.body.append(this.canvasElement);\n\n        this.canvasStore = new CanvasStore(this, new fabric.Canvas(this.canvasElement));\n        this.objectManagerStore = new ObjectManagerStore(this);\n        this.objectEventStore = new ObjectEventStore(this);\n        this.mouseEventStore = new MouseEventStore(this);\n        this.brushStore = new BrushStore(this);\n        this.shapeStore = new ShapeStore(this);\n        this.textStore = new TextStore(this);\n        this.UIStore = new UIStore(this);\n    }\n\n    init(container: HTMLElement): void {\n        container.append(this.canvasElement.parentElement as Node);\n        this.canvasStore.init();\n    }\n}\n\nexport default new RootStore();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {StoreProvider} from \"./contexts/storeContext\";\nimport rootStore from \"./stores/rootStore\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreProvider value={rootStore}>\n            <App/>\n        </StoreProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}