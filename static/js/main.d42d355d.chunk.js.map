{"version":3,"sources":["models/canvas/ToolTypes.tsx","templates/layout/Layout.tsx","components/tools/ToolButton.tsx","models/canvas/CanvasMode.tsx","models/canvas/CanvasEvent.tsx","models/canvas/Brush.tsx","models/canvas/Shape.tsx","stores/CanvasStore.tsx","contexts/StoreContext.tsx","stores/RootStore.tsx","hooks/useStores.tsx","components/tools/ToolBox.tsx","components/tools/BrushPropBox.tsx","components/tools/ShapePropBox.tsx","components/tools/PropBox.tsx","templates/canvas/Canvas.tsx","App.tsx","index.tsx"],"names":["ToolTypes","useStyles","makeStyles","progressWrapper","display","justifyContent","alignItems","Layout","loading","children","classes","Fragment","CssBaseline","className","CircularProgress","theme","button","cursor","color","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","textAlign","caption","fontSize","selected","background","ToolButton","icon","text","onClick","clsx","CanvasMode","canvasStore","this","canvas","isDrawingMode","selectable","defaultCursor","discardActiveObject","renderAll","resetCanvas","setTool","CanvasModeFactory","selectedTool","SELECT","SelectCanvasMode","BRUSH","BrushCanvasMode","SHAPE","ShapeCanvasMode","MIN_OBJECT_SIZE","CanvasEvent","shareObject","e","startCursorPosition","x","y","currentCursorPosition","isDown","on","MOUSE_UP","handleMouseUp","bind","MOUSE_MOVE","handleMouseMove","MOUSE_DOWN","handleMouseDown","CanvasMouseUpEventFactory","getInstance","handle","getCursorPosition","CanvasMouseDownEventFactory","CanvasMouseMoveEventFactory","getPointer","ShapeCanvasMouseUpEvent","ShapeCanvasMouseDownEvent","ShapeCanvasMouseMoveEvent","object","isType","set","width","Math","max","height","setCoords","circle","radius","shapeType","getShape","left","top","hoverCursor","add","abs","BrushType","value","_values","push","PENCIL","fabric","PencilBrush","CIRCLE","CircleBrush","SPRAY","SprayBrush","values","find","v","ShapeType","options","RECT","Rect","Circle","TRIANGLE","Triangle","CanvasStore","canvasId","_canvas","_width","_height","_backgroundColor","_selectedTool","_selectable","_brushType","_shapeType","makeAutoObservable","el","Canvas","init","select","selection","getObjects","forEach","obj","freeDrawingBrush","getBrush","rootStore","StoreContext","React","createContext","StoreContextProvider","Provider","useStores","useContext","appBarColor","backgroundColor","center","flex","right","ToolBox","observer","AppBar","colorDefault","elevation","Toolbar","variant","title","marginBottom","input","padding","borderRadius","BrushPropBox","Typography","Box","mb","Select","native","onChange","brushType","valueOf","target","label","fullWidth","map","brush","ShapePropBox","shape","root","PropBox","flexDirection","flexBox","contents","flexBasis","canvasWrapper","useEffect","document","getElementById","initCanvas","id","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.d42d355d.chunk.js","sourcesContent":["export enum ToolTypes {\r\n    SELECT,\r\n    BRUSH,\r\n    SHAPE,\r\n}","import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    progressWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    }\r\n}))\r\n\r\nconst Layout = ({ loading, children }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <div>\r\n                {loading ? (\r\n                    <div className={classes.progressWrapper}><CircularProgress /></div>\r\n                ) : children}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    loading?: boolean;\r\n    children: React.ReactElement | React.ReactElement[];\r\n}\r\n\r\nexport default Layout;","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n        color: \"#fff\",\r\n        paddingTop: theme.spacing(0.5),\r\n        paddingBottom: theme.spacing(0.5),\r\n        paddingRight: theme.spacing(3),\r\n        paddingLeft: theme.spacing(3),\r\n        textAlign: \"center\",\r\n    },\r\n    caption: {\r\n        fontSize: \"0.70rem\",\r\n    },\r\n    selected: {\r\n        background: \"linear-gradient(90deg, rgba(172,118,255,1) 0%, rgba(91,91,255,1) 100%)\",\r\n    }\r\n}));\r\n\r\nconst ToolButton = ({icon, text, onClick, selected}: Props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={clsx(classes.button, {\r\n            [classes.selected]: selected,\r\n        })} onClick={onClick}>\r\n            {icon}\r\n            <div className={classes.caption}>{text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    icon: any;\r\n    text: string;\r\n    onClick: (e: React.MouseEvent) => void;\r\n    selected?: boolean;\r\n}\r\n\r\nexport default ToolButton;","import {ToolTypes} from \"./ToolTypes\";\r\nimport {CanvasStore} from \"../../stores/CanvasStore\";\r\n\r\nabstract class CanvasMode {\r\n    constructor(protected canvasStore: CanvasStore) {\r\n    }\r\n\r\n    protected abstract setTool(): void;\r\n\r\n    private resetCanvas() {\r\n        this.canvasStore.canvas.isDrawingMode = false;\r\n        this.canvasStore.selectable = false;\r\n        this.canvasStore.canvas.defaultCursor = \"default\";\r\n        this.canvasStore.canvas.discardActiveObject().renderAll();\r\n    }\r\n\r\n    public select() {\r\n        this.resetCanvas();\r\n        this.setTool();\r\n    }\r\n}\r\n\r\nexport class CanvasModeFactory {\r\n    public static getInstance(canvasStore: CanvasStore): CanvasMode {\r\n        switch (canvasStore.selectedTool) {\r\n            case ToolTypes.SELECT:\r\n                return new SelectCanvasMode(canvasStore);\r\n            case ToolTypes.BRUSH:\r\n                return new BrushCanvasMode(canvasStore);\r\n            case ToolTypes.SHAPE:\r\n                return new ShapeCanvasMode(canvasStore);\r\n            default:\r\n                return new BrushCanvasMode(canvasStore);\r\n        }\r\n    }\r\n}\r\n\r\nclass SelectCanvasMode extends CanvasMode {\r\n    protected setTool(): void {\r\n        this.canvasStore.selectable = true;\r\n    }\r\n}\r\n\r\nclass BrushCanvasMode extends CanvasMode {\r\n    protected setTool(): void {\r\n        this.canvasStore.canvas.isDrawingMode = true;\r\n    }\r\n}\r\n\r\nclass ShapeCanvasMode extends CanvasMode {\r\n    protected setTool(): void {\r\n        this.canvasStore.canvas.defaultCursor = \"crosshair\";\r\n    }\r\n}","import {CanvasStore} from \"../../stores/CanvasStore\";\r\nimport {ToolTypes} from \"./ToolTypes\";\r\nimport {IEvent} from \"fabric/fabric-impl\";\r\nimport {fabric} from \"fabric\";\r\n\r\nconst MIN_OBJECT_SIZE = 10;\r\n\r\ninterface CanvasEventObject {\r\n    e: IEvent,\r\n    canvasStore: CanvasStore,\r\n    startCursorPosition: {x: number, y: number}\r\n    currentCursorPosition: {x: number, y: number}\r\n    isDown: boolean,\r\n}\r\n\r\ninterface ShapeCanvasEvent extends CanvasEventObject {\r\n    object: fabric.Object,\r\n}\r\n\r\nexport class CanvasEvent {\r\n    protected static MOUSE_UP = \"mouse:up\";\r\n    protected static MOUSE_DOWN = \"mouse:down\";\r\n    protected static MOUSE_MOVE = \"mouse:move\";\r\n    private shareObject: CanvasEventObject = {\r\n        e: {} as IEvent,\r\n        canvasStore: this.canvasStore,\r\n        startCursorPosition: {x: 0, y: 0},\r\n        currentCursorPosition: {x: 0, y: 0},\r\n        isDown: false\r\n    };\r\n\r\n    constructor(private readonly canvasStore: CanvasStore) {\r\n    }\r\n\r\n    public init() {\r\n        this.canvasStore.canvas.on(CanvasEvent.MOUSE_UP, this.handleMouseUp.bind(this));\r\n        this.canvasStore.canvas.on(CanvasEvent.MOUSE_MOVE, this.handleMouseMove.bind(this));\r\n        this.canvasStore.canvas.on(CanvasEvent.MOUSE_DOWN, this.handleMouseDown.bind(this));\r\n    }\r\n\r\n    private handleMouseUp(e: IEvent) {\r\n        this.shareObject.e = e;\r\n        this.shareObject.isDown = false;\r\n        CanvasMouseUpEventFactory.getInstance(this.canvasStore)?.handle(this.shareObject);\r\n    }\r\n\r\n    private handleMouseDown(e: IEvent) {\r\n        this.shareObject.e = e;\r\n        this.shareObject.isDown = true;\r\n        this.shareObject.startCursorPosition = {...this.getCursorPosition(e)};\r\n        this.shareObject.currentCursorPosition = {...this.getCursorPosition(e)};\r\n        CanvasMouseDownEventFactory.getInstance(this.canvasStore)?.handle(this.shareObject);\r\n    };\r\n\r\n    private handleMouseMove(e: IEvent) {\r\n        this.shareObject.e = e;\r\n        this.shareObject.currentCursorPosition = {...this.getCursorPosition(e)};\r\n        if (this.shareObject.isDown) {\r\n            CanvasMouseMoveEventFactory.getInstance(this.canvasStore)?.handle(this.shareObject);\r\n        }\r\n    };\r\n\r\n    private getCursorPosition(e: IEvent) {\r\n        return this.canvasStore.canvas.getPointer(e.e);\r\n    }\r\n}\r\n\r\ninterface CanvasEventHandler<T extends CanvasEventObject> {\r\n    handle(e: T): void;\r\n}\r\n\r\nclass CanvasMouseUpEventFactory {\r\n    public static getInstance(canvasStore: CanvasStore): CanvasEventHandler<CanvasEventObject> | null {\r\n        switch (canvasStore.selectedTool) {\r\n            case ToolTypes.SHAPE:\r\n                return new ShapeCanvasMouseUpEvent();\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass CanvasMouseDownEventFactory {\r\n    public static getInstance(canvasStore: CanvasStore): CanvasEventHandler<CanvasEventObject> | null {\r\n        switch (canvasStore.selectedTool) {\r\n            case ToolTypes.SHAPE:\r\n                return new ShapeCanvasMouseDownEvent();\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass CanvasMouseMoveEventFactory {\r\n    public static getInstance(canvasStore: CanvasStore): CanvasEventHandler<CanvasEventObject> | null {\r\n        switch (canvasStore.selectedTool) {\r\n            case ToolTypes.SHAPE:\r\n                return new ShapeCanvasMouseMoveEvent();\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass ShapeCanvasMouseUpEvent implements CanvasEventHandler<ShapeCanvasEvent> {\r\n    handle(e: ShapeCanvasEvent): void {\r\n        if (e.object.isType(\"rect\") || e.object.isType(\"triangle\")) {\r\n            e.object.set({\r\n                width: Math.max(MIN_OBJECT_SIZE, e.object.width || MIN_OBJECT_SIZE),\r\n                height: Math.max(MIN_OBJECT_SIZE, e.object.height || MIN_OBJECT_SIZE),\r\n            }).setCoords();\r\n        } else if (e.object.isType(\"circle\")) {\r\n            const circle = e.object as fabric.Circle;\r\n            circle.set(\"radius\", Math.max(MIN_OBJECT_SIZE, circle.radius || MIN_OBJECT_SIZE))\r\n                .setCoords();\r\n        }\r\n        e.canvasStore.canvas.renderAll();\r\n    }\r\n}\r\n\r\nclass ShapeCanvasMouseDownEvent implements CanvasEventHandler<ShapeCanvasEvent> {\r\n    handle(e: ShapeCanvasEvent): void {\r\n        e.object = e.canvasStore.shapeType.getShape({\r\n            left: e.startCursorPosition.x,\r\n            top: e.startCursorPosition.y,\r\n            selectable: false,\r\n            hoverCursor: \"default\",\r\n        });\r\n\r\n        if (e.object.isType(\"rect\") || e.object.isType(\"triangle\")) {\r\n            e.object.set({\r\n                width: 0,\r\n                height: 0,\r\n            })\r\n        } else if (e.object.isType(\"circle\")) {\r\n            (e.object as fabric.Circle).set(\"radius\", 0);\r\n        }\r\n\r\n        e.canvasStore.canvas.add(e.object);\r\n    }\r\n}\r\n\r\nclass ShapeCanvasMouseMoveEvent implements CanvasEventHandler<ShapeCanvasEvent> {\r\n    handle(e: ShapeCanvasEvent): void {\r\n        if(e.currentCursorPosition.x < e.startCursorPosition.x){\r\n            e.object.set(\"left\", Math.abs(e.currentCursorPosition.x));\r\n        }\r\n\r\n        if(e.currentCursorPosition.y < e.startCursorPosition.y){\r\n            e.object.set(\"top\", Math.abs(e.currentCursorPosition.y));\r\n        }\r\n\r\n        if (e.object.isType(\"rect\") || e.object.isType(\"triangle\")) {\r\n            e.object.set({\r\n                width: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x),\r\n                height: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y),\r\n            });\r\n        } else if (e.object.isType(\"circle\")) {\r\n            (e.object as fabric.Circle).set(\"radius\", Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x));\r\n        }\r\n\r\n        e.canvasStore.canvas.renderAll();\r\n    }\r\n}\r\n\r\n","import {fabric} from \"fabric\";\r\n\r\nexport class BrushType {\r\n    private static readonly _values: BrushType[] = [];\r\n    public static readonly PENCIL = new BrushType(\"pencil\", \"연필\");\r\n    public static readonly CIRCLE = new BrushType(\"circle\", \"원형\");\r\n    public static readonly SPRAY = new BrushType(\"spray\", \"스프레이\");\r\n\r\n    constructor(\r\n        public readonly value: string,\r\n        public readonly display: string,\r\n    ) {\r\n        BrushType._values.push(this);\r\n    }\r\n\r\n    public static values() {\r\n        return this._values;\r\n    }\r\n\r\n    public static valueOf(value: string) {\r\n        return this.values().find(v => v.value === value);\r\n    }\r\n\r\n    public getBrush(canvas: fabric.Canvas) {\r\n        switch (this) {\r\n            case BrushType.PENCIL:\r\n                return new (fabric.PencilBrush as any)(canvas);\r\n            case BrushType.CIRCLE:\r\n                return new (fabric.CircleBrush as any)(canvas);\r\n            case BrushType.SPRAY:\r\n                return new (fabric.SprayBrush as any)(canvas);\r\n            default:\r\n                return new (fabric.PencilBrush as any)(canvas);\r\n        }\r\n    }\r\n}","import {fabric} from \"fabric\";\r\n\r\nexport class ShapeType {\r\n    private static readonly _values: ShapeType[] = [];\r\n    public static readonly RECT = new ShapeType(\"rect\", \"사각형\");\r\n    public static readonly CIRCLE = new ShapeType(\"circle\", \"원\");\r\n    public static readonly TRIANGLE = new ShapeType(\"triangle\", \"삼각형\");\r\n\r\n    constructor(\r\n        public readonly value: string,\r\n        public readonly display: string,\r\n    ) {\r\n        ShapeType._values.push(this);\r\n    }\r\n\r\n    public static values() {\r\n        return this._values;\r\n    }\r\n\r\n    public static valueOf(value: string) {\r\n        return this.values().find(v => v.value === value);\r\n    }\r\n\r\n    public getShape<T extends fabric.IObjectOptions>(options: T) {\r\n        switch (this) {\r\n            case ShapeType.RECT:\r\n                return new fabric.Rect(options);\r\n            case ShapeType.CIRCLE:\r\n                return new fabric.Circle(options);\r\n            case ShapeType.TRIANGLE:\r\n                return new fabric.Triangle(options);\r\n            default:\r\n                return new fabric.Rect(options);\r\n        }\r\n    }\r\n}","import {makeAutoObservable} from \"mobx\";\r\nimport {fabric} from \"fabric\";\r\nimport {ToolTypes} from \"../models/canvas/ToolTypes\";\r\nimport {CanvasModeFactory} from \"../models/canvas/CanvasMode\";\r\nimport {CanvasEvent} from \"../models/canvas/CanvasEvent\";\r\nimport {BrushType} from \"../models/canvas/Brush\";\r\nimport {ShapeType} from \"../models/canvas/Shape\";\r\n\r\nexport class CanvasStore {\r\n    public readonly canvasId = \"canvas\";\r\n    private _canvas = {} as fabric.Canvas;\r\n    private _width = 500;\r\n    private _height = 500;\r\n    private _backgroundColor = \"white\";\r\n    private _selectedTool: ToolTypes = ToolTypes.SELECT;\r\n    private _selectable = false;\r\n    private _brushType = BrushType.PENCIL;\r\n    private _shapeType = ShapeType.RECT;\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    public initCanvas(el: HTMLCanvasElement, options?: fabric.ICanvasOptions) {\r\n        this._canvas = new fabric.Canvas(el, options);\r\n        this.selectedTool = this._selectedTool;\r\n        new CanvasEvent(this).init();\r\n    }\r\n\r\n    get canvas() {\r\n        return this._canvas;\r\n    }\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._width = value;\r\n    }\r\n\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._height = value;\r\n    }\r\n\r\n    get backgroundColor(): string {\r\n        return this._backgroundColor;\r\n    }\r\n\r\n    set backgroundColor(value: string) {\r\n        this._backgroundColor = value;\r\n    }\r\n\r\n    get selectedTool(): ToolTypes {\r\n        return this._selectedTool;\r\n    }\r\n\r\n    set selectedTool(value: ToolTypes) {\r\n        this._selectedTool = value;\r\n        CanvasModeFactory.getInstance(this).select();\r\n    }\r\n\r\n    get selectable(): boolean {\r\n        return this._selectable;\r\n    }\r\n\r\n    set selectable(value: boolean) {\r\n        this.canvas.selection = value;\r\n        this.canvas.getObjects().forEach(obj => {\r\n            obj.selectable = value;\r\n            obj.hoverCursor = value ? \"move\" : \"default\";\r\n        });\r\n    }\r\n\r\n    get brushType(): BrushType {\r\n        return this._brushType;\r\n    }\r\n\r\n    set brushType(value: BrushType) {\r\n        this._brushType = value;\r\n        this.canvas.freeDrawingBrush = value.getBrush(this.canvas);\r\n    }\r\n\r\n    get shapeType(): ShapeType {\r\n        return this._shapeType;\r\n    }\r\n\r\n    set shapeType(value: ShapeType) {\r\n        this._shapeType = value;\r\n    }\r\n}","import React from \"react\";\r\nimport {RootStore} from \"../stores/RootStore\";\r\n\r\nconst rootStore = new RootStore();\r\nexport const StoreContext = React.createContext<RootStore>(rootStore);\r\nexport const StoreContextProvider = ({children}: StoreProviderProps) => {\r\n    return (\r\n        <StoreContext.Provider value={rootStore}>\r\n            {children}\r\n        </StoreContext.Provider>\r\n    )\r\n}\r\n\r\ninterface StoreProviderProps {\r\n    children: JSX.Element;\r\n}","import {CanvasStore} from \"./CanvasStore\";\r\n\r\nexport class RootStore {\r\n    public readonly canvasStore;\r\n\r\n    constructor() {\r\n        this.canvasStore = new CanvasStore();\r\n    }\r\n}","import React from \"react\";\r\nimport {RootStore} from \"../stores/RootStore\";\r\nimport {StoreContext} from \"../contexts/StoreContext\";\r\n\r\nexport const useStores = (): RootStore => React.useContext(StoreContext);","import React from \"react\";\r\nimport {AppBar, Toolbar} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\nimport ToolButton from \"./ToolButton\";\r\nimport MouseIcon from '@material-ui/icons/Mouse';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport BrushIcon from \"@material-ui/icons/Brush\";\r\nimport {ToolTypes} from \"../../models/canvas/ToolTypes\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    appBarColor: {\r\n        backgroundColor: \"rgba(30,30,30,0.95)\",\r\n    },\r\n    left: {\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n    },\r\n    right: {\r\n        justifyContent: \"flex-end\",\r\n    }\r\n}));\r\n\r\nconst ToolBox = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore} = useStores();\r\n\r\n    return (\r\n        <AppBar\r\n            classes={{\r\n                colorDefault: classes.appBarColor,\r\n            }}\r\n            color={\"default\"}\r\n            elevation={0}\r\n        >\r\n            <Toolbar variant={\"dense\"}>\r\n                <div className={classes.left}>\r\n                </div>\r\n                <div className={classes.center}>\r\n                    <ToolButton\r\n                        icon={<MouseIcon/>}\r\n                        text={\"선택\"}\r\n                        onClick={() => canvasStore.selectedTool = ToolTypes.SELECT}\r\n                        selected={canvasStore.selectedTool === ToolTypes.SELECT}\r\n                    />\r\n                    <ToolButton\r\n                        icon={<BrushIcon/>}\r\n                        text={\"브러시\"}\r\n                        onClick={() => canvasStore.selectedTool = ToolTypes.BRUSH}\r\n                        selected={canvasStore.selectedTool === ToolTypes.BRUSH}\r\n                    />\r\n                    <ToolButton\r\n                        icon={<DashboardIcon/>}\r\n                        text={\"셰이프\"}\r\n                        onClick={() => canvasStore.selectedTool = ToolTypes.SHAPE}\r\n                        selected={canvasStore.selectedTool === ToolTypes.SHAPE}\r\n                    />\r\n                </div>\r\n                <div className={classes.right}>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n})\r\n\r\nexport default ToolBox;","import {Box, Select, Typography} from \"@material-ui/core\";\r\nimport {BrushType} from \"../../models/canvas/Brush\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    input: {\r\n        padding: theme.spacing(1),\r\n        borderRadius: 4,\r\n        backgroundColor: \"#fff\",\r\n    }\r\n}))\r\n\r\nconst BrushPropBox = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore} = useStores();\r\n\r\n    const handleBrushChange = (e: any) => {\r\n        canvasStore.brushType = BrushType.valueOf(e.target.value) || BrushType.PENCIL;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.title}>\r\n                <Typography variant={\"h6\"} color={\"primary\"}>브러시</Typography>\r\n            </div>\r\n            <div>\r\n                <Box mb={1}>\r\n                    <Typography variant={\"caption\"}>모양</Typography>\r\n                </Box>\r\n                <Select\r\n                    className={classes.input}\r\n                    native\r\n                    onChange={handleBrushChange}\r\n                    value={canvasStore.brushType.value}\r\n                    label=\"브러시 모양\"\r\n                    fullWidth\r\n                >\r\n                    {BrushType.values().map(brush => (\r\n                        <option key={brush.value} value={brush.value}>{brush.display}</option>\r\n                    ))}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default BrushPropBox;","import {Box, Select, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {observer} from \"mobx-react\";\r\nimport {ShapeType} from \"../../models/canvas/Shape\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    input: {\r\n        padding: theme.spacing(1),\r\n        borderRadius: 4,\r\n        backgroundColor: \"#fff\",\r\n    }\r\n}))\r\n\r\nconst ShapePropBox = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore} = useStores();\r\n\r\n    const handleShapeChange = (e: any) => {\r\n        canvasStore.shapeType = ShapeType.valueOf(e.target.value) || ShapeType.CIRCLE;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.title}>\r\n                <Typography variant={\"h6\"} color={\"primary\"}>셰이프</Typography>\r\n            </div>\r\n            <div>\r\n                <Box mb={1}>\r\n                    <Typography variant={\"caption\"}>모양</Typography>\r\n                </Box>\r\n                <Select\r\n                    className={classes.input}\r\n                    native\r\n                    onChange={handleShapeChange}\r\n                    value={canvasStore.shapeType.value}\r\n                    label=\"셰이프 모양\"\r\n                    fullWidth\r\n                >\r\n                    {ShapeType.values().map(shape => (\r\n                        <option key={shape.value} value={shape.value}>{shape.display}</option>\r\n                    ))}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ShapePropBox;","import React from \"react\";\r\nimport {observer} from \"mobx-react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\nimport {ToolTypes} from \"../../models/canvas/ToolTypes\";\r\nimport BrushPropBox from \"./BrushPropBox\";\r\nimport ShapePropBox from \"./ShapePropBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n    }\r\n}));\r\n\r\nconst PropBox = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore} = useStores();\r\n    const selectedTool = canvasStore.selectedTool;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {selectedTool === ToolTypes.BRUSH && <BrushPropBox/>}\r\n            {selectedTool === ToolTypes.SHAPE && (<ShapePropBox/>)}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PropBox;","import React from \"react\";\r\nimport {Layout} from \"../layout\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {PropBox, ToolBox} from \"../../components/tools\";\r\nimport {observer} from \"mobx-react\";\r\nimport {Toolbar} from \"@material-ui/core\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\n\r\nconst leftMenuWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n    },\r\n    flexBox: {\r\n        display: \"flex\",\r\n        flex: 1,\r\n    },\r\n    contents: {\r\n        display: \"flex\",\r\n    },\r\n    left: {\r\n        flexBasis: `${leftMenuWidth}px`,\r\n        backgroundColor: \"#f0f0f0\",\r\n    },\r\n    canvasWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        backgroundColor: \"#c0c0c0\",\r\n        padding: theme.spacing(3),\r\n    },\r\n}))\r\n\r\nconst Canvas = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore} = useStores();\r\n\r\n    React.useEffect(() => {\r\n        const el = document.getElementById(canvasStore.canvasId) as HTMLCanvasElement;\r\n        canvasStore.initCanvas(el, {\r\n            width: canvasStore.width,\r\n            height: canvasStore.height,\r\n            backgroundColor: canvasStore.backgroundColor,\r\n        });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Layout>\r\n            <ToolBox/>\r\n            <div className={classes.root}>\r\n                <Toolbar variant={\"dense\"}/>\r\n                <div className={classes.flexBox}>\r\n                    <div className={classes.left}>\r\n                        <PropBox/>\r\n                    </div>\r\n                    <div className={classes.canvasWrapper}>\r\n                        <canvas id={canvasStore.canvasId}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default Canvas;","import {Canvas} from 'templates/canvas';\r\nimport React from 'react';\r\n\r\nfunction App() {\r\n    return (\r\n        <Canvas/>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {StoreContextProvider} from \"./contexts/StoreContext\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <StoreContextProvider>\r\n            <App/>\r\n        </StoreContextProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}