{"version":3,"sources":["models/color/CommonColor.tsx","templates/layout/Layout.tsx","components/tools/ToolButton.tsx","models/canvas/ToolTypes.tsx","models/canvas/CanvasMode.tsx","models/canvas/Shape.tsx","models/canvas/ShapeCanvasEvent.tsx","models/canvas/TextCanvasEvent.tsx","models/canvas/CanvasEvent.tsx","models/canvas/Brush.tsx","stores/CanvasStore.tsx","utils/FileUtils.tsx","contexts/StoreContext.tsx","stores/RootStore.tsx","hooks/useStores.tsx","components/tools/MenuToolButton.tsx","components/tools/ToolBox.tsx","components/input/Range.tsx","components/input/ColorSelect.tsx","components/tools/BrushPropBox.tsx","components/tools/ShapePropBox.tsx","components/tools/PropBox.tsx","templates/canvas/Canvas.tsx","App.tsx","index.tsx"],"names":["CommonColor","useStyles","makeStyles","progressWrapper","display","justifyContent","alignItems","Layout","loading","children","classes","Fragment","CssBaseline","className","CircularProgress","ToolTypes","theme","button","cursor","color","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","textAlign","caption","fontSize","selected","background","BACKGROUND_GRADIENT","ToolButton","icon","text","onClick","clsx","CanvasMode","canvasStore","this","canvas","isDrawingMode","selectable","defaultCursor","discardActiveObject","renderAll","resetCanvas","setTool","CanvasModeFactory","selectedTool","SELECT","SelectCanvasMode","BRUSH","BrushCanvasMode","SHAPE","ShapeCanvasMode","TEXT","TextCanvasMode","DefaultCanvasMode","ShapeType","value","_values","push","options","RECT","fabric","Rect","ELLIPSE","Ellipse","TRIANGLE","Triangle","values","find","v","MIN_OBJECT_SIZE","ShapeCanvasMouseUpEvent","e","object","isType","set","width","Math","max","height","setCoords","circle","rx","ry","setActiveObject","ShapeCanvasMouseDownEvent","shapeType","getShape","left","startCursorPosition","x","top","y","hasBorder","stroke","strokeWidth","fill","hoverCursor","add","ShapeCanvasMouseMoveEvent","currentCursorPosition","abs","TextCanvasMouseUpEvent","IText","selectAll","enterEditing","TextCanvasMouseDownEvent","TextCanvasMouseMoveEvent","CanvasEvent","shareObject","isDown","on","MOUSE_UP","handleMouseUp","bind","MOUSE_MOVE","handleMouseMove","MOUSE_DOWN","handleMouseDown","SELECTION_CREATED","handleSelectObject","SELECTION_UPDATED","SELECTION_CLEARED","handleDeSelectObject","activeObject","getActiveObject","activeObjects","getActiveObjects","undefined","CanvasMouseUpEventFactory","getInstance","handle","getCursorPosition","CanvasMouseDownEventFactory","CanvasMouseMoveEventFactory","getPointer","BrushType","PENCIL","PencilBrush","CIRCLE","CircleBrush","SPRAY","SprayBrush","MimeType","CanvasStore","canvasId","_canvas","_width","_height","_backgroundColor","_selectedTool","_selectable","_brushType","_shapeType","_thickness","_color","_activeObject","_activeObjects","makeAutoObservable","el","Canvas","init","select","selection","getObjects","forEach","obj","freeDrawingBrush","getBrush","rootStore","StoreContext","React","createContext","StoreContextProvider","Provider","useStores","useContext","FileUtils","fileName","blob","Blob","type","objectURL","window","URL","createObjectURL","write","dataURL","a","document","createElement","download","href","click","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","backgroundColor","palette","primary","main","common","white","MenuItem","MenuToolButton","useState","anchorEl","setAnchorEl","inputRef","useRef","handleClose","onChange","target","files","item","read","then","jsonString","loadFromJSON","catch","console","error","ref","style","accept","event","currentTarget","keepMounted","open","Boolean","onClose","current","ListItemIcon","ListItemText","writeText","JSON","stringify","toJSON","fullQuality","toDataURL","appBarColor","center","flex","right","ToolBox","observer","AppBar","colorDefault","Toolbar","variant","CANVAS","label","Range","prefix","Typography","Input","margin","inputProps","min","endAdornment","InputAdornment","position","Slider","newValue","colorBox","borderStyle","borderColor","marginBottom","ColorSelect","onChangeComplete","hex","Popover","disableAlpha","flexDirection","title","borderRadius","padding","marginRight","BACKGROUND_GRADIENT_HOVER","propBoxWrapper","propBox","BrushPropBox","handleBrushChange","brushType","Box","mb","faPencilAlt","size","faSprayCan","faCircle","thickness","p","Divider","ShapePropBox","handleShapeChange","cx","cy","r","points","PropBox","flexBox","contents","flexBasis","canvasWrapper","useEffect","getElementById","initCanvas","id","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.820cb234.chunk.js","sourcesContent":["export enum CommonColor {\n    BACKGROUND_GRADIENT = \"linear-gradient(90deg, rgba(172,118,255,1) 0%, rgba(91,91,255,1) 100%)\",\n    BACKGROUND_GRADIENT_HOVER = \"linear-gradient(90deg, rgba(172,118,255,.4) 0%, rgba(91,91,255,.4) 100%)\",\n}","import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(() => ({\n    progressWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    }\n}))\n\nconst Layout = ({ loading, children }: Props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <div>\n                {loading ? (\n                    <div className={classes.progressWrapper}><CircularProgress /></div>\n                ) : children}\n            </div>\n        </React.Fragment>\n    )\n}\n\ninterface Props {\n    loading?: boolean;\n    children: React.ReactElement | React.ReactElement[];\n}\n\nexport default Layout;","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport clsx from \"clsx\";\nimport {CommonColor} from \"../../models/color/CommonColor\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: \"inline-block\",\n        cursor: \"pointer\",\n        color: \"#fff\",\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        textAlign: \"center\",\n    },\n    caption: {\n        fontSize: \"0.70rem\",\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n    }\n}));\n\nconst ToolButton = ({icon, text, onClick, selected}: Props) => {\n    const classes = useStyles();\n    return (\n        <div className={clsx(classes.button, {\n            [classes.selected]: selected,\n        })} onClick={onClick}>\n            {icon}\n            <div className={classes.caption}>{text}</div>\n        </div>\n    )\n}\n\ninterface Props {\n    icon: any;\n    text: string;\n    onClick: (event: React.MouseEvent<HTMLElement>) => void;\n    selected?: boolean;\n}\n\nexport default ToolButton;","export enum ToolTypes {\n    SELECT,\n    BRUSH,\n    SHAPE,\n    TEXT,\n    CANVAS,\n}","import {ToolTypes} from \"./ToolTypes\";\nimport {CanvasStore} from \"../../stores/CanvasStore\";\n\nabstract class CanvasMode {\n    constructor(protected canvasStore: CanvasStore) {\n    }\n\n    protected abstract setTool(): void;\n\n    private resetCanvas() {\n        this.canvasStore.canvas.isDrawingMode = false;\n        this.canvasStore.selectable = false;\n        this.canvasStore.canvas.defaultCursor = \"default\";\n        this.canvasStore.canvas.discardActiveObject().renderAll();\n    }\n\n    public select() {\n        this.resetCanvas();\n        this.setTool();\n    }\n}\n\nexport class CanvasModeFactory {\n    public static getInstance(canvasStore: CanvasStore): CanvasMode {\n        switch (canvasStore.selectedTool) {\n            case ToolTypes.SELECT:\n                return new SelectCanvasMode(canvasStore);\n            case ToolTypes.BRUSH:\n                return new BrushCanvasMode(canvasStore);\n            case ToolTypes.SHAPE:\n                return new ShapeCanvasMode(canvasStore);\n            case ToolTypes.TEXT:\n                return new TextCanvasMode(canvasStore);\n            default:\n                return new DefaultCanvasMode(canvasStore);\n        }\n    }\n}\n\nclass SelectCanvasMode extends CanvasMode {\n    protected setTool(): void {\n        this.canvasStore.selectable = true;\n    }\n}\n\nclass BrushCanvasMode extends CanvasMode {\n    protected setTool(): void {\n        this.canvasStore.canvas.isDrawingMode = true;\n    }\n}\n\nclass ShapeCanvasMode extends CanvasMode {\n    protected setTool(): void {\n        this.canvasStore.canvas.defaultCursor = \"crosshair\";\n    }\n}\n\nclass TextCanvasMode extends CanvasMode {\n    protected setTool(): void {\n        this.canvasStore.canvas.defaultCursor = \"text\";\n    }\n}\n\nclass DefaultCanvasMode extends CanvasMode {\n    protected setTool(): void {\n        //\n    }\n}","import {fabric} from \"fabric\";\n\nexport class ShapeType {\n    private static readonly _values: ShapeType[] = [];\n    public static readonly RECT = new ShapeType(\"rect\", \"사각형\");\n    public static readonly ELLIPSE = new ShapeType(\"ellipse\", \"원\");\n    public static readonly TRIANGLE = new ShapeType(\"triangle\", \"삼각형\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        ShapeType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getShape<T extends fabric.IObjectOptions>(options: T) {\n        switch (this) {\n            case ShapeType.RECT:\n                return new fabric.Rect(options);\n            case ShapeType.ELLIPSE:\n                return new fabric.Ellipse(options);\n            case ShapeType.TRIANGLE:\n                return new fabric.Triangle(options);\n            default:\n                return new fabric.Rect(options);\n        }\n    }\n}","import {CanvasEventHandler, CanvasEventObject} from \"./CanvasEventModel\";\nimport {ShapeType} from \"./Shape\";\nimport {ToolTypes} from \"./ToolTypes\";\nimport {fabric} from \"fabric\";\n\nconst MIN_OBJECT_SIZE = 10;\n\ninterface ShapeCanvasEvent extends CanvasEventObject {\n    object: fabric.Object,\n}\n\nexport class ShapeCanvasMouseUpEvent implements CanvasEventHandler<ShapeCanvasEvent> {\n    handle(e: ShapeCanvasEvent): void {\n        if (e.object.isType(ShapeType.RECT.value) || e.object.isType(ShapeType.TRIANGLE.value)) {\n            e.object.set({\n                width: Math.max(MIN_OBJECT_SIZE, e.object.width || MIN_OBJECT_SIZE),\n                height: Math.max(MIN_OBJECT_SIZE, e.object.height || MIN_OBJECT_SIZE),\n            }).setCoords();\n        } else if (e.object.isType(ShapeType.ELLIPSE.value)) {\n            const circle = e.object as fabric.Ellipse;\n            circle.set({\n                rx: Math.max(MIN_OBJECT_SIZE / 2, circle.rx || MIN_OBJECT_SIZE / 2),\n                ry: Math.max(MIN_OBJECT_SIZE / 2, circle.ry || MIN_OBJECT_SIZE / 2),\n            }).setCoords();\n        }\n\n        e.canvasStore.selectedTool = ToolTypes.SELECT;\n        e.canvasStore.canvas.setActiveObject(e.object);\n        e.canvasStore.canvas.renderAll();\n    }\n}\n\nexport class ShapeCanvasMouseDownEvent implements CanvasEventHandler<ShapeCanvasEvent> {\n    handle(e: ShapeCanvasEvent): void {\n        e.object = e.canvasStore.shapeType.getShape({\n            left: e.startCursorPosition.x,\n            top: e.startCursorPosition.y,\n            hasBorder: true,\n            stroke: \"#000\",\n            strokeWidth: 3,\n            fill: \"transparent\",\n            selectable: false,\n            hoverCursor: \"default\",\n        });\n\n        if (e.object.isType(ShapeType.RECT.value) || e.object.isType(ShapeType.TRIANGLE.value)) {\n            e.object.set({\n                width: 0,\n                height: 0,\n            })\n        } else if (e.object.isType(ShapeType.ELLIPSE.value)) {\n            (e.object as fabric.Ellipse).set({\n                rx: 0,\n                ry: 0,\n            })\n        }\n\n        e.canvasStore.canvas.add(e.object);\n    }\n}\n\nexport class ShapeCanvasMouseMoveEvent implements CanvasEventHandler<ShapeCanvasEvent> {\n    handle(e: ShapeCanvasEvent): void {\n        if (e.currentCursorPosition.x < e.startCursorPosition.x) {\n            e.object.set(\"left\", Math.abs(e.currentCursorPosition.x));\n        }\n\n        if (e.currentCursorPosition.y < e.startCursorPosition.y) {\n            e.object.set(\"top\", Math.abs(e.currentCursorPosition.y));\n        }\n\n        e.object.set(\"flipX\", e.currentCursorPosition.x < e.startCursorPosition.x);\n        e.object.set(\"flipY\", e.currentCursorPosition.y < e.startCursorPosition.y);\n\n        if (e.object.isType(ShapeType.RECT.value) || e.object.isType(ShapeType.TRIANGLE.value)) {\n            e.object.set({\n                width: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x),\n                height: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y),\n            });\n        } else if (e.object.isType(ShapeType.ELLIPSE.value)) {\n            (e.object as fabric.Ellipse).set({\n                rx: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x) / 2,\n                ry: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y) / 2,\n            })\n        }\n\n        e.canvasStore.canvas.renderAll();\n    }\n}\n","import { fabric } from \"fabric\";\nimport { CanvasEventHandler, CanvasEventObject } from \"./CanvasEventModel\";\nimport { ToolTypes } from \"./ToolTypes\";\n\ninterface TextCanvasEvent extends CanvasEventObject {\n    object: fabric.IText,\n}\n\nexport class TextCanvasMouseUpEvent implements CanvasEventHandler<TextCanvasEvent> {\n    handle(e: TextCanvasEvent): void {\n        e.object = new fabric.IText(\"텍스트를 입력해주세요\", {\n            top: e.currentCursorPosition.y,\n            left: e.currentCursorPosition.x,\n            fontSize: 24,\n        });\n\n        e.canvasStore.canvas.add(e.object);\n        e.canvasStore.selectedTool = ToolTypes.SELECT;\n        e.canvasStore.canvas.setActiveObject(e.object);\n\n        e.object.selectAll();\n        e.object.enterEditing();\n    }\n}\n\nexport class TextCanvasMouseDownEvent implements CanvasEventHandler<TextCanvasEvent> {\n    handle(e: TextCanvasEvent): void {\n    }\n}\n\nexport class TextCanvasMouseMoveEvent implements CanvasEventHandler<TextCanvasEvent> {\n    handle(e: TextCanvasEvent): void {\n    }\n}\n","import { CanvasStore } from \"../../stores/CanvasStore\";\nimport { ToolTypes } from \"./ToolTypes\";\nimport { IEvent } from \"fabric/fabric-impl\";\nimport { CanvasEventHandler, CanvasEventObject } from \"./CanvasEventModel\";\nimport { ShapeCanvasMouseDownEvent, ShapeCanvasMouseMoveEvent, ShapeCanvasMouseUpEvent } from \"./ShapeCanvasEvent\";\nimport { TextCanvasMouseDownEvent, TextCanvasMouseMoveEvent, TextCanvasMouseUpEvent } from \"./TextCanvasEvent\";\n\nexport class CanvasEvent {\n    protected static MOUSE_UP = \"mouse:up\";\n    protected static MOUSE_DOWN = \"mouse:down\";\n    protected static MOUSE_MOVE = \"mouse:move\";\n    protected static SELECTION_CLEARED = \"selection:cleared\";\n    protected static SELECTION_CREATED = \"selection:created\";\n    protected static SELECTION_UPDATED = \"selection:updated\";\n\n    private shareObject: CanvasEventObject = {\n        e: {} as IEvent,\n        canvasStore: this.canvasStore,\n        startCursorPosition: { x: 0, y: 0 },\n        currentCursorPosition: { x: 0, y: 0 },\n        isDown: false\n    };\n\n    constructor(private readonly canvasStore: CanvasStore) {\n    }\n\n    public init() {\n        const canvas = this.canvasStore.canvas;\n        canvas.on(CanvasEvent.MOUSE_UP, this.handleMouseUp.bind(this));\n        canvas.on(CanvasEvent.MOUSE_MOVE, this.handleMouseMove.bind(this));\n        canvas.on(CanvasEvent.MOUSE_DOWN, this.handleMouseDown.bind(this));\n        canvas.on(CanvasEvent.SELECTION_CREATED, this.handleSelectObject.bind(this));\n        canvas.on(CanvasEvent.SELECTION_UPDATED, this.handleSelectObject.bind(this));\n        canvas.on(CanvasEvent.SELECTION_CLEARED, this.handleDeSelectObject.bind(this));\n    }\n\n    private handleSelectObject() {\n        const canvas = this.canvasStore.canvas;\n        this.canvasStore.activeObject = canvas.getActiveObject();\n        this.canvasStore.activeObjects = canvas.getActiveObjects();\n    }\n\n    private handleDeSelectObject() {\n        this.canvasStore.activeObject = undefined;\n        this.canvasStore.activeObjects = [];\n    }\n\n    private handleMouseUp(e: IEvent) {\n        this.shareObject.e = e;\n        this.shareObject.isDown = false;\n        CanvasMouseUpEventFactory.getInstance(this.canvasStore)?.handle(this.shareObject);\n    }\n\n    private handleMouseDown(e: IEvent) {\n        this.shareObject.e = e;\n        this.shareObject.isDown = true;\n        this.shareObject.startCursorPosition = { ...this.getCursorPosition(e) };\n        this.shareObject.currentCursorPosition = { ...this.getCursorPosition(e) };\n        CanvasMouseDownEventFactory.getInstance(this.canvasStore)?.handle(this.shareObject);\n    };\n\n    private handleMouseMove(e: IEvent) {\n        this.shareObject.e = e;\n        this.shareObject.currentCursorPosition = { ...this.getCursorPosition(e) };\n        if (this.shareObject.isDown) {\n            CanvasMouseMoveEventFactory.getInstance(this.canvasStore)?.handle(this.shareObject);\n        }\n    };\n\n    private getCursorPosition(e: IEvent) {\n        return this.canvasStore.canvas.getPointer(e.e);\n    }\n}\n\nclass CanvasMouseUpEventFactory {\n    public static getInstance(canvasStore: CanvasStore): CanvasEventHandler<CanvasEventObject> | null {\n        switch (canvasStore.selectedTool) {\n            case ToolTypes.SHAPE:\n                return new ShapeCanvasMouseUpEvent();\n            case ToolTypes.TEXT:\n                return new TextCanvasMouseUpEvent();\n            default:\n                return null;\n        }\n    }\n}\n\nclass CanvasMouseDownEventFactory {\n    public static getInstance(canvasStore: CanvasStore): CanvasEventHandler<CanvasEventObject> | null {\n        switch (canvasStore.selectedTool) {\n            case ToolTypes.SHAPE:\n                return new ShapeCanvasMouseDownEvent();\n            case ToolTypes.TEXT:\n                return new TextCanvasMouseDownEvent();\n            default:\n                return null;\n        }\n    }\n}\n\nclass CanvasMouseMoveEventFactory {\n    public static getInstance(canvasStore: CanvasStore): CanvasEventHandler<CanvasEventObject> | null {\n        switch (canvasStore.selectedTool) {\n            case ToolTypes.SHAPE:\n                return new ShapeCanvasMouseMoveEvent();\n            case ToolTypes.TEXT:\n                return new TextCanvasMouseMoveEvent();\n            default:\n                return null;\n        }\n    }\n}\n\n\n","import {fabric} from \"fabric\";\n\nexport class BrushType {\n    private static readonly _values: BrushType[] = [];\n    public static readonly PENCIL = new BrushType(\"pencil\", \"연필\");\n    public static readonly CIRCLE = new BrushType(\"circle\", \"원형\");\n    public static readonly SPRAY = new BrushType(\"spray\", \"스프레이\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        BrushType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getBrush(canvas: fabric.Canvas) {\n        switch (this) {\n            case BrushType.PENCIL:\n                return new (fabric.PencilBrush as any)(canvas);\n            case BrushType.CIRCLE:\n                return new (fabric.CircleBrush as any)(canvas);\n            case BrushType.SPRAY:\n                return new (fabric.SprayBrush as any)(canvas);\n            default:\n                return new (fabric.PencilBrush as any)(canvas);\n        }\n    }\n}","import {makeAutoObservable} from \"mobx\";\nimport {fabric} from \"fabric\";\nimport {ToolTypes} from \"../models/canvas/ToolTypes\";\nimport {CanvasModeFactory} from \"../models/canvas/CanvasMode\";\nimport {CanvasEvent} from \"../models/canvas/CanvasEvent\";\nimport {BrushType} from \"../models/canvas/Brush\";\nimport {ShapeType} from \"../models/canvas/Shape\";\n\nexport class CanvasStore {\n    public readonly canvasId = \"canvas\";\n    private _canvas = {} as fabric.Canvas;\n    private _width = 500;\n    private _height = 500;\n    private _backgroundColor = \"white\";\n    private _selectedTool: ToolTypes = ToolTypes.SELECT;\n    private _selectable = false;\n    private _brushType = BrushType.PENCIL;\n    private _shapeType = ShapeType.RECT;\n    private _thickness = 1;\n    private _color = \"#000000\";\n    private _activeObject: fabric.Object | undefined;\n    private _activeObjects: fabric.Object[] = [];\n\n    constructor() {\n        makeAutoObservable(this);\n    }\n\n    public initCanvas(el: HTMLCanvasElement, options?: fabric.ICanvasOptions) {\n        this._canvas = new fabric.Canvas(el, options);\n        this.selectedTool = this._selectedTool;\n        new CanvasEvent(this).init();\n    }\n\n    get canvas() {\n        return this._canvas;\n    }\n\n    get width(): number {\n        return this._width;\n    }\n\n    set width(value: number) {\n        this._width = value;\n    }\n\n    get height(): number {\n        return this._height;\n    }\n\n    set height(value: number) {\n        this._height = value;\n    }\n\n    get backgroundColor(): string {\n        return this._backgroundColor;\n    }\n\n    set backgroundColor(value: string) {\n        this._backgroundColor = value;\n    }\n\n    get selectedTool(): ToolTypes {\n        return this._selectedTool;\n    }\n\n    set selectedTool(value: ToolTypes) {\n        this._selectedTool = value;\n        CanvasModeFactory.getInstance(this).select();\n    }\n\n    get selectable(): boolean {\n        return this._selectable;\n    }\n\n    set selectable(value: boolean) {\n        this.canvas.selection = value;\n        this.canvas.getObjects().forEach(obj => {\n            obj.selectable = value;\n            obj.hoverCursor = value ? \"move\" : \"default\";\n        });\n    }\n\n    get brushType(): BrushType {\n        return this._brushType;\n    }\n\n    set brushType(value: BrushType) {\n        this._brushType = value;\n        this.canvas.freeDrawingBrush = value.getBrush(this.canvas);\n        this.canvas.freeDrawingBrush.width = this._thickness;\n        this.canvas.freeDrawingBrush.color = this._color;\n    }\n\n    get shapeType(): ShapeType {\n        return this._shapeType;\n    }\n\n    set shapeType(value: ShapeType) {\n        this._shapeType = value;\n    }\n\n    get activeObject(): fabric.Object | undefined {\n        return this._activeObject;\n    }\n\n    set activeObject(value: fabric.Object | undefined) {\n        this._activeObject = value;\n    }\n\n    get activeObjects(): fabric.Object[] {\n        return this._activeObjects;\n    }\n\n    set activeObjects(value: fabric.Object[]) {\n        this._activeObjects = value;\n    }\n\n    get thickness(): number {\n        return this._thickness;\n    }\n\n    set thickness(value: number) {\n        this._thickness = value;\n        this.canvas.freeDrawingBrush.width = value;\n    }\n\n    get color() {\n        return this._color;\n    }\n\n    set color(value: string) {\n        this._color = value;\n        this.canvas.freeDrawingBrush.color = value;\n    }\n}","enum MimeType {\n    TEXT = \"text/plain\",\n}\n\nexport class FileUtils {\n    public static writeText(fileName: string, text: string) {\n        const blob = new Blob([text], { type: MimeType.TEXT });\n        const objectURL = window.URL.createObjectURL(blob);\n        this.write(fileName, objectURL);\n    }\n\n    public static write(fileName: string, dataURL: string) {\n        const a = document.createElement('a');\n        a.download = fileName;\n        a.href = dataURL;\n        a.click();\n    }\n\n    public static async read(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = () => reject();\n            reader.readAsText(file);\n        });\n    }\n}","import React from \"react\";\nimport {RootStore} from \"../stores/RootStore\";\n\nconst rootStore = new RootStore();\nexport const StoreContext = React.createContext<RootStore>(rootStore);\nexport const StoreContextProvider = ({children}: StoreProviderProps) => {\n    return (\n        <StoreContext.Provider value={rootStore}>\n            {children}\n        </StoreContext.Provider>\n    )\n}\n\ninterface StoreProviderProps {\n    children: JSX.Element;\n}","import {CanvasStore} from \"./CanvasStore\";\n\nexport class RootStore {\n    public readonly canvasStore;\n\n    constructor() {\n        this.canvasStore = new CanvasStore();\n    }\n}","import React from \"react\";\nimport {RootStore} from \"../stores/RootStore\";\nimport {StoreContext} from \"../contexts/StoreContext\";\n\nexport const useStores = (): RootStore => React.useContext(StoreContext);","import React from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Menu, {MenuProps} from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ToolButton from \"./ToolButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {FileUtils} from \"../../utils/FileUtils\";\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: \"1px solid #d3d4d5\",\n    },\n})((props: MenuProps) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n        }}\n        transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n        }}\n        {...props}\n    />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        \"&:focus\": {\n            backgroundColor: theme.palette.primary.main,\n            \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n                color: theme.palette.common.white,\n            },\n        },\n    },\n}))(MenuItem);\n\nexport default function MenuToolButton() {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const {canvasStore} = useStores();\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleFileOpen = () => {\n        inputRef.current?.click();\n        handleClose();\n    }\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.item(0);\n        e.target.value = \"\";\n\n        if (!!file) {\n            FileUtils.read(file).then(jsonString => {\n                canvasStore.canvas.loadFromJSON(jsonString, () => {\n                    //\n                })\n            }).catch(e => console.error(e));\n        }\n    }\n\n    const handleSave = () => {\n        FileUtils.writeText(\"canvas.json\", JSON.stringify(canvasStore.canvas.toJSON()));\n        handleClose();\n    }\n\n    const handleImageSave = () => {\n        const fullQuality = canvasStore.canvas.toDataURL();\n        FileUtils.write(\"canvas.png\", fullQuality);\n        handleClose();\n    }\n\n    return (\n        <div>\n            <input\n                type={\"file\"}\n                onChange={handleFileChange}\n                ref={inputRef}\n                style={{display: \"none\"}}\n                accept=\"application/json\"\n            />\n            <ToolButton icon={<MenuIcon/>} text={\"메뉴\"} onClick={handleClick}/>\n            <StyledMenu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <StyledMenuItem onClick={handleFileOpen}>\n                    <ListItemIcon>\n                        <DescriptionIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"열기\"/>\n                </StyledMenuItem>\n                <StyledMenuItem onClick={handleSave}>\n                    <ListItemIcon>\n                        <SaveIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"저장\"/>\n                </StyledMenuItem>\n                <StyledMenuItem onClick={handleImageSave}>\n                    <ListItemIcon>\n                        <SaveAltIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"이미지로 저장\"/>\n                </StyledMenuItem>\n            </StyledMenu>\n        </div>\n    );\n}","import React from \"react\";\nimport {AppBar, Toolbar} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\nimport ToolButton from \"./ToolButton\";\nimport MouseIcon from '@material-ui/icons/Mouse';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BrushIcon from \"@material-ui/icons/Brush\";\nimport {ToolTypes} from \"../../models/canvas/ToolTypes\";\nimport MenuToolButton from \"./MenuToolButton\";\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport PhotoSizeSelectSmallIcon from \"@material-ui/icons/PhotoSizeSelectSmall\";\n\nconst useStyles = makeStyles(() => ({\n    appBarColor: {\n        backgroundColor: \"rgba(30,30,30,0.95)\",\n    },\n    left: {\n        justifyContent: \"flex-start\",\n    },\n    center: {\n        display: \"flex\",\n        flex: 1,\n        justifyContent: \"center\",\n    },\n    right: {\n        justifyContent: \"flex-end\",\n    }\n}));\n\nconst ToolBox = observer(() => {\n    const classes = useStyles();\n    const {canvasStore} = useStores();\n\n    return (\n        <AppBar\n            classes={{\n                colorDefault: classes.appBarColor,\n            }}\n            color={\"default\"}\n            elevation={0}\n        >\n            <Toolbar variant={\"dense\"}>\n                <div className={classes.left}>\n                    <MenuToolButton/>\n                </div>\n                <div className={classes.center}>\n                    <ToolButton\n                        icon={<MouseIcon/>}\n                        text={\"선택\"}\n                        onClick={() => canvasStore.selectedTool = ToolTypes.SELECT}\n                        selected={canvasStore.selectedTool === ToolTypes.SELECT}\n                    />\n                    <ToolButton\n                        icon={<BrushIcon/>}\n                        text={\"브러시\"}\n                        onClick={() => canvasStore.selectedTool = ToolTypes.BRUSH}\n                        selected={canvasStore.selectedTool === ToolTypes.BRUSH}\n                    />\n                    <ToolButton\n                        icon={<DashboardIcon/>}\n                        text={\"셰이프\"}\n                        onClick={() => canvasStore.selectedTool = ToolTypes.SHAPE}\n                        selected={canvasStore.selectedTool === ToolTypes.SHAPE}\n                    />\n                    <ToolButton\n                        icon={<TextFieldsIcon/>}\n                        text={\"텍스트\"}\n                        onClick={() => canvasStore.selectedTool = ToolTypes.TEXT}\n                        selected={canvasStore.selectedTool === ToolTypes.TEXT}\n                    />\n                    <ToolButton\n                        icon={<PhotoSizeSelectSmallIcon/>}\n                        text={\"캔버스\"}\n                        onClick={() => canvasStore.selectedTool = ToolTypes.CANVAS}\n                        selected={canvasStore.selectedTool === ToolTypes.CANVAS}\n                    />\n                </div>\n                <div className={classes.right}>\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n})\n\nexport default ToolBox;","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Slider } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { InputAdornment } from \"@material-ui/core\";\n\ninterface Props {\n    label: string;\n    value: number;\n    onChange: (value: number) => void;\n    prefix?: string;\n}\n\nconst useStyles = makeStyles(theme => ({\n    label: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    }\n}));\n\nconst Range = ({ label, value, onChange, prefix }: Props) => {\n    const classes = useStyles();\n\n    const handleSliderChange = (event: any, newValue: number | number[]) => {\n        if (typeof newValue === \"number\") {\n            onChange(newValue);\n        }\n    };\n\n    return (\n        <div>\n            <div className={classes.label}>\n                <Typography variant={\"caption\"}>{label}</Typography>\n                <Input\n                    value={value}\n                    margin=\"dense\"\n                    inputProps={{\n                        min: 1,\n                        max: 100,\n                        type: 'number',\n                    }}\n                    endAdornment={<InputAdornment position=\"end\">{prefix}</InputAdornment>}\n                />\n            </div>\n            <div>\n                <Slider\n                    value={value}\n                    onChange={handleSliderChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Range;","import {Popover} from \"@material-ui/core\";\nimport React from \"react\";\nimport {TwitterPicker, ChromePicker} from \"react-color\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\ninterface Props {\n    color: string,\n    onChange: (color: string) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    colorBox: {\n        width: \"100%\",\n        height: 35,\n        border: 1,\n        borderStyle: \"solid\",\n        borderColor: \"#c0c0c0\",\n        marginBottom: theme.spacing(2),\n        backgroundColor: (props: Props) => props.color,\n        cursor: \"pointer\",\n    }\n}));\n\nconst ColorSelect = (props: Props) => {\n    const classes = useStyles(props);\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n    const open = !!anchorEl;\n\n    const handleClick = (e: any) => {\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            <div className={classes.colorBox} onClick={handleClick}/>\n            <TwitterPicker color={props.color} onChangeComplete={(e) => props.onChange(e.hex)}/>\n            <Popover\n                open={open}\n                anchorEl={anchorEl}\n                onClose={handleClose}\n            >\n                <ChromePicker color={props.color} disableAlpha={true} onChangeComplete={(e) => props.onChange(e.hex)}/>\n            </Popover>\n        </div>\n    )\n}\n\nexport default ColorSelect;","import { Box, Divider, Typography } from \"@material-ui/core\";\nimport { BrushType } from \"../../models/canvas/Brush\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { observer } from \"mobx-react\";\nimport { useStores } from \"../../hooks/useStores\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faSprayCan, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport clsx from \"clsx\";\nimport { CommonColor } from \"../../models/color/CommonColor\";\nimport { ColorSelect, Range } from \"components/input\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n    },\n    title: {\n        marginBottom: theme.spacing(3),\n    },\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        \"&:hover\": {\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\n            \"& *\": {\n                color: \"white\",\n            }\n        },\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        \"& *\": {\n            color: \"white\",\n        }\n    },\n    propBoxWrapper: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n    propBox: {\n        flex: 1,\n        \"& > div\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}))\n\nconst BrushPropBox = observer(() => {\n    const classes = useStyles();\n    const { canvasStore } = useStores();\n\n    const handleBrushChange = (type: BrushType) => {\n        canvasStore.brushType = type || BrushType.PENCIL;\n    }\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.title}>\n                <Typography variant={\"h6\"} color={\"primary\"}>브러시</Typography>\n            </div>\n            <div className={classes.propBoxWrapper}>\n                <div className={classes.propBox}>\n                    <div>\n                        <Box mb={1}>\n                            <Typography variant={\"caption\"}>모양</Typography>\n                        </Box>\n                        <Box display=\"flex\">\n                            <div\n                                className={clsx(classes.button, canvasStore.brushType === BrushType.PENCIL && classes.selected)}\n                                onClick={() => handleBrushChange(BrushType.PENCIL)}\n                            >\n                                <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" />\n                            </div>\n                            <div\n                                className={clsx(classes.button, canvasStore.brushType === BrushType.SPRAY && classes.selected)}\n                                onClick={() => handleBrushChange(BrushType.SPRAY)}\n                            >\n                                <FontAwesomeIcon icon={faSprayCan} size=\"lg\" />\n                            </div>\n                            <div\n                                className={clsx(classes.button, canvasStore.brushType === BrushType.CIRCLE && classes.selected)}\n                                onClick={() => handleBrushChange(BrushType.CIRCLE)}\n                            >\n                                <FontAwesomeIcon icon={faCircle} size=\"lg\" />\n                            </div>\n                        </Box>\n                    </div>\n                    <div>\n                        <Range label=\"두께\" value={canvasStore.thickness} onChange={(value) => canvasStore.thickness = value} prefix={\"px\"} />\n                    </div>\n                </div>\n                <div>\n                    <Box p={1}><Divider/></Box>\n                    <ColorSelect color={canvasStore.color} onChange={(value) => canvasStore.color = value} />\n                </div>\n            </div>\n        </div>\n    )\n})\n\nexport default BrushPropBox;","import {Box, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {observer} from \"mobx-react\";\nimport {ShapeType} from \"../../models/canvas/Shape\";\nimport {useStores} from \"../../hooks/useStores\";\nimport clsx from \"clsx\";\nimport {CommonColor} from \"../../models/color/CommonColor\";\n\nconst useStyles = makeStyles(theme => ({\n    title: {\n        marginBottom: theme.spacing(3),\n    },\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        height: 40,\n        \"&:hover\": {\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\n            \"& svg > *\": {\n                stroke: \"white\",\n            }\n        },\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        \"& svg > *\": {\n            stroke: \"white\",\n        }\n    }\n}))\n\nconst ShapePropBox = observer(() => {\n    const classes = useStyles();\n    const {canvasStore} = useStores();\n\n    const handleShapeChange = (type: ShapeType) => {\n        canvasStore.shapeType = type || ShapeType.ELLIPSE;\n    }\n\n    return (\n        <div>\n            <div className={classes.title}>\n                <Typography variant={\"h6\"} color={\"primary\"}>셰이프</Typography>\n            </div>\n            <div>\n                <Box mb={1}>\n                    <Typography variant={\"caption\"}>모양</Typography>\n                </Box>\n                <Box display={\"flex\"}>\n                    <div\n                        className={clsx(classes.button, canvasStore.shapeType === ShapeType.ELLIPSE && classes.selected)}\n                        onClick={() => handleShapeChange(ShapeType.ELLIPSE)}\n                    >\n                        <svg height=\"24\" width=\"24\">\n                            <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"black\" fill=\"transparent\" strokeWidth={2}/>\n                        </svg>\n                    </div>\n                    <div\n                        className={clsx(classes.button, canvasStore.shapeType === ShapeType.RECT && classes.selected)}\n                        onClick={() => handleShapeChange(ShapeType.RECT)}\n                    >\n                        <svg width=\"24\" height=\"24\">\n                            <rect width=\"24\" height=\"24\" stroke=\"black\" fill=\"transparent\" strokeWidth={4}/>\n                        </svg>\n                    </div>\n                    <div\n                        className={clsx(classes.button, canvasStore.shapeType === ShapeType.TRIANGLE && classes.selected)}\n                        onClick={() => handleShapeChange(ShapeType.TRIANGLE)}\n                    >\n                        <svg width=\"24\" height=\"24\">\n                            <polygon points=\"12,2 22,22 2,22\" stroke=\"black\" fill=\"transparent\" strokeWidth={2}/>\n                        </svg>\n                    </div>\n                </Box>\n            </div>\n        </div>\n    )\n})\n\nexport default ShapePropBox;","import React from \"react\";\nimport {observer} from \"mobx-react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {ToolTypes} from \"../../models/canvas/ToolTypes\";\nimport BrushPropBox from \"./BrushPropBox\";\nimport ShapePropBox from \"./ShapePropBox\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n    }\n}));\n\nconst PropBox = observer(() => {\n    const classes = useStyles();\n    const {canvasStore} = useStores();\n    const selectedTool = canvasStore.selectedTool;\n\n    return (\n        <div className={classes.root}>\n            {selectedTool === ToolTypes.BRUSH && <BrushPropBox/>}\n            {selectedTool === ToolTypes.SHAPE && (<ShapePropBox/>)}\n        </div>\n    )\n})\n\nexport default PropBox;","import React from \"react\";\nimport {Layout} from \"../layout\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {PropBox, ToolBox} from \"../../components/tools\";\nimport {observer} from \"mobx-react\";\nimport {Toolbar} from \"@material-ui/core\";\nimport {useStores} from \"../../hooks/useStores\";\n\nconst leftMenuWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100vw\",\n        height: \"100vh\",\n    },\n    flexBox: {\n        display: \"flex\",\n        flex: 1,\n    },\n    contents: {\n        display: \"flex\",\n    },\n    left: {\n        flexBasis: `${leftMenuWidth}px`,\n        backgroundColor: \"#f0f0f0\",\n    },\n    canvasWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1,\n        backgroundColor: \"#c0c0c0\",\n        padding: theme.spacing(3),\n    },\n}))\n\nconst Canvas = observer(() => {\n    const classes = useStyles();\n    const {canvasStore} = useStores();\n\n    React.useEffect(() => {\n        const el = document.getElementById(canvasStore.canvasId) as HTMLCanvasElement;\n        canvasStore.initCanvas(el, {\n            width: canvasStore.width,\n            height: canvasStore.height,\n            backgroundColor: canvasStore.backgroundColor,\n        });\n        // eslint-disable-next-line\n    }, []);\n\n    return (\n        <Layout>\n            <ToolBox/>\n            <div className={classes.root}>\n                <Toolbar variant={\"dense\"}/>\n                <div className={classes.flexBox}>\n                    <div className={classes.left}>\n                        <PropBox/>\n                    </div>\n                    <div className={classes.canvasWrapper}>\n                        <canvas id={canvasStore.canvasId}/>\n                    </div>\n                </div>\n            </div>\n        </Layout>\n    )\n})\n\nexport default Canvas;","import {Canvas} from 'templates/canvas';\nimport React from 'react';\n\nfunction App() {\n    return (\n        <Canvas/>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {StoreContextProvider} from \"./contexts/StoreContext\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreContextProvider>\n            <App/>\n        </StoreContextProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}