{"version":3,"sources":["templates/layout/Layout.tsx","models/color/CommonColor.tsx","components/tools/ToolButton.tsx","contexts/storeContext.ts","hooks/useStores.tsx","models/tools/ToolTypes.ts","utils/FileUtils.tsx","components/tools/MenuToolButton.tsx","components/tools/ToolBox.tsx","models/tools/Brush.ts","components/input/Range.tsx","components/input/ColorPicker.tsx","components/input/ColorPalette.tsx","hooks/usePrevious.tsx","components/input/ColorSelect.tsx","components/input/AlignButton.tsx","components/tools/PropBoxLayout.tsx","components/tools/BrushPropBox.tsx","models/tools/Shape.ts","components/tools/ShapePropBox.tsx","models/tools/Text.ts","components/tools/TextPropBox.tsx","components/tools/PropBox.tsx","templates/canvas/Canvas.tsx","App.tsx","stores/mouseEventStore.ts","stores/brushStore.ts","stores/canvasStore.ts","stores/objectManagerStore.ts","stores/objectEventStore.ts","stores/shapeStore.ts","stores/UIStore.ts","stores/textStore.ts","stores/rootStore.ts","index.tsx"],"names":["useStyles","makeStyles","progressWrapper","display","justifyContent","alignItems","Layout","loading","children","classes","Fragment","CssBaseline","className","CircularProgress","CommonColor","theme","button","cursor","color","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","textAlign","caption","fontSize","selected","background","ToolButton","icon","text","onClick","clsx","StoreContext","React","createContext","StoreProvider","Provider","useStores","useContext","ToolTypes","value","_values","push","this","values","find","v","SELECT","BRUSH","SHAPE","TEXT","CANVAS","MimeType","FileUtils","fileName","blob","Blob","type","objectURL","window","URL","createObjectURL","write","dataURL","a","document","createElement","download","href","click","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","backgroundColor","palette","primary","main","common","white","MenuItem","MenuToolButton","useState","anchorEl","setAnchorEl","canvasStore","inputRef","useRef","handleClose","onChange","e","target","files","item","read","then","jsonString","canvas","loadFromJSON","catch","console","error","ref","style","accept","event","currentTarget","keepMounted","open","Boolean","onClose","current","ListItemIcon","ListItemText","writeText","JSON","stringify","toJSON","fullQuality","toDataURL","appBarColor","left","center","flex","right","ToolBox","observer","AppBar","colorDefault","Toolbar","variant","setCanvasMode","canvasMode","BrushType","PENCIL","fabric","PencilBrush","CIRCLE","CircleBrush","SPRAY","SprayBrush","label","Range","prefix","min","max","Typography","Input","margin","inputProps","endAdornment","InputAdornment","position","Slider","newValue","colorBox","width","height","borderStyle","borderColor","disabled","ColorPicker","Popover","disableAlpha","onChangeComplete","ColorPalette","Box","mb","usePrevious","useEffect","ColorSelect","previousColor","selectedValue","setSelectedValue","mr","flexBasis","rgb","r","g","b","hex","FormControl","fullWidth","Select","undefined","alignBox","alignButton","AlignButton","onLeft","onCenter","onRight","Button","flexDirection","title","marginBottom","propBoxWrapper","PropBoxLayout","objectManagerStore","activeObject","getObjectTypeName","borderRadius","padding","marginRight","propBox","BrushPropBox","brushStore","brushType","setBrushType","faPencilAlt","size","faSprayCan","faCircle","strokeWidth","setStrokeWidth","Divider","stroke","setStroke","ShapeType","options","RECT","Rect","ELLIPSE","Ellipse","TRIANGLE","Triangle","FontFaceType","ShapePropBox","shapeStore","shapeType","setShapeType","cx","cy","fill","points","setFill","fontSizes","FontFaces","filter","font","GOOGLE","TIMES_NEW_ROMAN","DEFAULT","NOTO_SANS_KR","EAST_SEA_DOKDO","TextPropBox","textStore","fontFamily","setFontFamily","map","parseInt","setFontSize","PropBox","selectedTool","isPath","isShape","isText","flexBox","contents","canvasWrapper","Canvas","rootStore","canvasRef","init","App","MouseEventType","defaultStyles","BrushStore","objectManager","makeAutoObservable","addReactions","setFreeDrawingBrush","set","freeDrawingBrush","renderAll","getBrush","subscribe","updateObject","bind","object","isBrush","updatePathStyles","styles","setPathStyles","isType","CanvasStore","setWidth","setHeight","setBackgroundColor","mode","discardActiveObject","isDrawingMode","defaultCursor","setSelectable","selectable","selection","getObjects","forEach","obj","hoverCursor","SelectionEventType","MouseEventStore","startCursorPosition","x","y","currentCursorPosition","Map","addEventListeners","eventType","listener","has","get","fn","getCursorPosition","MOUSE_DOWN","callback","MOUSE_MOVE","MOUSE_UP","on","onMouseDown","onMouseMove","onMouseUp","getPointer","ObjectEventType","ObjectManagerStore","listeners","Set","onSelected","onCleared","SELECTION_CREATED","SELECTION_UPDATED","SELECTION_CLEARED","reaction","log","add","delete","isRect","isEllipse","isTriangle","ObjectEventStore","addEventListener","OBJECT_SCALING","onScaling","OBJECT_MODIFIED","onModified","callbackFn","ShapeStore","mouseEventStore","isDragMode","updateShapeStyles","setShapeStyles","isShapeTool","getShape","top","strokeUniform","rx","ry","Math","abs","flipX","flipY","MIN_OBJECT_SIZE","setCoords","circle","setActiveObject","UIStore","FONT_SIZE","length","FILL","FONT_FAMILY","TextStore","objectEventStore","loadFont","addFontAutoRender","updateTextStyles","setTextStyles","isTextTool","IText","lockUniScaling","setControlVisible","selectAll","enterEditing","scaleX","toFixed","scaleY","WebFont","load","google","families","getGoogleFonts","setInterval","getActiveObjects","textObject","initDimensions","dirty","util","clearFabricFontCache","canvasElement","body","append","container","parentElement","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b0edc320.chunk.js","sourcesContent":["import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(() => ({\n    progressWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    }\n}))\n\nconst Layout = ({ loading, children }: Props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <div>\n                {loading ? (\n                    <div className={classes.progressWrapper}><CircularProgress /></div>\n                ) : children}\n            </div>\n        </React.Fragment>\n    )\n}\n\ninterface Props {\n    loading?: boolean;\n    children: React.ReactElement | React.ReactElement[];\n}\n\nexport default Layout;","export const CommonColor = {\n    PRIMARY: \"#ac76ff\",\n    BACKGROUND_GRADIENT: \"linear-gradient(90deg, rgba(172,118,255,1) 0%, rgba(91,91,255,1) 100%)\",\n    BACKGROUND_GRADIENT_HOVER: \"linear-gradient(90deg, rgba(172,118,255,.4) 0%, rgba(91,91,255,.4) 100%)\",\n}","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport clsx from \"clsx\";\nimport {CommonColor} from \"../../models/color/CommonColor\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: \"inline-block\",\n        cursor: \"pointer\",\n        color: \"#fff\",\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        textAlign: \"center\",\n    },\n    caption: {\n        fontSize: \"0.70rem\",\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n    }\n}));\n\nconst ToolButton = ({icon, text, onClick, selected}: Props) => {\n    const classes = useStyles();\n    return (\n        <div className={clsx(classes.button, {\n            [classes.selected]: selected,\n        })} onClick={onClick}>\n            {icon}\n            <div className={classes.caption}>{text}</div>\n        </div>\n    )\n}\n\ninterface Props {\n    icon: any;\n    text: string;\n    onClick: (event: React.MouseEvent<HTMLElement>) => void;\n    selected?: boolean;\n}\n\nexport default ToolButton;","import React from \"react\";\nimport { RootStore } from \"stores/rootStore\";\n\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\nexport const StoreProvider = StoreContext.Provider;","import React from \"react\";\nimport {RootStore} from \"../stores/rootStore\";\nimport {StoreContext} from \"../contexts/storeContext\";\n\nexport const useStores = (): RootStore => React.useContext(StoreContext);","export class ToolTypes {\n    private static readonly _values: ToolTypes[] = [];\n    public static readonly SELECT = new ToolTypes(\"select\", \"선택\");\n    public static readonly BRUSH = new ToolTypes(\"brush\", \"브러쉬\");\n    public static readonly SHAPE = new ToolTypes(\"shape\", \"셰이프\");\n    public static readonly TEXT = new ToolTypes(\"text\", \"텍스트\");\n    public static readonly CANVAS = new ToolTypes(\"canvas\", \"캔버스\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        ToolTypes._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n}","enum MimeType {\n    TEXT = \"text/plain\",\n}\n\nexport class FileUtils {\n    public static writeText(fileName: string, text: string) {\n        const blob = new Blob([text], { type: MimeType.TEXT });\n        const objectURL = window.URL.createObjectURL(blob);\n        this.write(fileName, objectURL);\n    }\n\n    public static write(fileName: string, dataURL: string) {\n        const a = document.createElement('a');\n        a.download = fileName;\n        a.href = dataURL;\n        a.click();\n    }\n\n    public static async read(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = () => reject();\n            reader.readAsText(file);\n        });\n    }\n}","import React from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Menu, {MenuProps} from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ToolButton from \"./ToolButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {FileUtils} from \"../../utils/FileUtils\";\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: \"1px solid #d3d4d5\",\n    },\n})((props: MenuProps) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n        }}\n        transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n        }}\n        {...props}\n    />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        \"&:focus\": {\n            backgroundColor: theme.palette.primary.main,\n            \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n                color: theme.palette.common.white,\n            },\n        },\n    },\n}))(MenuItem);\n\nexport default function MenuToolButton() {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const {canvasStore} = useStores();\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleFileOpen = () => {\n        inputRef.current?.click();\n        handleClose();\n    }\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.item(0);\n        e.target.value = \"\";\n\n        if (!!file) {\n            FileUtils.read(file).then(jsonString => {\n                canvasStore.canvas.loadFromJSON(jsonString, () => {\n                    //\n                })\n            }).catch(e => console.error(e));\n        }\n    }\n\n    const handleSave = () => {\n        FileUtils.writeText(\"canvas.json\", JSON.stringify(canvasStore.canvas.toJSON()));\n        handleClose();\n    }\n\n    const handleImageSave = () => {\n        const fullQuality = canvasStore.canvas.toDataURL();\n        FileUtils.write(\"canvas.png\", fullQuality);\n        handleClose();\n    }\n\n    return (\n        <div>\n            <input\n                type={\"file\"}\n                onChange={handleFileChange}\n                ref={inputRef}\n                style={{display: \"none\"}}\n                accept=\"application/json\"\n            />\n            <ToolButton icon={<MenuIcon/>} text={\"메뉴\"} onClick={handleClick}/>\n            <StyledMenu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <StyledMenuItem onClick={handleFileOpen}>\n                    <ListItemIcon>\n                        <DescriptionIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"열기\"/>\n                </StyledMenuItem>\n                <StyledMenuItem onClick={handleSave}>\n                    <ListItemIcon>\n                        <SaveIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"저장\"/>\n                </StyledMenuItem>\n                <StyledMenuItem onClick={handleImageSave}>\n                    <ListItemIcon>\n                        <SaveAltIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"이미지로 저장\"/>\n                </StyledMenuItem>\n            </StyledMenu>\n        </div>\n    );\n}","import React from \"react\";\nimport {AppBar, Toolbar} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\nimport ToolButton from \"./ToolButton\";\nimport MouseIcon from '@material-ui/icons/Mouse';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BrushIcon from \"@material-ui/icons/Brush\";\nimport {ToolTypes} from \"../../models/tools/ToolTypes\";\nimport MenuToolButton from \"./MenuToolButton\";\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport PhotoSizeSelectSmallIcon from \"@material-ui/icons/PhotoSizeSelectSmall\";\n\nconst useStyles = makeStyles(() => ({\n    appBarColor: {\n        backgroundColor: \"rgba(30,30,30,0.95)\",\n    },\n    left: {\n        justifyContent: \"flex-start\",\n    },\n    center: {\n        display: \"flex\",\n        flex: 1,\n        justifyContent: \"center\",\n    },\n    right: {\n        justifyContent: \"flex-end\",\n    }\n}));\n\nconst ToolBox = observer(() => {\n    const classes = useStyles();\n    const {canvasStore} = useStores();\n\n    return (\n        <AppBar\n            classes={{\n                colorDefault: classes.appBarColor,\n            }}\n            color={\"default\"}\n            elevation={0}\n        >\n            <Toolbar variant={\"dense\"}>\n                <div className={classes.left}>\n                    <MenuToolButton/>\n                </div>\n                <div className={classes.center}>\n                    <ToolButton\n                        icon={<MouseIcon/>}\n                        text={ToolTypes.SELECT.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SELECT)}\n                        selected={canvasStore.canvasMode === ToolTypes.SELECT}\n                    />\n                    <ToolButton\n                        icon={<BrushIcon/>}\n                        text={ToolTypes.BRUSH.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.BRUSH)}\n                        selected={canvasStore.canvasMode === ToolTypes.BRUSH}\n                    />\n                    <ToolButton\n                        icon={<DashboardIcon/>}\n                        text={ToolTypes.SHAPE.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SHAPE)}\n                        selected={canvasStore.canvasMode === ToolTypes.SHAPE}\n                    />\n                    <ToolButton\n                        icon={<TextFieldsIcon/>}\n                        text={ToolTypes.TEXT.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.TEXT)}\n                        selected={canvasStore.canvasMode === ToolTypes.TEXT}\n                    />\n                    <ToolButton\n                        icon={<PhotoSizeSelectSmallIcon/>}\n                        text={ToolTypes.CANVAS.display}\n                        onClick={() => canvasStore.canvasMode = ToolTypes.CANVAS}\n                        selected={canvasStore.canvasMode === ToolTypes.CANVAS}\n                    />\n                </div>\n                <div className={classes.right}>\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n})\n\nexport default ToolBox;","import {fabric} from \"fabric\";\n\nexport class BrushType {\n    private static readonly _values: BrushType[] = [];\n    public static readonly PENCIL = new BrushType(\"pencil\", \"연필\");\n    public static readonly CIRCLE = new BrushType(\"circle\", \"원형\");\n    public static readonly SPRAY = new BrushType(\"spray\", \"스프레이\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        BrushType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getBrush(canvas: fabric.Canvas) {\n        switch (this) {\n            case BrushType.PENCIL:\n                return new (fabric.PencilBrush as any)(canvas);\n            case BrushType.CIRCLE:\n                return new (fabric.CircleBrush as any)(canvas);\n            case BrushType.SPRAY:\n                return new (fabric.SprayBrush as any)(canvas);\n            default:\n                return new (fabric.PencilBrush as any)(canvas);\n        }\n    }\n}","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Slider } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { InputAdornment } from \"@material-ui/core\";\n\ninterface Props {\n    label: string;\n    value: number;\n    onChange: (value: number) => void;\n    prefix?: string;\n    min?: number;\n    max?: number;\n}\n\nconst useStyles = makeStyles(theme => ({\n    label: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    }\n}));\n\nconst Range = ({ label, value, onChange, prefix, min, max }: Props) => {\n    const classes = useStyles();\n\n    const handleSliderChange = (event: any, newValue: number | number[]) => {\n        if (typeof newValue === \"number\") {\n            onChange(newValue);\n        }\n    };\n\n    return (\n        <div>\n            <div className={classes.label}>\n                <Typography variant={\"caption\"}>{label}</Typography>\n                <Input\n                    value={value}\n                    margin=\"dense\"\n                    inputProps={{\n                        min: 1,\n                        max: 100,\n                        type: 'number',\n                    }}\n                    endAdornment={<InputAdornment position=\"end\">{prefix}</InputAdornment>}\n                />\n            </div>\n            <div>\n                <Slider\n                    min={min}\n                    max={max}\n                    value={value}\n                    onChange={handleSliderChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Range;","import { Popover, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { ChromePicker, ColorResult } from \"react-color\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\ninterface Props {\n    label?: string,\n    color: string | undefined,\n    disableAlpha?: boolean,\n    disabled?: boolean,\n    onChange: (color: ColorResult) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    colorBox: {\n        width: \"100%\",\n        height: 35,\n        border: 1,\n        borderStyle: \"solid\",\n        borderColor: \"#c0c0c0\",\n        backgroundColor: (props: Props) => props.color,\n        cursor: (props: Props) => !props.disabled ? \"pointer\" : \"default\",\n    }\n}));\n\nconst ColorPicker = (props: Props) => {\n    const classes = useStyles(props);\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n    const open = !!anchorEl;\n\n    const handleClick = (e: any) => {\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            {props.label && <Typography variant={\"caption\"}>{props.label}</Typography>}\n            <div>\n                <div className={classes.colorBox} onClick={handleClick} />\n                <Popover\n                    open={open && !props.disabled}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                >\n                    <ChromePicker color={props.color} disableAlpha={props.disableAlpha} onChangeComplete={props.onChange} />\n                </Popover>\n            </div>\n        </div>\n    )\n}\n\nexport default ColorPicker;","import { Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport { ColorResult, TwitterPicker } from \"react-color\"\nimport ColorPicker from \"./ColorPicker\";\n\ninterface Props {\n    color: string,\n    disableAlpha?: boolean,\n    onChange: (color: ColorResult) => void;\n}\n\nconst ColorPalette = (props: Props) => {\n    return (\n        <div>\n            <Box mb={2}>\n                <ColorPicker {...props} />\n            </Box>\n            <TwitterPicker width={\"100%\"} color={props.color} onChangeComplete={props.onChange} />\n        </div>\n    )\n}\n\nexport default ColorPalette;","import React from \"react\";\n\nconst usePrevious = (value: any) => {\n    const ref = React.useRef();\n    React.useEffect(() => {\n        ref.current = value;\n    });\n\n    return ref.current;\n}\n\nexport default usePrevious;","import { Select } from \"@material-ui/core\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { FormControl } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\nimport usePrevious from \"hooks/usePrevious\";\nimport { CommonColor } from \"models/color/CommonColor\";\nimport React from \"react\"\nimport { ColorResult } from \"react-color\"\nimport ColorPicker from \"./ColorPicker\"\n\ninterface Props {\n    color: string | undefined;\n    onChange: (color: string | undefined) => void;\n}\n\nconst ColorSelect = ({ color, onChange }: Props) => {\n    const previousColor = usePrevious(color);\n    const [selectedValue, setSelectedValue] = React.useState<string>(!color ? \"none\" : \"solid\");\n\n    const handleColorChange = (color: ColorResult) => {\n        const rgb = !color.rgb.a && color.rgb.a !== 0 ? color.hex : `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n        onChange(rgb);\n    }\n\n    const handleSelectedValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const value = event.target.value as string;\n        setSelectedValue(value);\n\n        if (value === \"none\") {\n            onChange(undefined);\n        } else {\n            onChange(previousColor || CommonColor.PRIMARY);\n        }\n    };\n\n    return (\n        <Box display={\"flex\"}>\n            <Box mr={1.5} flexBasis={35}>\n                <ColorPicker color={color} onChange={handleColorChange} disabled={selectedValue === \"none\"} />\n            </Box>\n            <Box flex={1}>\n                <FormControl fullWidth>\n                    <Select\n                        value={selectedValue}\n                        onChange={handleSelectedValueChange}\n                    >\n                        <MenuItem value=\"none\">\n                            <em>없음</em>\n                        </MenuItem>\n                        <MenuItem value={\"solid\"}>단색</MenuItem>\n                    </Select>\n                </FormControl>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ColorSelect","import FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n    alignBox: {\n        display: \"flex\",\n    },\n    alignButton: {\n        flex: 1,\n    }\n}));\n\ninterface Props {\n    onLeft?: () => void,\n    onCenter?: () => void,\n    onRight?: () => void,\n}\n\nconst AlignButton = ({onLeft, onCenter, onRight}: Props) => {\n    const classes = useStyles();\n    \n    return (\n        <div className={classes.alignBox}>\n            <Button className={classes.alignButton} onClick={onLeft}>\n                <FormatAlignLeftIcon/>\n            </Button>\n            <Button className={classes.alignButton} onClick={onCenter}>\n                <FormatAlignCenterIcon/>\n            </Button>\n            <Button className={classes.alignButton} onClick={onRight}>\n                <FormatAlignRightIcon/>\n            </Button>\n        </div>\n    )\n}\n\nexport default AlignButton;","import { Typography } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { useStores } from \"hooks/useStores\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n    },\n    title: {\n        marginBottom: theme.spacing(3),\n    },\n    propBoxWrapper: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n}))\n\nconst PropBoxLayout: React.FC = observer(({ children }) => {\n    const classes = useStyles();\n    const { canvasStore, objectManagerStore } = useStores();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.title}>\n                <Typography variant={\"h6\"} color={\"primary\"}>{objectManagerStore.activeObject ? objectManagerStore.getObjectTypeName() : canvasStore.canvasMode.display}</Typography>\n            </div>\n            <div className={classes.propBoxWrapper}>\n                {children}\n            </div>\n        </div>\n    )\n})\n\nexport default PropBoxLayout;","import { Box, Divider, Typography } from \"@material-ui/core\";\nimport { BrushType } from \"../../models/tools/Brush\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { observer } from \"mobx-react\";\nimport { useStores } from \"../../hooks/useStores\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faSprayCan, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport clsx from \"clsx\";\nimport { CommonColor } from \"../../models/color/CommonColor\";\nimport { ColorPalette, Range } from \"components/input\";\nimport PropBoxLayout from \"./PropBoxLayout\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        \"&:hover\": {\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\n            \"& *\": {\n                color: \"white\",\n            }\n        },\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        \"& *\": {\n            color: \"white\",\n        }\n    },\n    propBox: {\n        flex: 1,\n        \"& > div\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}))\n\nconst BrushPropBox = observer(() => {\n    const classes = useStyles();\n    const { brushStore } = useStores();\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                {!brushStore.item && <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>모양</Typography>\n                    </Box>\n                    <Box display=\"flex\">\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.PENCIL && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.PENCIL)}\n                        >\n                            <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" />\n                        </div>\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.SPRAY && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.SPRAY)}\n                        >\n                            <FontAwesomeIcon icon={faSprayCan} size=\"lg\" />\n                        </div>\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.CIRCLE && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.CIRCLE)}\n                        >\n                            <FontAwesomeIcon icon={faCircle} size=\"lg\" />\n                        </div>\n                    </Box>\n                </div>}\n                <div>\n                    <Range\n                        label=\"두께\"\n                        value={brushStore.strokeWidth}\n                        onChange={(strokeWidth) => brushStore.setStrokeWidth(strokeWidth)}\n                        prefix={\"px\"}\n                        min={1}\n                    />\n                </div>\n            </div>\n            <div>\n                <Box paddingTop={3} paddingBottom={3}><Divider /></Box>\n                <ColorPalette color={brushStore.stroke} onChange={(color) => brushStore.setStroke(color.hex)} disableAlpha={true} />\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default BrushPropBox;","import {fabric} from \"fabric\";\n\nexport class ShapeType {\n    private static readonly _values: ShapeType[] = [];\n    public static readonly RECT = new ShapeType(\"rect\", \"사각형\");\n    public static readonly ELLIPSE = new ShapeType(\"ellipse\", \"원\");\n    public static readonly TRIANGLE = new ShapeType(\"triangle\", \"삼각형\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        ShapeType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getShape<T extends fabric.IObjectOptions>(options?: T) {\n        switch (this) {\n            case ShapeType.RECT:\n                return new fabric.Rect(options);\n            case ShapeType.ELLIPSE:\n                return new fabric.Ellipse(options);\n            case ShapeType.TRIANGLE:\n                return new fabric.Triangle(options);\n            default:\n                return new fabric.Rect(options);\n        }\n    }\n}","import { Box, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { observer } from \"mobx-react\";\nimport { ShapeType } from \"../../models/tools/Shape\";\nimport clsx from \"clsx\";\nimport { CommonColor } from \"../../models/color/CommonColor\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport { useStores } from \"hooks/useStores\";\nimport { ColorSelect, Range } from \"components/input\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        height: 40,\n        \"&:hover\": {\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\n            \"& svg > *\": {\n                stroke: \"white\",\n            }\n        },\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        \"& svg > *\": {\n            stroke: \"white\",\n        }\n    },\n    propBox: {\n        \"& > div\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}))\n\nconst ShapePropBox = observer(() => {\n    const classes = useStyles();\n    const { shapeStore } = useStores();\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                {!shapeStore.item && <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>모양</Typography>\n                    </Box>\n                    <Box display={\"flex\"}>\n                        <div\n                            className={clsx(classes.button, shapeStore.shapeType === ShapeType.ELLIPSE && classes.selected)}\n                            onClick={() => shapeStore.setShapeType(ShapeType.ELLIPSE)}\n                        >\n                            <svg height=\"24\" width=\"24\">\n                                <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\n                            </svg>\n                        </div>\n                        <div\n                            className={clsx(classes.button, shapeStore.shapeType === ShapeType.RECT && classes.selected)}\n                            onClick={() => shapeStore.setShapeType(ShapeType.RECT)}\n                        >\n                            <svg width=\"24\" height=\"24\">\n                                <rect width=\"24\" height=\"24\" stroke=\"black\" fill=\"transparent\" strokeWidth={4} />\n                            </svg>\n                        </div>\n                        <div\n                            className={clsx(classes.button, shapeStore.shapeType === ShapeType.TRIANGLE && classes.selected)}\n                            onClick={() => shapeStore.setShapeType(ShapeType.TRIANGLE)}\n                        >\n                            <svg width=\"24\" height=\"24\">\n                                <polygon points=\"12,2 22,22 2,22\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\n                            </svg>\n                        </div>\n                    </Box>\n                </div>}\n                <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>채우기</Typography>\n                        <div>\n                            <ColorSelect color={shapeStore.fill} onChange={(color: string | undefined) => shapeStore.setFill(color)} />\n                        </div>\n                    </Box>\n                </div>\n                <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>선 색상</Typography>\n                        <div>\n                            <ColorSelect color={shapeStore.stroke} onChange={(color: string | undefined) => shapeStore.setStroke(color)} />\n                        </div>\n                    </Box>\n                </div>\n                <div>\n                    <Range label=\"선 두께\" value={shapeStore.strokeWidth} onChange={(strokeWidth) => shapeStore.setStrokeWidth(strokeWidth)} prefix={\"px\"} />\n                </div>\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default ShapePropBox;","export const fontSizes = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72, 94, 130];\n\nexport enum FontFaceType {\n    DEFAULT,\n    GOOGLE,\n}\n\nexport class FontFaces {\n    private static readonly _values: FontFaces[] = [];\n    public static readonly TIMES_NEW_ROMAN = new FontFaces(\"Times New Roman\", \"Times New Roman\", FontFaceType.DEFAULT);\n    public static readonly NOTO_SANS_KR = new FontFaces(\"Noto Sans KR\", \"Noto Sans KR\", FontFaceType.GOOGLE);\n    public static readonly EAST_SEA_DOKDO = new FontFaces(\"East Sea Dokdo\", \"East Sea Dokdo\", FontFaceType.GOOGLE);\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n        public readonly type: FontFaceType,\n    ) {\n        FontFaces._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public static getGoogleFonts() {\n        return this.values().filter(font => font.type === FontFaceType.GOOGLE);\n    }\n}","import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport React from \"react\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport { AlignButton, ColorPicker } from \"../input\";\nimport { useStores } from \"hooks/useStores\";\nimport { observer } from \"mobx-react\";\nimport { Box, FormControl, Select } from \"@material-ui/core\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { FontFaces, fontSizes } from \"models/tools/Text\";\n\nconst useStyles = makeStyles(theme => ({\n    propBox: {\n        \"& > *\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}));\n\nconst TextPropBox = observer(() => {\n    const classes = useStyles();\n    const { textStore } = useStores();\n\n    const handleFontSizeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const fontSize = parseInt(event.target.value as string, 10);\n        textStore.setFontSize(fontSize);\n    };\n\n    const handleFontFmailyChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const fontFamily = event.target.value as string;\n        textStore.setFontFamily(fontFamily);\n    };\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                <div>\n                    <FormControl fullWidth>\n                        <Select\n                            value={textStore.fontFamily}\n                            onChange={handleFontFmailyChange}\n                        >\n                            {FontFaces.values().map(font => (\n                                <MenuItem key={font.value} value={font.value}>{font.display}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </div>\n                <div>\n                    <Box display={\"flex\"}>\n                        <Box flex={1} mr={1.5}>\n                            <FormControl fullWidth>\n                                <Select\n                                    value={textStore.fontSize}\n                                    onChange={handleFontSizeChange}\n                                >\n                                    {fontSizes.map(fontSize => (\n                                        <MenuItem key={fontSize} value={fontSize}>{fontSize}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </Box>\n                        <Box flexBasis={35}>\n                            <ColorPicker color={textStore.fill} onChange={(color) => textStore.setFill(color.hex)} />\n                        </Box>\n                    </Box>\n                </div>\n                <div>\n                    <AlignButton/>\n                </div>\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default TextPropBox;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { useStores } from \"../../hooks/useStores\";\nimport { ToolTypes } from \"../../models/tools/ToolTypes\";\nimport BrushPropBox from \"./BrushPropBox\";\nimport ShapePropBox from \"./ShapePropBox\";\nimport TextPropBox from \"./TextPropBox\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n    }\n}));\n\nconst PropBox = observer(() => {\n    const classes = useStyles();\n    const { canvasStore, objectManagerStore } = useStores();\n    const selectedTool = canvasStore.canvasMode;\n    const activeObject = objectManagerStore.activeObject;\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {!activeObject && <React.Fragment>\n                    {selectedTool === ToolTypes.BRUSH && (<BrushPropBox />)}\n                    {selectedTool === ToolTypes.SHAPE && (<ShapePropBox />)}\n                    {selectedTool === ToolTypes.TEXT && (<TextPropBox />)}\n                </React.Fragment>}\n                {activeObject && <React.Fragment>\n                    {objectManagerStore.isPath() && <BrushPropBox />}\n                    {objectManagerStore.isShape() && <ShapePropBox />}\n                    {objectManagerStore.isText() && <TextPropBox />}\n                </React.Fragment>}\n            </div>\n        </React.Fragment>\n    )\n})\n\nexport default PropBox;","import React from \"react\";\nimport {Layout} from \"../layout\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {PropBox, ToolBox} from \"../../components/tools\";\nimport {observer} from \"mobx-react\";\nimport {Toolbar} from \"@material-ui/core\";\nimport {useStores} from \"../../hooks/useStores\";\n\nconst leftMenuWidth = 260;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100vw\",\n        height: \"100vh\",\n    },\n    flexBox: {\n        display: \"flex\",\n        flex: 1,\n    },\n    contents: {\n        display: \"flex\",\n    },\n    left: {\n        flexBasis: `${leftMenuWidth}px`,\n        backgroundColor: \"#f0f0f0\",\n    },\n    canvasWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1,\n        backgroundColor: \"#c0c0c0\",\n        padding: theme.spacing(3),\n    },\n}))\n\nconst Canvas = observer(() => {\n    const classes = useStyles();\n    const rootStore = useStores();\n    const canvasRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!canvasRef.current) {\n            return;\n        }\n\n        rootStore.init(canvasRef.current);\n        // eslint-disable-next-line\n    }, [canvasRef]);\n\n    return (\n        <Layout>\n            <ToolBox/>\n            <div className={classes.root}>\n                <Toolbar variant={\"dense\"}/>\n                <div className={classes.flexBox}>\n                    <div className={classes.left}>\n                        <PropBox/>\n                    </div>\n                    <div className={classes.canvasWrapper} ref={canvasRef}/>\n                </div>\n            </div>\n        </Layout>\n    )\n})\n\nexport default Canvas;","import {Canvas} from 'templates/canvas';\nimport React from 'react';\n\nfunction App() {\n    return (\n        <Canvas/>\n    );\n}\n\nexport default App;\n","import { IEvent } from \"fabric/fabric-impl\";\nimport { RootStore } from \"./rootStore\";\n\nexport enum MouseEventType {\n    MOUSE_UP = \"mouse:up\",\n    MOUSE_DOWN = \"mouse:down\",\n    MOUSE_MOVE = \"mouse:move\",\n}\n\nexport interface MouseEventObject {\n    startCursorPosition: {x: number, y: number},\n    currentCursorPosition: {x: number, y: number},\n}\n\nexport class MouseEventStore {\n    private startCursorPosition = { x: 0, y: 0 };\n    private currentCursorPosition = { x: 0, y: 0 };\n    private observer: Map<MouseEventType, Array<(e: MouseEventObject) => void>> = new Map();\n\n    constructor(private readonly rootStore: RootStore) {\n        this.addEventListeners();\n    }\n\n    subscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\n        if (!this.observer.has(eventType)) {\n            this.observer.set(eventType, []);\n        }\n        \n        this.observer.get(eventType)?.push(listener);\n    }\n\n    unsubscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\n        this.observer.set(eventType, this.observer.get(eventType)?.filter(fn => fn !== listener) || []);\n    }\n\n    private onMouseDown(e: IEvent) {\n        this.startCursorPosition = { ...this.getCursorPosition(e) };\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_DOWN)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }))\n    }\n\n    private onMouseMove(e: IEvent) {\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_MOVE)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }))\n    }\n\n    private onMouseUp(e: IEvent) {\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_UP)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }))\n    }\n\n    private addEventListeners() {\n        const { canvas } = this.rootStore.canvasStore;\n        canvas.on(MouseEventType.MOUSE_DOWN, this.onMouseDown.bind(this));\n        canvas.on(MouseEventType.MOUSE_MOVE, this.onMouseMove.bind(this));\n        canvas.on(MouseEventType.MOUSE_UP, this.onMouseUp.bind(this));\n    }\n\n    private getCursorPosition(e: IEvent) {\n        return this.rootStore.canvasStore.canvas.getPointer(e.e);\n    }\n}","import { makeAutoObservable } from \"mobx\";\nimport { BrushType } from \"models/tools/Brush\";\nimport { RootStore } from \"./rootStore\";\nimport { fabric } from \"fabric\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\n\nconst defaultStyles = {\n    brushType: BrushType.PENCIL,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n}\n\ninterface PathStyles {\n    stroke: string | undefined,\n    strokeWidth: number | undefined,\n}\n\nexport class BrushStore {\n    brushType = defaultStyles.brushType;\n    stroke = defaultStyles.stroke;\n    strokeWidth = defaultStyles.strokeWidth;\n    item: fabric.Path | undefined;\n\n    private readonly canvas: fabric.Canvas;\n    private readonly objectManager: ObjectManagerStore;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        this.canvas = rootStore.canvasStore.canvas;\n        this.objectManager = rootStore.objectManagerStore;\n        this.addReactions();\n    }\n\n    setBrushType(brushType: BrushType) {\n        this.brushType = brushType;\n        this.setFreeDrawingBrush();\n    }\n\n    setStroke(stroke: string | undefined) {\n        this.stroke = stroke || defaultStyles.stroke;\n        this.item?.set(\"stroke\", stroke);\n        this.canvas.freeDrawingBrush.color = this.stroke;\n        this.canvas.renderAll();\n    }\n\n    setStrokeWidth(strokeWidth: number | undefined) {\n        this.strokeWidth = strokeWidth || defaultStyles.strokeWidth;\n        this.item?.set(\"strokeWidth\", strokeWidth);\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\n        this.canvas.renderAll();\n    }\n\n    private setFreeDrawingBrush() {\n        this.canvas.freeDrawingBrush = this.rootStore.brushStore.brushType.getBrush(this.canvas);\n        this.canvas.freeDrawingBrush.color = this.stroke;\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\n    }\n\n    private addReactions() {\n        this.objectManager.subscribe(this.updateObject.bind(this));\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (this.isBrush(object)) {\n            this.item = object as fabric.Path;\n            this.updatePathStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private setPathStyles(styles: PathStyles) {\n        this.setStroke(styles.stroke);\n        this.setStrokeWidth(styles.strokeWidth);\n    }\n\n    private updatePathStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            stroke,\n            strokeWidth,\n        } = this.item;\n\n        this.setPathStyles({\n            stroke: stroke,\n            strokeWidth: strokeWidth,\n        })\n    }\n\n    private isBrush(object: fabric.Object | undefined) {\n        return object?.isType(\"path\");\n    }\n}","import { makeAutoObservable } from \"mobx\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport { RootStore } from \"./rootStore\";\n\nconst defaultStyles = {\n    width: 500,\n    height: 500,\n    backgroundColor: \"#ffffff\",\n}\n\nexport class CanvasStore {\n    width = defaultStyles.width;\n    height = defaultStyles.height;\n    backgroundColor = defaultStyles.backgroundColor;\n    canvasMode = ToolTypes.BRUSH;\n\n    constructor(\n        private readonly rootStore: RootStore,\n        readonly canvas: fabric.Canvas,\n    ) {\n        makeAutoObservable(this);\n        this.canvas.setWidth(this.width);\n        this.canvas.setHeight(this.height);\n        this.canvas.setBackgroundColor(this.backgroundColor, () => { });\n    }\n\n    init() {\n        this.setCanvasMode(this.canvasMode);\n    }\n\n    setCanvasMode(mode: ToolTypes) {\n        this.canvasMode = mode;\n        this.canvas.discardActiveObject().renderAll();\n        this.canvas.isDrawingMode = mode === ToolTypes.BRUSH;\n        this.canvas.defaultCursor = \"default\";\n        this.setSelectable(false);\n\n        if (mode === ToolTypes.BRUSH) {\n            const { brushStore } = this.rootStore;\n            brushStore.setBrushType(brushStore.brushType);\n        } else if (mode === ToolTypes.SELECT) {\n            this.setSelectable(true);\n        } else if (mode === ToolTypes.SHAPE) {\n            this.canvas.defaultCursor = \"crosshair\";\n        } else if (mode === ToolTypes.TEXT) {\n            this.canvas.defaultCursor = \"text\";\n        }\n    }\n\n    private setSelectable(selectable: boolean) {\n        this.canvas.selection = selectable;\n        this.canvas.getObjects().forEach(obj => {\n            obj.selectable = selectable;\n            obj.hoverCursor = selectable ? \"move\" : \"default\";\n        });\n    }\n}","import { IEvent } from \"fabric/fabric-impl\";\nimport { makeAutoObservable, reaction } from \"mobx\";\nimport { ShapeType } from \"models/tools/Shape\";\nimport { CanvasStore } from \"./canvasStore\";\nimport { RootStore } from \"./rootStore\";\n\nexport enum SelectionEventType {\n    SELECTION_CLEARED = \"selection:cleared\",\n    SELECTION_CREATED = \"selection:created\",\n    SELECTION_UPDATED = \"selection:updated\",\n}\n\nexport class ObjectManagerStore {\n    private readonly canvasStore: CanvasStore;\n    private readonly listeners: { [eventName: string]: (e: IEvent) => void }\n    private readonly observer: Set<(object: fabric.Object | undefined) => void> = new Set();\n\n    activeObject: fabric.Object | undefined;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        this.canvasStore = rootStore.canvasStore;\n        this.listeners = {\n            onSelected: this.onSelected.bind(this),\n            onCleared: this.onCleared.bind(this),\n        }\n        this.addEventListeners();\n    }\n\n    private onSelected(e: IEvent) {\n        const { target } = e;\n        if (!target) {\n            return;\n        }\n\n        this.activeObject = target;\n    }\n\n    private onCleared() {\n        this.activeObject = undefined;\n    }\n\n    private addEventListeners() {\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CREATED, this.listeners.onSelected);\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_UPDATED, this.listeners.onSelected);\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CLEARED, this.listeners.onCleared);\n        reaction(\n            () => this.activeObject,\n            () => {\n                console.log(this.activeObject);\n                this.observer.forEach(callback => callback(this.activeObject));\n            },\n        );\n    }\n\n    subscribe(listener: (object: fabric.Object | undefined) => void) {\n        this.observer.add(listener);\n    }\n\n    unsubscribe(listener: (object: fabric.Object | undefined) => void) {\n        this.observer.delete(listener);\n    }\n\n    isRect() {\n        return this.activeObject?.isType(ShapeType.RECT.value);\n    }\n\n    isEllipse() {\n        return this.activeObject?.isType(ShapeType.ELLIPSE.value);\n    }\n\n    isTriangle() {\n        return this.activeObject?.isType(ShapeType.TRIANGLE.value);\n    }\n\n    isShape() {\n        return this.isRect() || this.isEllipse() || this.isTriangle();\n    }\n\n    isPath() {\n        return this.activeObject?.isType(\"path\");\n    }\n\n    isText() {\n        return this.activeObject?.isType(\"i-text\");\n    }\n\n    getObjectTypeName(): string {\n        if (this.isRect()) {\n            return ShapeType.RECT.display;\n        } else if (this.isEllipse()) {\n            return ShapeType.ELLIPSE.display;\n        } else if (this.isTriangle()) {\n            return ShapeType.TRIANGLE.display;\n        } else if (this.isPath()) {\n            return \"패스\";\n        } else if (this.isText()) {\n            return \"텍스트\";\n        } else {\n            return \"오브젝트\";\n        }\n    }\n}","import { IEvent } from \"fabric/fabric-impl\";\nimport { RootStore } from \"./rootStore\";\n\nexport enum ObjectEventType {\n    OBJECT_SCALING = \"object:scaling\",\n    OBJECT_MODIFIED = \"object:modified\",\n}\n\nexport class ObjectEventStore {\n    private observer: Map<ObjectEventType, Set<(e: IEvent) => void>> = new Map();\n\n    constructor(private readonly rootStore: RootStore) {\n        this.addEventListener();\n    }\n\n    private addEventListener() {\n        const {canvas} = this.rootStore.canvasStore;\n        canvas.on(ObjectEventType.OBJECT_SCALING, this.onScaling.bind(this));\n        canvas.on(ObjectEventType.OBJECT_MODIFIED, this.onModified.bind(this));\n    }\n\n    private onScaling(e: IEvent) {\n        this.observer.get(ObjectEventType.OBJECT_SCALING)?.forEach(callbackFn => callbackFn(e));\n    }\n\n    private onModified(e: IEvent) {\n        this.observer.get(ObjectEventType.OBJECT_MODIFIED)?.forEach(callbackFn => callbackFn(e));\n    }\n\n    subscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\n        if (!this.observer.has(eventType)) {\n            this.observer.set(eventType, new Set());\n        }\n\n        this.observer.get(eventType)?.add(listener);\n    }\n\n    unsubscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\n        this.observer.get(eventType)?.delete(listener);\n    }\n}\n\nexport default ObjectEventStore;","import { makeAutoObservable } from \"mobx\";\nimport { ShapeType } from \"models/tools/Shape\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport { MouseEventObject, MouseEventStore, MouseEventType } from \"./mouseEventStore\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\nimport { RootStore } from \"./rootStore\";\n\nconst defaultStyles = {\n    shapeType: ShapeType.ELLIPSE,\n    fill: undefined,\n    strokeWidth: 3,\n    stroke: \"#000000\",\n}\n\ninterface ShapeStyles {\n    fill: string | undefined;\n    strokeWidth: number;\n    stroke: string | undefined;\n}\n\nexport class ShapeStore {\n    private static readonly MIN_OBJECT_SIZE = 30;\n    private readonly canvas: fabric.Canvas;\n    private readonly mouseEventStore: MouseEventStore;\n    private readonly objectManager: ObjectManagerStore;\n    private isDragMode = false;\n\n    item: fabric.Rect | fabric.Triangle | fabric.Ellipse | undefined;\n    shapeType = defaultStyles.shapeType;\n    fill: string | undefined = defaultStyles.fill;\n    strokeWidth = defaultStyles.strokeWidth;\n    stroke: string | undefined = defaultStyles.stroke;\n\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);\n        this.canvas = rootStore.canvasStore.canvas;\n        this.mouseEventStore = rootStore.mouseEventStore;\n        this.objectManager = rootStore.objectManagerStore;\n        this.addEventListeners();\n        this.addReactions();\n    }\n\n    setShapeType(shapeType: ShapeType) {\n        this.shapeType = shapeType;\n    }\n\n    setFill(fill: string | undefined) {\n        this.fill = fill;\n        if (this.item) {\n            this.item.set({ fill: fill });\n            this.canvas.renderAll();\n        }\n    }\n\n    setStroke(stroke: string | undefined) {\n        this.stroke = stroke;\n        if (this.item) {\n            this.item.set({ stroke: stroke });\n            this.canvas.renderAll();\n        }\n    }\n\n    setStrokeWidth(strokeWidth: number) {\n        this.strokeWidth = strokeWidth;\n        if (this.item) {\n            this.item.set({ strokeWidth: strokeWidth });\n            this.canvas.renderAll();\n        }\n    }\n\n    private addReactions() {\n        this.objectManager.subscribe(this.updateObject.bind(this));\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (this.isShape(object)) {\n            this.item = object;\n            this.updateShapeStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private setShapeStyles(styles: ShapeStyles) {\n        this.setFill(styles.fill);\n        this.setStroke(styles.stroke);\n        this.setStrokeWidth(styles.strokeWidth);\n    }\n\n    private updateShapeStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            stroke,\n            strokeWidth,\n            fill,\n        } = this.item;\n\n        this.setShapeStyles({\n            fill: fill === undefined ? fill : fill as string,\n            stroke: stroke,\n            strokeWidth: strokeWidth || defaultStyles.strokeWidth,\n        })\n    }\n\n    private addEventListeners() {\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.onMouseUp.bind(this));\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_DOWN, this.onMouseDown.bind(this));\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_MOVE, this.onMouseMove.bind(this));\n    }\n\n    private isShapeTool() {\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.SHAPE;\n    }\n\n    private isShape(object: fabric.Object | undefined) {\n        return object?.isType(ShapeType.ELLIPSE.value) || object?.isType(ShapeType.RECT.value) || object?.isType(ShapeType.TRIANGLE.value);\n    }\n\n    private onMouseDown(e: MouseEventObject) {\n        if (!this.isShapeTool()) {\n            return;\n        }\n\n        this.isDragMode = true;\n        this.item = this.shapeType.getShape({\n            left: e.startCursorPosition.x,\n            top: e.startCursorPosition.y,\n            stroke: this.stroke,\n            strokeWidth: this.strokeWidth,\n            fill: this.fill,\n            selectable: false,\n            hoverCursor: \"default\",\n            strokeUniform: true,\n        });\n\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: 0,\n                height: 0,\n            })\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            (this.item as fabric.Ellipse).set({\n                rx: 0,\n                ry: 0,\n            })\n        }\n\n        this.rootStore.canvasStore.canvas.add(this.item);\n    }\n\n    private onMouseMove(e: MouseEventObject) {\n        if (!this.isShapeTool() || !this.isDragMode || !this.item) {\n            return;\n        }\n\n        if (e.currentCursorPosition.x < e.startCursorPosition.x) {\n            this.item.set({ left: Math.abs(e.currentCursorPosition.x) });\n        }\n\n        if (e.currentCursorPosition.y < e.startCursorPosition.y) {\n            this.item.set({ top: Math.abs(e.currentCursorPosition.y) });\n        }\n\n        this.item.set({ flipX: e.currentCursorPosition.x < e.startCursorPosition.x });\n        this.item.set({ flipY: e.currentCursorPosition.y < e.startCursorPosition.y });\n\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x),\n                height: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y),\n            });\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            (this.item as fabric.Ellipse).set({\n                rx: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x) / 2,\n                ry: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y) / 2,\n            })\n        }\n\n        this.rootStore.canvasStore.canvas.renderAll();\n    }\n\n    private onMouseUp(e: MouseEventObject) {\n        if (!this.isShapeTool() || !this.item) {\n            return;\n        }\n\n        this.isDragMode = false;\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.width || ShapeStore.MIN_OBJECT_SIZE),\n                height: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.height || ShapeStore.MIN_OBJECT_SIZE),\n            }).setCoords();\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            const circle = this.item as fabric.Ellipse;\n            circle.set({\n                rx: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.rx || ShapeStore.MIN_OBJECT_SIZE / 2),\n                ry: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.ry || ShapeStore.MIN_OBJECT_SIZE / 2),\n            }).setCoords();\n        }\n\n        const canvasStore = this.rootStore.canvasStore;\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\n        canvasStore.canvas.setActiveObject(this.item);\n        canvasStore.canvas.renderAll();\n\n        this.item = undefined;\n    }\n}","import { makeAutoObservable } from \"mobx\";\nimport { RootStore } from \"./rootStore\";\n\nexport class UIStore {\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);;\n    }\n}","import { MouseEventObject, MouseEventStore, MouseEventType } from \"./mouseEventStore\";\nimport { RootStore } from \"./rootStore\";\nimport { fabric } from \"fabric\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport { ObjectEventStore, ObjectEventType } from \"./objectEventStore\";\nimport { IEvent } from \"fabric/fabric-impl\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\nimport { makeAutoObservable } from \"mobx\";\nimport { FontFaces, fontSizes } from \"models/tools/Text\";\nimport WebFont from \"webfontloader\";\n\nconst defaultStyles = {\n    FONT_SIZE: fontSizes[fontSizes.length / 2],\n    FILL: \"#000000\",\n    FONT_FAMILY: FontFaces.TIMES_NEW_ROMAN.value,\n}\n\ninterface TextStyles {\n    fontSize: number,\n    fill: string,\n    fontFamily: string,\n}\n\nexport class TextStore {\n    private readonly objectManager: ObjectManagerStore;\n    private readonly mouseEventStore: MouseEventStore;\n    private readonly objectEventStore: ObjectEventStore;\n    private readonly canvas: fabric.Canvas;\n\n    fontSize = defaultStyles.FONT_SIZE;\n    fill = defaultStyles.FILL;\n    fontFamily = defaultStyles.FONT_FAMILY;\n    item: fabric.IText | undefined;\n\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);\n        this.loadFont();\n        this.objectManager = rootStore.objectManagerStore;\n        this.mouseEventStore = rootStore.mouseEventStore;\n        this.objectEventStore = rootStore.objectEventStore;\n        this.canvas = rootStore.canvasStore.canvas;\n        this.addEventListener();\n        this.addFontAutoRender();\n    }\n\n    setFontSize(fontSize: number) {\n        this.fontSize = fontSize;\n        if (this.item) {\n            this.item.set({ fontSize: fontSize });\n            this.canvas.renderAll();\n        }\n    }\n\n    setFill(fill: string) {\n        this.fill = fill;\n        if (this.item) {\n            this.item.set({ fill: fill });\n            this.canvas.renderAll();\n        }\n    }\n\n    setFontFamily(fontFamily: string) {\n        this.fontFamily = fontFamily;\n        if (this.item) {\n            this.item.set({ fontFamily: fontFamily });\n            this.canvas.renderAll();\n        }\n    }\n\n    private addEventListener() {\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.onMouseUp.bind(this));\n        this.objectEventStore.subscribe(ObjectEventType.OBJECT_MODIFIED, this.onModified.bind(this));\n        this.objectManager.subscribe(this.updateObject.bind(this));\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (object && this.isText(object)) {\n            this.item = object as fabric.IText;\n            this.updateTextStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private updateTextStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            fontSize,\n            fill,\n            fontFamily,\n        } = this.item;\n\n        this.setTextStyles({\n            fontSize: fontSize || defaultStyles.FONT_SIZE,\n            fill: !fill ? defaultStyles.FILL : fill as string,\n            fontFamily: fontFamily || defaultStyles.FONT_FAMILY,\n        })\n    }\n\n    private setTextStyles(styles: TextStyles) {\n        this.setFontSize(styles.fontSize);\n        this.setFill(styles.fill);\n        this.setFontFamily(styles.fontFamily);\n    }\n\n    private onMouseUp(e: MouseEventObject) {\n        if (!this.isTextTool()) {\n            return;\n        }\n\n        this.item = new fabric.IText(\"텍스트를 입력해주세요\", {\n            top: e.currentCursorPosition.y,\n            left: e.currentCursorPosition.x,\n            fontFamily: this.fontFamily,\n            fontSize: this.fontSize,\n            lockUniScaling: true,\n            fill: this.fill,\n        });\n\n        this.item.setControlVisible(\"mt\", false);\n        this.item.setControlVisible(\"mb\", false);\n        this.item.setControlVisible(\"ml\", false);\n        this.item.setControlVisible(\"mr\", false);\n\n        const canvasStore = this.rootStore.canvasStore;\n        canvasStore.canvas.add(this.item);\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\n        canvasStore.canvas.setActiveObject(this.item);\n\n        this.item.selectAll();\n        this.item.enterEditing();\n    }\n\n    private onModified(e: IEvent) {\n        const { target } = e;\n        if (!target || !this.isText(target)) {\n            return;\n        }\n\n        const text = target as fabric.IText;\n        const fontSize = parseInt(((text.fontSize || defaultStyles.FONT_SIZE) * (text.scaleX || 1)).toFixed(0), 10);\n        text.set({\n            scaleX: 1,\n            scaleY: 1,\n        });\n        this.setFontSize(fontSize);\n    }\n\n    private isTextTool() {\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.TEXT;\n    }\n\n    private isText(object: fabric.Object) {\n        return object.isType(\"i-text\");\n    }\n\n    private loadFont() {\n        WebFont.load({\n            google: {\n                families: FontFaces.getGoogleFonts().map(font => font.value),\n            },\n        })\n    }\n\n    private addFontAutoRender() {\n        setInterval(() => {\n            this.canvas.getActiveObjects()\n                .filter(object => this.isText(object))\n                .forEach((object) => {\n                    const textObject = object as fabric.IText;\n                    textObject.initDimensions();\n                    textObject.dirty = true;\n                });\n            fabric.util.clearFabricFontCache();\n            this.canvas.renderAll();\n        }, 500);\n    }\n}","import { fabric } from \"fabric\";\nimport { BrushStore } from \"./brushStore\";\nimport { CanvasStore } from \"./canvasStore\";\nimport { MouseEventStore } from \"./mouseEventStore\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\nimport { ObjectEventStore } from \"./objectEventStore\";\nimport { ShapeStore } from \"./shapeStore\";\nimport { UIStore } from \"./UIStore\";\nimport { TextStore } from \"./textStore\";\n\nexport class RootStore {\n    private readonly canvasElement: HTMLCanvasElement;\n    canvasStore: CanvasStore;\n    objectManagerStore: ObjectManagerStore;\n    objectEventStore: ObjectEventStore;\n    mouseEventStore: MouseEventStore;\n    brushStore: BrushStore;\n    shapeStore: ShapeStore;\n    textStore: TextStore;\n    UIStore: UIStore;\n\n    constructor() {\n        this.canvasElement = document.createElement(\"canvas\");\n        document.body.append(this.canvasElement);\n\n        this.canvasStore = new CanvasStore(this, new fabric.Canvas(this.canvasElement));\n        this.objectManagerStore = new ObjectManagerStore(this);\n        this.objectEventStore = new ObjectEventStore(this);\n        this.mouseEventStore = new MouseEventStore(this);\n        this.brushStore = new BrushStore(this);\n        this.shapeStore = new ShapeStore(this);\n        this.textStore = new TextStore(this);\n        this.UIStore = new UIStore(this);\n    }\n\n    init(container: HTMLElement): void {\n        container.append(this.canvasElement.parentElement as Node);\n        this.canvasStore.init();\n    }\n}\n\nexport default new RootStore();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {StoreProvider} from \"./contexts/storeContext\";\nimport rootStore from \"./stores/rootStore\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreProvider value={rootStore}>\n            <App/>\n        </StoreProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}