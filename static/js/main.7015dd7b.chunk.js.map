{"version":3,"sources":["templates/layout/Layout.tsx","components/tools/ToolButton.tsx","contexts/storeContext.ts","hooks/useStores.tsx","models/tools/ToolTypes.ts","utils/FileUtils.ts","components/tools/MenuToolButton.tsx","components/tools/ToolBox.tsx","models/tools/Brush.ts","models/tools/Text.ts","components/input/Range.tsx","components/input/ColorPicker.tsx","components/input/ColorPalette.tsx","hooks/usePrevious.tsx","components/input/ColorSelect.tsx","components/input/AlignButton.tsx","components/input/TextStyleButton.tsx","components/input/ImageUploadButton.tsx","components/propbox/PropBoxLayout.tsx","components/propbox/PropBoxItem.tsx","components/propbox/BrushPropBox.tsx","models/tools/Shape.ts","components/propbox/ShapePropBox.tsx","stores/mouseEventStore.ts","components/propbox/TextPropBox.tsx","components/propbox/CanvasPropBox.tsx","components/propbox/SelectPropBox.tsx","components/propbox/ImagePropBox.tsx","components/propbox/PropBox.tsx","templates/canvas/Canvas.tsx","stores/brushStore.ts","stores/canvasStore.ts","components/element/DeleteImageElement.tsx","models/object/DeleteControl.ts","stores/selectionEventStore.ts","stores/objectEventStore.ts","stores/shapeStore.ts","stores/UIStore.ts","stores/textStore.ts","stores/selectStore.ts","stores/objectStore.ts","stores/imageStore.ts","stores/rootStore.ts","App.tsx","index.tsx"],"names":["useStyles","makeStyles","progressWrapper","display","justifyContent","alignItems","Layout","loading","children","classes","Fragment","className","CircularProgress","theme","button","minHeight","flexDirection","cursor","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","backgroundColor","palette","secondary","main","caption","marginTop","fontSize","selected","ToolButton","icon","text","onClick","clsx","StoreContext","React","createContext","StoreProvider","Provider","useStores","useContext","ToolTypes","value","_values","push","this","values","find","v","SELECT","BRUSH","SHAPE","TEXT","IMAGE","CANVAS","MimeType","FileUtils","fileName","blob","Blob","type","objectURL","window","URL","createObjectURL","write","dataURL","a","document","createElement","download","href","click","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","MenuToolButton","useState","anchorEl","setAnchorEl","canvasStore","inputRef","useRef","handleClose","onChange","e","target","files","item","read","then","jsonString","canvas","loadFromJSON","catch","console","error","ref","style","accept","event","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuList","MenuItem","current","ListItemIcon","ListItemText","primary","writeText","JSON","stringify","toJSON","fullQuality","toDataURL","left","center","flex","right","ToolBox","observer","AppBar","Toolbar","variant","setCanvasMode","canvasMode","BrushType","PENCIL","fabric","PencilBrush","CIRCLE","CircleBrush","SPRAY","SprayBrush","FontFaceType","label","Range","prefix","min","max","Typography","Input","margin","inputProps","endAdornment","InputAdornment","position","Slider","newValue","colorBox","width","height","border","borderStyle","borderColor","props","color","disabled","ColorPicker","Popover","disableAlpha","onChangeComplete","ColorPalette","Box","mb","usePrevious","useEffect","ColorSelect","previousColor","useTheme","selectedValue","setSelectedValue","mr","flexBasis","rgb","r","g","b","hex","FormControl","fullWidth","Select","undefined","fontSizes","TextAlign","FontWeight","FontStyle","FontFaces","filter","font","GOOGLE","TIMES_NEW_ROMAN","DEFAULT","NOTO_SANS_KR","NANUM_GOTHIC","NANUM_PEN_SCRIPT","SONG_MYUNG","TextStyle","AlignButton","textAlign","ToggleButtonGroup","exclusive","newAlignment","aria-label","ToggleButton","TextStyleButton","bold","italic","underline","toggleBold","toggleItalic","toggleUnderline","formats","useMemo","BOLD","ITALIC","UNDERLINED","newFormats","includes","ImageUploadButton","multiple","Array","from","Button","startIcon","root","title","marginBottom","propBoxWrapper","PropBoxLayout","objectStore","activeObject","getObjectTypeName","PropBoxItem","other","borderRadius","padding","marginRight","background","default","BrushPropBox","brushStore","brushType","setBrushType","faPencilAlt","size","faSprayCan","faCircle","strokeWidth","setStrokeWidth","stroke","setStroke","ShapeType","options","RECT","Rect","ELLIPSE","Ellipse","TRIANGLE","Triangle","MouseEventType","propBox","ShapePropBox","shapeStore","shapeType","setShapeType","cx","cy","fill","points","setFill","TextPropBox","textStore","fontFamily","setFontFamily","map","toString","parseInt","setFontSize","isBold","isItalic","setBold","setItalic","setUnderline","setTextAlign","CanvasPropBox","setWidth","setHeight","InputLabel","htmlFor","id","onBlur","setBackgroundColor","SelectPropBox","ImagePropBox","imageStore","upload","Grid","container","uploadedImages","image","addImage","dataUrl","src","alt","name","objectFit","PropBox","selectedTool","isPath","isShape","isText","isImage","flexBox","contents","canvasWrapper","grey","A400","Canvas","rootStore","canvasRef","init","onInit","onDestroy","defaultStyles","BrushStore","listeners","selectionEventStore","makeAutoObservable","registerCanvasModeManager","updateObject","bind","addReactions","removeReactions","isDrawingMode","setFreeDrawingBrush","freeDrawingBrush","updateStroke","updateStrokeWidth","getBrush","object","isBrush","updatePathStyles","subscribe","unsubscribe","CanvasStore","canvasModeManagers","Map","dispose","mode","manager","set","previousMode","discardActiveObject","renderAll","setAllCursor","setSelectable","get","onSessionEnd","onSessionStart","selectable","selection","getObjects","forEach","obj","defaultCursor","hoverCursor","setDefaultCursor","setHoverCursor","MouseEventStore","startCursorPosition","x","y","currentCursorPosition","onMouseDown","onMouseUp","onMouseMove","addEventListeners","removeEventListeners","eventType","listener","has","fn","getCursorPosition","MOUSE_DOWN","callback","MOUSE_MOVE","MOUSE_UP","on","off","getPointer","DeleteImageElement","SelectionEventType","DeleteControl","deleteAction","Object","prototype","controls","deleteControl","Control","offsetY","offsetX","cursorStyle","mouseUpHandler","render","renderIcon","ctx","top","styleOverride","fabricObject","cornerSize","save","translate","rotate","util","degreesToRadians","angle","drawImage","restore","ObjectEventType","SelectionEventStore","Set","onSelected","onCleared","initControl","SELECTION_CREATED","SELECTION_UPDATED","SELECTION_CLEARED","reaction","removeActiveObjects","_eventData","transform","getActiveObjects","length","remove","requestRenderAll","add","delete","ObjectEventStore","onScaling","onModified","addEventListener","removeEventListener","OBJECT_SCALING","OBJECT_MODIFIED","callbackFn","ShapeStore","mouseEventStore","isDragMode","updateShapeStyles","isShapeTool","getShape","strokeUniform","isType","rx","ry","Math","abs","flipX","flipY","MIN_OBJECT_SIZE","setCoords","circle","setActiveObject","UIStore","FONT_SIZE","FILL","FONT_FAMILY","TEXT_ALIGN","FONT_STYLE","FONT_WEIGHT","UNDERLINE","TextStore","objectEventStore","fontStyle","fontWeight","autoRenderId","loadFont","addFontAutoRender","removeFontAutoRender","changedValue","updateTextStyles","isTextTool","IText","lockUniScaling","setControlVisible","selectAll","enterEditing","scaleX","toFixed","scaleY","WebFont","load","google","families","getGoogleFonts","setInterval","textObject","initDimensions","dirty","clearFabricFontCache","clearInterval","SelectStore","ObjectStore","isRect","isEllipse","isTriangle","log","isGroup","setStyles","key","ImageStore","Image","fromURL","img","scale","setScaleX","setScaleY","readFileAsync","readAsDataURL","canvasElement","selectStore","body","append","onDestory","parentElement","App","createTheme","ThemeProvider","CssBaseline","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.7015dd7b.chunk.js","sourcesContent":["import React from \"react\";\nimport {CircularProgress} from \"@mui/material\";\nimport makeStyles from '@mui/styles/makeStyles';\n\nconst useStyles = makeStyles(() => ({\n    progressWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    }\n}))\n\nconst Layout = ({ loading, children }: Props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <div>\n                {loading ? (\n                    <div className={classes.progressWrapper}><CircularProgress /></div>\n                ) : children}\n            </div>\n        </React.Fragment>\n    )\n}\n\ninterface Props {\n    loading?: boolean;\n    children: React.ReactElement | React.ReactElement[];\n}\n\nexport default Layout;","import React from \"react\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        minHeight: 48,\n        display: \"flex\",\n        flexDirection: \"column\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        cursor: \"pointer\",\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        \"&:hover\": {\n            backgroundColor: theme.palette.secondary.main,\n        }\n    },\n    caption: {\n        marginTop: theme.spacing(0.5),\n        fontSize: \"0.70rem\",\n    },\n    selected: {\n        backgroundColor: theme.palette.secondary.main,\n    }\n}));\n\nconst ToolButton = ({icon, text, onClick, selected}: Props) => {\n    const classes = useStyles();\n    return (\n        <div className={clsx(classes.button, {\n            [classes.selected]: selected,\n        })} onClick={onClick}>\n            {icon}\n            <div className={classes.caption}>{text}</div>\n        </div>\n    )\n}\n\ninterface Props {\n    icon: any;\n    text: string;\n    onClick: (event: React.MouseEvent<HTMLElement>) => void;\n    selected?: boolean;\n}\n\nexport default ToolButton;","import React from \"react\";\nimport { RootStore } from \"stores/rootStore\";\n\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\nexport const StoreProvider = StoreContext.Provider;","import React from \"react\";\nimport {RootStore} from \"../stores/rootStore\";\nimport {StoreContext} from \"../contexts/storeContext\";\n\nexport const useStores = (): RootStore => React.useContext(StoreContext);","export class ToolTypes {\n    private static readonly _values: ToolTypes[] = [];\n    public static readonly SELECT = new ToolTypes(\"select\", \"선택\");\n    public static readonly BRUSH = new ToolTypes(\"brush\", \"브러쉬\");\n    public static readonly SHAPE = new ToolTypes(\"shape\", \"셰이프\");\n    public static readonly TEXT = new ToolTypes(\"text\", \"텍스트\");\n    public static readonly IMAGE = new ToolTypes(\"image\", \"이미지\");\n    public static readonly CANVAS = new ToolTypes(\"canvas\", \"캔버스\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        ToolTypes._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n}","enum MimeType {\n    TEXT = \"text/plain\",\n}\n\nexport class FileUtils {\n    public static writeText(fileName: string, text: string) {\n        const blob = new Blob([text], { type: MimeType.TEXT });\n        const objectURL = window.URL.createObjectURL(blob);\n        this.write(fileName, objectURL);\n    }\n\n    public static write(fileName: string, dataURL: string) {\n        const a = document.createElement('a');\n        a.download = fileName;\n        a.href = dataURL;\n        a.click();\n    }\n\n    public static async read(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = () => reject();\n            reader.readAsText(file);\n        });\n    }\n}","import React from \"react\";\nimport Menu from \"@mui/material/Menu\";\nimport MenuItem from \"@mui/material/MenuItem\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport ToolButton from \"./ToolButton\";\nimport MenuIcon from \"@mui/icons-material/Menu\";\nimport DescriptionIcon from \"@mui/icons-material/Description\";\nimport SaveIcon from \"@mui/icons-material/Save\";\nimport SaveAltIcon from \"@mui/icons-material/SaveAlt\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {FileUtils} from \"../../utils/FileUtils\";\nimport {MenuList} from \"@mui/material\";\n\nexport default function MenuToolButton() {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const {canvasStore} = useStores();\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleFileOpen = () => {\n        inputRef.current?.click();\n        handleClose();\n    }\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.item(0);\n        e.target.value = \"\";\n\n        if (!!file) {\n            FileUtils.read(file).then(jsonString => {\n                canvasStore.canvas.loadFromJSON(jsonString, () => {\n                    //\n                })\n            }).catch(e => console.error(e));\n        }\n    }\n\n    const handleSave = () => {\n        FileUtils.writeText(\"canvas.json\", JSON.stringify(canvasStore.canvas.toJSON()));\n        handleClose();\n    }\n\n    const handleImageSave = () => {\n        const fullQuality = canvasStore.canvas.toDataURL();\n        FileUtils.write(\"canvas.png\", fullQuality);\n        handleClose();\n    }\n\n    return (\n        <div>\n            <input\n                type={\"file\"}\n                onChange={handleFileChange}\n                ref={inputRef}\n                style={{display: \"none\"}}\n                accept=\"application/json\"\n            />\n            <ToolButton icon={<MenuIcon/>} text={\"메뉴\"} onClick={handleClick}/>\n            <Menu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <MenuList>\n                    <MenuItem onClick={handleFileOpen}>\n                        <ListItemIcon>\n                            <DescriptionIcon fontSize=\"small\"/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"열기\"/>\n                    </MenuItem>\n                    <MenuItem onClick={handleSave}>\n                        <ListItemIcon>\n                            <SaveIcon fontSize=\"small\"/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"저장\"/>\n                    </MenuItem>\n                    <MenuItem onClick={handleImageSave}>\n                        <ListItemIcon>\n                            <SaveAltIcon fontSize=\"small\"/>\n                        </ListItemIcon>\n                        <ListItemText primary=\"이미지로 저장\"/>\n                    </MenuItem>\n                </MenuList>\n            </Menu>\n        </div>\n    );\n}","import React from \"react\";\nimport {AppBar, Toolbar} from \"@mui/material\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\nimport ToolButton from \"./ToolButton\";\nimport MouseIcon from '@mui/icons-material/Mouse';\nimport DashboardIcon from '@mui/icons-material/Dashboard';\nimport BrushIcon from \"@mui/icons-material/Brush\";\nimport {ToolTypes} from \"../../models/tools/ToolTypes\";\nimport MenuToolButton from \"./MenuToolButton\";\nimport TextFieldsIcon from \"@mui/icons-material/TextFields\";\nimport PhotoSizeSelectSmallIcon from \"@mui/icons-material/PhotoSizeSelectSmall\";\nimport ImageIcon from \"@mui/icons-material/Image\";\n\nconst useStyles = makeStyles(() => ({\n    left: {\n        justifyContent: \"flex-start\",\n    },\n    center: {\n        display: \"flex\",\n        flex: 1,\n        justifyContent: \"center\",\n    },\n    right: {\n        justifyContent: \"flex-end\",\n    }\n}));\n\nconst ToolBox = observer(() => {\n    const classes = useStyles();\n    const {canvasStore} = useStores();\n\n    return (\n        <AppBar>\n            <Toolbar variant={\"dense\"}>\n                <div className={classes.left}>\n                    <MenuToolButton/>\n                </div>\n                <div className={classes.center}>\n                    <ToolButton\n                        icon={<MouseIcon/>}\n                        text={ToolTypes.SELECT.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SELECT)}\n                        selected={canvasStore.canvasMode === ToolTypes.SELECT}\n                    />\n                    <ToolButton\n                        icon={<BrushIcon/>}\n                        text={ToolTypes.BRUSH.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.BRUSH)}\n                        selected={canvasStore.canvasMode === ToolTypes.BRUSH}\n                    />\n                    <ToolButton\n                        icon={<DashboardIcon/>}\n                        text={ToolTypes.SHAPE.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SHAPE)}\n                        selected={canvasStore.canvasMode === ToolTypes.SHAPE}\n                    />\n                    <ToolButton\n                        icon={<TextFieldsIcon/>}\n                        text={ToolTypes.TEXT.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.TEXT)}\n                        selected={canvasStore.canvasMode === ToolTypes.TEXT}\n                    />\n                    <ToolButton\n                        icon={<ImageIcon/>}\n                        text={ToolTypes.IMAGE.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.IMAGE)}\n                        selected={canvasStore.canvasMode === ToolTypes.IMAGE}\n                    />\n                    <ToolButton\n                        icon={<PhotoSizeSelectSmallIcon/>}\n                        text={ToolTypes.CANVAS.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.CANVAS)}\n                        selected={canvasStore.canvasMode === ToolTypes.CANVAS}\n                    />\n                </div>\n                <div className={classes.right}>\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n})\n\nexport default ToolBox;","import {fabric} from \"fabric\";\n\nexport class BrushType {\n    private static readonly _values: BrushType[] = [];\n    public static readonly PENCIL = new BrushType(\"pencil\", \"연필\");\n    public static readonly CIRCLE = new BrushType(\"circle\", \"원형\");\n    public static readonly SPRAY = new BrushType(\"spray\", \"스프레이\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        BrushType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getBrush(canvas: fabric.Canvas) {\n        switch (this) {\n            case BrushType.PENCIL:\n                return new (fabric.PencilBrush as any)(canvas);\n            case BrushType.CIRCLE:\n                return new (fabric.CircleBrush as any)(canvas);\n            case BrushType.SPRAY:\n                return new (fabric.SprayBrush as any)(canvas);\n            default:\n                return new (fabric.PencilBrush as any)(canvas);\n        }\n    }\n}","export const fontSizes = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72, 94, 130];\n\nexport enum FontFaceType {\n    DEFAULT,\n    GOOGLE,\n}\n\nexport const TextAlign = {\n    LEFT: \"left\",\n    CENTER: \"center\",\n    RIGHT: \"right\",\n}\n\nexport const FontWeight = {\n    NORMAL: \"normal\",\n    BOLD: \"bold\",\n}\n\nexport const FontStyle: Record<string, \"normal\" | \"italic\"> = {\n    NORMAL: \"normal\",\n    ITALIC: \"italic\",\n}\n\nexport class FontFaces {\n    private static readonly _values: FontFaces[] = [];\n    public static readonly TIMES_NEW_ROMAN = new FontFaces(\"Times New Roman\", \"Times New Roman\", FontFaceType.DEFAULT);\n    public static readonly NOTO_SANS_KR = new FontFaces(\"Noto Sans KR\", \"노토산스\", FontFaceType.GOOGLE);\n    public static readonly NANUM_GOTHIC = new FontFaces(\"Nanum Gothic\", \"나눔고딕\", FontFaceType.GOOGLE);\n    public static readonly NANUM_PEN_SCRIPT = new FontFaces(\"Nanum Pen Script\", \"나눔펜\", FontFaceType.GOOGLE);\n    public static readonly SONG_MYUNG = new FontFaces(\"Song Myung\", \"송명\", FontFaceType.GOOGLE);\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n        public readonly type: FontFaceType,\n    ) {\n        FontFaces._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public static getGoogleFonts() {\n        return this.values().filter(font => font.type === FontFaceType.GOOGLE);\n    }\n}","import React from \"react\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport { Slider } from \"@mui/material\";\nimport { Input } from \"@mui/material\";\nimport { Typography } from \"@mui/material\";\nimport { InputAdornment } from \"@mui/material\";\n\ninterface Props {\n    label: string;\n    value: number;\n    onChange: (value: number) => void;\n    prefix?: string;\n    min?: number;\n    max?: number;\n}\n\nconst useStyles = makeStyles(() => ({\n    label: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    }\n}));\n\nconst Range = ({ label, value, onChange, prefix, min, max }: Props) => {\n    const classes = useStyles();\n\n    const handleSliderChange = (event: any, newValue: number | number[]) => {\n        if (typeof newValue === \"number\") {\n            onChange(newValue);\n        }\n    };\n\n    return (\n        <div>\n            <div className={classes.label}>\n                <Typography variant={\"caption\"}>{label}</Typography>\n                <Input\n                    value={value}\n                    margin=\"dense\"\n                    inputProps={{\n                        min: 1,\n                        max: 100,\n                        type: 'number',\n                    }}\n                    endAdornment={<InputAdornment position=\"end\">{prefix}</InputAdornment>}\n                />\n            </div>\n            <div>\n                <Slider\n                    min={min}\n                    max={max}\n                    value={value}\n                    onChange={handleSliderChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Range;","import {Popover, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {ChromePicker, ColorResult} from \"react-color\"\nimport makeStyles from '@mui/styles/makeStyles';\n\ninterface Props {\n    label?: string,\n    color: string | undefined,\n    disableAlpha?: boolean,\n    disabled?: boolean,\n    onChange: (color: ColorResult) => void;\n}\n\nconst useStyles = makeStyles(() => ({\n    colorBox: {\n        width: \"100%\",\n        height: 35,\n        border: 1,\n        borderStyle: \"solid\",\n        borderColor: \"#c0c0c0\",\n        backgroundColor: (props: Props) => props.color,\n        cursor: (props: Props) => !props.disabled ? \"pointer\" : \"default\",\n    }\n}));\n\nconst ColorPicker = (props: Props) => {\n    const classes = useStyles(props);\n    const [anchorEl, setAnchorEl] = React.useState<HTMLDivElement | null>(null);\n    const open = !!anchorEl;\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            {props.label && <Typography variant={\"caption\"}>{props.label}</Typography>}\n            <div>\n                <div className={classes.colorBox} onClick={handleClick}/>\n                <Popover\n                    open={open && !props.disabled}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                >\n                    <ChromePicker color={props.color} disableAlpha={props.disableAlpha}\n                                  onChangeComplete={props.onChange}/>\n                </Popover>\n            </div>\n        </div>\n    )\n}\n\nexport default ColorPicker;","import { Box } from \"@mui/material\";\nimport React from \"react\";\nimport { ColorResult, TwitterPicker } from \"react-color\"\nimport ColorPicker from \"./ColorPicker\";\n\ninterface Props {\n    color: string | undefined,\n    disableAlpha?: boolean,\n    onChange: (color: ColorResult) => void;\n}\n\nconst ColorPalette = (props: Props) => {\n    return (\n        <div>\n            <Box mb={2}>\n                <ColorPicker {...props} />\n            </Box>\n            <TwitterPicker width={\"100%\"} color={props.color} onChangeComplete={props.onChange} />\n        </div>\n    )\n}\n\nexport default ColorPalette;","import React from \"react\";\n\nconst usePrevious = (value: any) => {\n    const ref = React.useRef();\n    React.useEffect(() => {\n        ref.current = value;\n    });\n\n    return ref.current;\n}\n\nexport default usePrevious;","import {Select, SelectChangeEvent} from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { FormControl } from \"@mui/material\";\nimport { Box } from \"@mui/material\";\nimport usePrevious from \"hooks/usePrevious\";\nimport React from \"react\"\nimport { ColorResult } from \"react-color\"\nimport ColorPicker from \"./ColorPicker\"\nimport {useTheme} from \"@mui/styles\";\n\ninterface Props {\n    color: string | undefined;\n    onChange: (color: string | undefined) => void;\n}\n\nconst ColorSelect = ({ color, onChange }: Props) => {\n    const previousColor = usePrevious(color);\n    const theme = useTheme();\n    const [selectedValue, setSelectedValue] = React.useState<string>(!color ? \"none\" : \"solid\");\n\n    const handleColorChange = (color: ColorResult) => {\n        const rgb = !color.rgb.a && color.rgb.a !== 0 ? color.hex : `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n        onChange(rgb);\n    }\n\n    const handleSelectedValueChange = (event: SelectChangeEvent) => {\n        const value = event.target.value;\n        setSelectedValue(value);\n\n        if (value === \"none\") {\n            onChange(undefined);\n        } else {\n            onChange(previousColor || theme.palette.primary.main);\n        }\n    };\n\n    return (\n        <Box display={\"flex\"}>\n            <Box mr={1.5} flexBasis={35}>\n                <ColorPicker color={color} onChange={handleColorChange} disabled={selectedValue === \"none\"} />\n            </Box>\n            <Box flex={1}>\n                <FormControl variant={\"standard\"} fullWidth>\n                    <Select\n                        value={selectedValue}\n                        onChange={handleSelectedValueChange}\n                    >\n                        <MenuItem value=\"none\">\n                            <em>없음</em>\n                        </MenuItem>\n                        <MenuItem value={\"solid\"}>단색</MenuItem>\n                    </Select>\n                </FormControl>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ColorSelect","import FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';\nimport FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';\nimport React from 'react';\nimport {ToggleButton, ToggleButtonGroup} from '@mui/material';\nimport {TextAlign} from 'models/tools/Text';\n\ninterface Props {\n    textAlign: string,\n    onChange: (textAlign: string) => void,\n}\n\nconst AlignButton = ({textAlign, onChange}: Props) => {\n    const handleAlignment = (\n        event: React.MouseEvent<HTMLElement>,\n        newAlignment: string | undefined,\n    ) => {\n        if (onChange) {\n            onChange(newAlignment || TextAlign.LEFT);\n        }\n    };\n\n    return (\n        <ToggleButtonGroup\n            value={textAlign}\n            exclusive\n            onChange={handleAlignment}\n            aria-label=\"text alignment\"\n            fullWidth\n        >\n            <ToggleButton value={TextAlign.LEFT} aria-label=\"left aligned\">\n                <FormatAlignLeftIcon />\n            </ToggleButton>\n            <ToggleButton value={TextAlign.CENTER} aria-label=\"centered\">\n                <FormatAlignCenterIcon />\n            </ToggleButton>\n            <ToggleButton value={TextAlign.RIGHT} aria-label=\"right aligned\">\n                <FormatAlignRightIcon />\n            </ToggleButton>\n        </ToggleButtonGroup>\n    )\n}\n\nexport default AlignButton;","import React from 'react';\nimport FormatBoldIcon from '@mui/icons-material/FormatBold';\nimport FormatItalicIcon from '@mui/icons-material/FormatItalic';\nimport FormatUnderlinedIcon from '@mui/icons-material/FormatUnderlined';\nimport {ToggleButton, ToggleButtonGroup} from '@mui/material';\n\ninterface Props {\n    bold: boolean;\n    italic: boolean;\n    underline: boolean;\n    toggleBold: (bold: boolean) => void;\n    toggleItalic: (italic: boolean) => void;\n    toggleUnderline: (underline: boolean) => void;\n}\n\nenum TextStyle {\n    BOLD = \"BOLD\",\n    ITALIC = \"ITALIC\",\n    UNDERLINED = \"UNDERLINED\",\n}\n\nconst TextStyleButton = ({bold, italic, underline, toggleBold, toggleItalic, toggleUnderline}: Props) => {\n    const formats = React.useMemo(() => {\n        const formats = [];\n        if (bold) formats.push(TextStyle.BOLD);\n        if (italic) formats.push(TextStyle.ITALIC);\n        if (underline) formats.push(TextStyle.UNDERLINED);\n        return formats;\n    }, [bold, italic, underline]);\n\n    const handleFormat = (\n        event: React.MouseEvent<HTMLElement>,\n        newFormats: string[],\n    ) => {\n        toggleBold(newFormats.includes(TextStyle.BOLD));\n        toggleItalic(newFormats.includes(TextStyle.ITALIC));\n        toggleUnderline(newFormats.includes(TextStyle.UNDERLINED));\n    };\n    \n    return (\n        <ToggleButtonGroup\n            value={formats}\n            onChange={handleFormat}\n            aria-label=\"text formatting\"\n            fullWidth\n        >\n            <ToggleButton value={TextStyle.BOLD} aria-label=\"bold\">\n                <FormatBoldIcon />\n            </ToggleButton>\n            <ToggleButton value={TextStyle.ITALIC} aria-label=\"italic\">\n                <FormatItalicIcon />\n            </ToggleButton>\n            <ToggleButton value={TextStyle.UNDERLINED} aria-label=\"underlined\">\n                <FormatUnderlinedIcon />\n            </ToggleButton>\n        </ToggleButtonGroup>\n    )\n}\n\nexport default TextStyleButton;","import {Button} from \"@mui/material\";\nimport PublishIcon from \"@mui/icons-material/Publish\";\nimport React from \"react\";\n\ninterface Props {\n    onChange?: (files: File[]) => void;\n}\n\nconst ImageUploadButton = ({onChange}: Props) => {\n    const inputRef = React.useRef<null | HTMLInputElement>(null);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (onChange) {\n            const files = e.target.files ? Array.from(e.target.files) : [];\n            onChange(files);\n        }\n    };\n\n    return (\n        <>\n            <input\n                ref={inputRef}\n                type={\"file\"}\n                style={{display: \"none\"}}\n                accept={\"image/*\"}\n                multiple={true}\n                onChange={handleChange}\n            />\n            <Button\n                variant={\"contained\"}\n                color={\"primary\"}\n                startIcon={<PublishIcon/>}\n                onClick={() => inputRef.current?.click()}\n            >\n                이미지 추가\n            </Button>\n        </>\n    )\n}\n\nexport default ImageUploadButton;","import {Typography} from \"@mui/material\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport { useStores } from \"hooks/useStores\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n    },\n    title: {\n        marginBottom: theme.spacing(3),\n    },\n    propBoxWrapper: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n}))\n\nconst PropBoxLayout: React.FC = observer(({ children }) => {\n    const classes = useStyles();\n    const { canvasStore, objectStore } = useStores();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.title}>\n                <Typography variant={\"h6\"} color={\"primary\"}>\n                    {objectStore.activeObject ? objectStore.getObjectTypeName() : canvasStore.canvasMode.display}\n                </Typography>\n            </div>\n            <div className={classes.propBoxWrapper}>\n                {children}\n            </div>\n        </div>\n    )\n})\n\nexport default PropBoxLayout;","import React from \"react\";\nimport {Box, BoxProps, Typography} from \"@mui/material\";\n\ninterface Props extends BoxProps {\n    label?: string,\n}\n\nconst PropBoxItem: React.FC<Props> = ({label, children, ...other}) => {\n    return (\n        <Box {...other}>\n            {label && (\n                <Box mb={1}>\n                    <Typography variant={\"caption\"}>{label}</Typography>\n                </Box>\n            )}\n            {children}\n        </Box>\n    )\n}\n\nexport default PropBoxItem;","import {Box} from \"@mui/material\";\nimport {BrushType} from \"../../models/tools/Brush\";\nimport React from \"react\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCircle, faPencilAlt, faSprayCan} from \"@fortawesome/free-solid-svg-icons\";\nimport clsx from \"clsx\";\nimport {ColorPalette, Range} from \"components/input\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport PropBoxItem from \"./PropBoxItem\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        color: theme.palette.text.primary,\n        \"&:hover\": {\n            backgroundColor: theme.palette.primary.main,\n            color: theme.palette.background.default,\n        },\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main,\n        color: theme.palette.background.default,\n    },\n}))\n\nconst BrushPropBox = observer(() => {\n    const classes = useStyles();\n    const {brushStore} = useStores();\n\n    return (\n        <PropBoxLayout>\n            {!brushStore.item && <div>\n                <PropBoxItem label={\"모양\"} mb={3}>\n                    <Box display=\"flex\">\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.PENCIL && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.PENCIL)}\n                        >\n                            <FontAwesomeIcon icon={faPencilAlt} size=\"lg\"/>\n                        </div>\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.SPRAY && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.SPRAY)}\n                        >\n                            <FontAwesomeIcon icon={faSprayCan} size=\"lg\"/>\n                        </div>\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.CIRCLE && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.CIRCLE)}\n                        >\n                            <FontAwesomeIcon icon={faCircle} size=\"lg\"/>\n                        </div>\n                    </Box>\n                </PropBoxItem>\n            </div>}\n            <PropBoxItem mb={3}>\n                <Range\n                    label=\"두께\"\n                    value={brushStore.strokeWidth}\n                    onChange={(strokeWidth) => brushStore.setStrokeWidth(strokeWidth)}\n                    prefix={\"px\"}\n                    min={1}\n                />\n            </PropBoxItem>\n            <PropBoxItem label={\"색상\"}>\n                <ColorPalette color={brushStore.stroke} onChange={(color) => brushStore.setStroke(color.hex)}\n                              disableAlpha={true}/>\n            </PropBoxItem>\n        </PropBoxLayout>\n    )\n})\n\nexport default BrushPropBox;","import {fabric} from \"fabric\";\n\nexport class ShapeType {\n    private static readonly _values: ShapeType[] = [];\n    public static readonly RECT = new ShapeType(\"rect\", \"사각형\");\n    public static readonly ELLIPSE = new ShapeType(\"ellipse\", \"원\");\n    public static readonly TRIANGLE = new ShapeType(\"triangle\", \"삼각형\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        ShapeType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getShape<T extends fabric.IObjectOptions>(options?: T) {\n        switch (this) {\n            case ShapeType.RECT:\n                return new fabric.Rect(options);\n            case ShapeType.ELLIPSE:\n                return new fabric.Ellipse(options);\n            case ShapeType.TRIANGLE:\n                return new fabric.Triangle(options);\n            default:\n                return new fabric.Rect(options);\n        }\n    }\n}","import {Box} from \"@mui/material\";\nimport React from \"react\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport {observer} from \"mobx-react\";\nimport {ShapeType} from \"../../models/tools/Shape\";\nimport clsx from \"clsx\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport {useStores} from \"hooks/useStores\";\nimport {ColorSelect, Range} from \"components/input\";\nimport PropBoxItem from \"./PropBoxItem\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        height: 40,\n        \"&:hover\": {\n            background: theme.palette.primary.main,\n            \"& svg > *\": {\n                stroke: theme.palette.background.default,\n            },\n        },\n    },\n    selected: {\n        background: theme.palette.primary.main,\n        \"& svg > *\": {\n            stroke: theme.palette.background.default,\n        },\n    },\n    propBox: {\n        \"& > div\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}))\n\nconst ShapePropBox = observer(() => {\n    const classes = useStyles();\n    const { shapeStore } = useStores();\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                {!shapeStore.item && <div>\n                    <PropBoxItem label={\"모양\"}>\n                        <Box display={\"flex\"}>\n                            <div\n                                className={clsx(classes.button, shapeStore.shapeType === ShapeType.ELLIPSE && classes.selected)}\n                                onClick={() => shapeStore.setShapeType(ShapeType.ELLIPSE)}\n                            >\n                                <svg height=\"24\" width=\"24\">\n                                    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\n                                </svg>\n                            </div>\n                            <div\n                                className={clsx(classes.button, shapeStore.shapeType === ShapeType.RECT && classes.selected)}\n                                onClick={() => shapeStore.setShapeType(ShapeType.RECT)}\n                            >\n                                <svg width=\"24\" height=\"24\">\n                                    <rect width=\"24\" height=\"24\" stroke=\"black\" fill=\"transparent\" strokeWidth={4} />\n                                </svg>\n                            </div>\n                            <div\n                                className={clsx(classes.button, shapeStore.shapeType === ShapeType.TRIANGLE && classes.selected)}\n                                onClick={() => shapeStore.setShapeType(ShapeType.TRIANGLE)}\n                            >\n                                <svg width=\"24\" height=\"24\">\n                                    <polygon points=\"12,2 22,22 2,22\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\n                                </svg>\n                            </div>\n                        </Box>\n                    </PropBoxItem>\n                </div>}\n                <PropBoxItem label={\"채우기\"}>\n                    <ColorSelect color={shapeStore.fill} onChange={(color: string | undefined) => shapeStore.setFill(color)} />\n                </PropBoxItem>\n                <PropBoxItem label={\"선 색상\"}>\n                    <ColorSelect color={shapeStore.stroke} onChange={(color: string | undefined) => shapeStore.setStroke(color)} />\n                </PropBoxItem>\n                <PropBoxItem>\n                    <Range label=\"선 두께\" value={shapeStore.strokeWidth} onChange={(strokeWidth) => shapeStore.setStrokeWidth(strokeWidth)} prefix={\"px\"} />\n                </PropBoxItem>\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default ShapePropBox;","import { IEvent } from \"fabric/fabric-impl\";\nimport { RootStore, Store } from \"./rootStore\";\n\nexport enum MouseEventType {\n    MOUSE_UP = \"mouse:up\",\n    MOUSE_DOWN = \"mouse:down\",\n    MOUSE_MOVE = \"mouse:move\",\n}\n\nexport interface MouseEventObject {\n    startCursorPosition: {x: number, y: number},\n    currentCursorPosition: {x: number, y: number},\n}\n\nexport class MouseEventStore implements Store {\n    private readonly listeners: any;\n    private startCursorPosition = { x: 0, y: 0 };\n    private currentCursorPosition = { x: 0, y: 0 };\n    private observer: Map<MouseEventType, Array<(e: MouseEventObject) => void>> = new Map();\n\n    constructor(private readonly rootStore: RootStore) {\n        this.listeners = {\n            onMouseDown: this.onMouseDown.bind(this),\n            onMouseUp: this.onMouseUp.bind(this),\n            onMouseMove: this.onMouseMove.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListeners();\n    }\n\n    onDestroy() {\n        this.removeEventListeners();\n    }\n\n    subscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\n        if (!this.observer.has(eventType)) {\n            this.observer.set(eventType, []);\n        }\n        \n        this.observer.get(eventType)?.push(listener);\n    }\n\n    unsubscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\n        this.observer.set(eventType, this.observer.get(eventType)?.filter(fn => fn !== listener) || []);\n    }\n\n    private onMouseDown(e: IEvent) {\n        this.startCursorPosition = { ...this.getCursorPosition(e) };\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_DOWN)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }));\n    }\n\n    private onMouseMove(e: IEvent) {\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_MOVE)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }));\n    }\n\n    private onMouseUp(e: IEvent) {\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_UP)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }));\n    }\n\n    private addEventListeners() {\n        const { canvas } = this.rootStore.canvasStore;\n        canvas.on(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        canvas.on(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n        canvas.on(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n    }\n\n    private removeEventListeners() {\n        const { canvas } = this.rootStore.canvasStore;\n        canvas.off(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        canvas.off(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n        canvas.off(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n    }\n\n    private getCursorPosition(e: IEvent) {\n        return this.rootStore.canvasStore.canvas.getPointer(e.e);\n    }\n}","import makeStyles from '@mui/styles/makeStyles';\nimport React from \"react\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport { AlignButton, ColorPicker, TextStyleButton } from \"../input\";\nimport { useStores } from \"hooks/useStores\";\nimport { observer } from \"mobx-react\";\nimport {Box, FormControl, Select, SelectChangeEvent} from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport { FontFaces, fontSizes } from \"models/tools/Text\";\nimport PropBoxItem from \"./PropBoxItem\";\n\nconst useStyles = makeStyles(theme => ({\n    propBox: {\n        \"& > *\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}));\n\nconst TextPropBox = observer(() => {\n    const classes = useStyles();\n    const { textStore } = useStores();\n\n    const handleFontSizeChange = (event: SelectChangeEvent) => {\n        const fontSize = parseInt(event.target.value, 10);\n        textStore.setFontSize(fontSize);\n    };\n\n    const handleFontFamilyChange = (event: SelectChangeEvent) => {\n        const fontFamily = event.target.value;\n        textStore.setFontFamily(fontFamily);\n    };\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                <PropBoxItem label={\"폰트\"}>\n                    <FormControl variant={\"standard\"} fullWidth>\n                        <Select\n                            value={textStore.fontFamily}\n                            onChange={handleFontFamilyChange}\n                        >\n                            {FontFaces.values().map(font => (\n                                <MenuItem\n                                    key={font.value}\n                                    value={font.value}\n                                    style={{\n                                        fontFamily: font.value,\n                                    }}\n                                >\n                                    {font.display}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </PropBoxItem>\n                <PropBoxItem label={\"폰트 크기\"}>\n                    <Box display={\"flex\"}>\n                        <Box flex={1} mr={1.5}>\n                            <FormControl variant={\"standard\"} fullWidth>\n                                <Select\n                                    value={textStore.fontSize.toString()}\n                                    onChange={handleFontSizeChange}\n                                >\n                                    <MenuItem value={textStore.fontSize}>{textStore.fontSize}</MenuItem>\n                                    {fontSizes.map(fontSize => (\n                                        textStore.fontSize !== fontSize && <MenuItem key={fontSize} value={fontSize}>{fontSize}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </Box>\n                        <Box flexBasis={35}>\n                            <ColorPicker color={textStore.fill} onChange={(color) => textStore.setFill(color.hex)} />\n                        </Box>\n                    </Box>\n                </PropBoxItem>\n                <PropBoxItem label={\"폰트 스타일\"}>\n                    <TextStyleButton\n                        bold={textStore.isBold()}\n                        italic={textStore.isItalic()}\n                        underline={textStore.underline}\n                        toggleBold={(bold) => textStore.setBold(bold)}\n                        toggleItalic={(italic) => textStore.setItalic(italic)}\n                        toggleUnderline={(underline) => textStore.setUnderline(underline)}\n                    />\n                </PropBoxItem>\n                <PropBoxItem label={\"정렬\"}>\n                    <AlignButton textAlign={textStore.textAlign} onChange={(textAlign) => textStore.setTextAlign(textAlign)} />\n                </PropBoxItem>\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default TextPropBox;","import {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport {Box, FormControl, Input, InputAdornment, InputLabel} from \"@mui/material\";\nimport React from \"react\";\nimport {ColorPalette} from \"../input\";\nimport PropBoxItem from \"./PropBoxItem\";\n\nconst CanvasPropBox = observer(() => {\n    const {canvasStore} = useStores();\n    const [width, setWidth] = React.useState(canvasStore.width);\n    const [height, setHeight] = React.useState(canvasStore.height);\n\n    return (\n        <PropBoxLayout>\n            <PropBoxItem label={\"캔버스 크기 조정\"} mb={3}>\n                <Box display={\"flex\"}>\n                    <Box flex={1} mr={1.5}>\n                        <FormControl variant={\"standard\"} fullWidth>\n                            <InputLabel htmlFor={\"canvas-width\"}>너비</InputLabel>\n                            <Input\n                                id={\"canvas-width\"}\n                                type={\"number\"}\n                                value={width}\n                                onChange={(event) => setWidth(parseInt(event.target.value))}\n                                onBlur={() => canvasStore.setWidth(width)}\n                                endAdornment={<InputAdornment position=\"end\">px</InputAdornment>}\n                            />\n                        </FormControl>\n                    </Box>\n                    <Box flex={1}>\n                        <FormControl variant={\"standard\"} fullWidth>\n                            <InputLabel htmlFor={\"canvas-width\"}>높이</InputLabel>\n                            <Input\n                                id={\"canvas-width\"}\n                                type={\"number\"}\n                                value={height}\n                                onChange={(event) => setHeight(parseInt(event.target.value))}\n                                onBlur={() => canvasStore.setHeight(height)}\n                                endAdornment={<InputAdornment position=\"end\">px</InputAdornment>}\n                            />\n                        </FormControl>\n                    </Box>\n                </Box>\n            </PropBoxItem>\n            <PropBoxItem label={\"배경\"}>\n                <ColorPalette\n                    color={canvasStore.backgroundColor}\n                    onChange={(event) => canvasStore.setBackgroundColor(event.hex)}\n                    disableAlpha={true}\n                />\n            </PropBoxItem>\n        </PropBoxLayout>\n    )\n})\n\nexport default CanvasPropBox;","import PropBoxLayout from \"./PropBoxLayout\";\n\nconst SelectPropBox = () => {\n    return (\n        <PropBoxLayout>\n            오브젝트를 선택하면 속성을 변경할 수 있습니다.\n        </PropBoxLayout>\n    )\n}\n\nexport default SelectPropBox;","import PropBoxLayout from \"./PropBoxLayout\";\nimport {ImageUploadButton} from \"../input\";\nimport React from \"react\";\nimport PropBoxItem from \"./PropBoxItem\";\nimport {Grid} from \"@mui/material\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\n\nconst ImagePropBox = observer(() => {\n    const {imageStore} = useStores();\n\n    return (\n        <PropBoxLayout>\n            <PropBoxItem mb={3}>\n                <ImageUploadButton\n                    onChange={(files) => imageStore.upload(files)}\n                />\n            </PropBoxItem>\n            <PropBoxItem>\n                <Grid container={true} spacing={1}>\n                    {imageStore.uploadedImages.map(image => (\n                        <Grid\n                            key={image.name}\n                            item={true}\n                            onClick={() => imageStore.addImage(image.dataUrl)}\n                            style={{cursor: \"pointer\"}}\n                        >\n                            <img\n                                src={image.dataUrl}\n                                alt={image.name}\n                                style={{\n                                    width: \"100%\",\n                                    objectFit: \"cover\",\n                                }}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n            </PropBoxItem>\n        </PropBoxLayout>\n    )\n})\n\nexport default ImagePropBox;","import React from \"react\";\nimport {observer} from \"mobx-react\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport {useStores} from \"../../hooks/useStores\";\nimport {ToolTypes} from \"../../models/tools/ToolTypes\";\nimport BrushPropBox from \"./BrushPropBox\";\nimport ShapePropBox from \"./ShapePropBox\";\nimport TextPropBox from \"./TextPropBox\";\nimport CanvasPropBox from \"./CanvasPropBox\";\nimport SelectPropBox from \"./SelectPropBox\";\nimport ImagePropBox from \"./ImagePropBox\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n    }\n}));\n\nconst PropBox = observer(() => {\n    const classes = useStyles();\n    const {canvasStore, objectStore} = useStores();\n    const selectedTool = canvasStore.canvasMode;\n    const activeObject = objectStore.activeObject;\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {!activeObject && <React.Fragment>\n                    {selectedTool === ToolTypes.SELECT && (<SelectPropBox/>)}\n                    {selectedTool === ToolTypes.BRUSH && (<BrushPropBox/>)}\n                    {selectedTool === ToolTypes.SHAPE && (<ShapePropBox/>)}\n                    {selectedTool === ToolTypes.TEXT && (<TextPropBox/>)}\n                    {selectedTool === ToolTypes.IMAGE && (<ImagePropBox/>)}\n                    {selectedTool === ToolTypes.CANVAS && (<CanvasPropBox/>)}\n                </React.Fragment>}\n                {activeObject && <React.Fragment>\n                    {objectStore.isPath() && <BrushPropBox/>}\n                    {objectStore.isShape() && <ShapePropBox/>}\n                    {objectStore.isText() && <TextPropBox/>}\n                    {objectStore.isImage() && <ImagePropBox/>}\n                </React.Fragment>}\n            </div>\n        </React.Fragment>\n    )\n})\n\nexport default PropBox;","import React from \"react\";\nimport {Layout} from \"../layout\";\nimport makeStyles from '@mui/styles/makeStyles';\nimport {ToolBox} from \"../../components/tools\";\nimport {observer} from \"mobx-react\";\nimport {Toolbar} from \"@mui/material\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {PropBox} from \"../../components/propbox\";\n\nconst leftMenuWidth = 260;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100vw\",\n        height: \"100vh\",\n    },\n    flexBox: {\n        display: \"flex\",\n        flex: 1,\n    },\n    contents: {\n        display: \"flex\",\n    },\n    left: {\n        flexBasis: `${leftMenuWidth}px`,\n    },\n    canvasWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1,\n        backgroundColor: theme.palette.grey.A400,\n        padding: theme.spacing(3),\n    },\n}))\n\nconst Canvas = observer(() => {\n    const classes = useStyles();\n    const rootStore = useStores();\n    const canvasRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!canvasRef.current) {\n            return;\n        }\n\n        rootStore.init(canvasRef.current);\n        rootStore.onInit();\n        return () => rootStore.onDestroy();\n    }, [rootStore, canvasRef]);\n\n    return (\n        <Layout>\n            <ToolBox/>\n            <div className={classes.root}>\n                <Toolbar variant={\"dense\"}/>\n                <div className={classes.flexBox}>\n                    <div className={classes.left}>\n                        <PropBox/>\n                    </div>\n                    <div className={classes.canvasWrapper} ref={canvasRef}/>\n                </div>\n            </div>\n        </Layout>\n    )\n})\n\nexport default Canvas;","import { makeAutoObservable } from \"mobx\";\nimport { BrushType } from \"models/tools/Brush\";\nimport { RootStore, Store } from \"./rootStore\";\nimport { fabric } from \"fabric\";\nimport { SelectionEventStore } from \"./selectionEventStore\";\nimport { CanvasModeManager } from \"./canvasStore\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport {ObjectStore} from \"./objectStore\";\n\nconst defaultStyles = {\n    brushType: BrushType.PENCIL,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n}\n\nexport class BrushStore implements Store, CanvasModeManager {\n    public brushType = defaultStyles.brushType;\n    public stroke = defaultStyles.stroke;\n    public strokeWidth = defaultStyles.strokeWidth;\n    public item: fabric.Path | undefined;\n\n    private readonly listeners: any;\n    private readonly canvas: fabric.Canvas;\n    private readonly selectionEventStore: SelectionEventStore;\n    private readonly objectStore: ObjectStore;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.BRUSH, this);\n        this.canvas = rootStore.canvasStore.canvas;\n        this.selectionEventStore = rootStore.selectionEventStore;\n        this.objectStore = rootStore.objectStore;\n        this.listeners = {\n            updateObject: this.updateObject.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addReactions();\n    }\n\n    onDestroy() {\n        this.removeReactions();\n    }\n\n    onSessionStart() {\n        this.canvas.isDrawingMode = true;\n        this.setBrushType(this.brushType);\n    }\n\n    onSessionEnd() {\n        this.canvas.isDrawingMode = false;\n    }\n\n    setBrushType(brushType: BrushType) {\n        this.brushType = brushType;\n        this.setFreeDrawingBrush();\n    }\n\n    updateStroke(stroke: string | undefined) {\n        this.stroke = stroke || defaultStyles.stroke;\n        this.canvas.freeDrawingBrush.color = this.stroke;\n    }\n\n    setStroke(stroke: string | undefined) {\n        this.updateStroke(stroke);\n        this.objectStore.setStroke(stroke);\n    }\n\n    updateStrokeWidth(strokeWidth: number | undefined) {\n        this.strokeWidth = strokeWidth || defaultStyles.strokeWidth;\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\n    }\n\n    setStrokeWidth(strokeWidth: number | undefined) {\n        this.updateStrokeWidth(strokeWidth);\n        this.objectStore.setStrokeWidth(strokeWidth);\n    }\n\n    private setFreeDrawingBrush() {\n        this.canvas.freeDrawingBrush = this.brushType.getBrush(this.canvas);\n        this.canvas.freeDrawingBrush.color = this.stroke;\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (this.isBrush(object)) {\n            this.item = object as fabric.Path;\n            this.updatePathStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private updatePathStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            stroke,\n            strokeWidth,\n        } = this.item;\n\n        this.updateStroke(stroke);\n        this.updateStrokeWidth(strokeWidth);\n    }\n\n    private isBrush(object: fabric.Object | undefined) {\n        return this.objectStore.isPath(object);\n    }\n\n    private addReactions() {\n        this.selectionEventStore.subscribe(this.listeners.updateObject);\n    }\n\n    private removeReactions() {\n        this.selectionEventStore.unsubscribe(this.listeners.updateObject);\n    }\n}","import {makeAutoObservable} from \"mobx\";\nimport {ToolTypes} from \"models/tools/ToolTypes\";\nimport {RootStore, Store} from \"./rootStore\";\nimport {fabric} from \"fabric\";\n\nconst defaultStyles = {\n    width: 500,\n    height: 500,\n    backgroundColor: \"#ffffff\",\n}\n\nexport interface CanvasModeManager {\n    onSessionStart: () => void;\n    onSessionEnd: () => void;\n}\n\nexport class CanvasStore implements Store {\n    private readonly canvasModeManagers: Map<ToolTypes, CanvasModeManager> = new Map();\n\n    width = defaultStyles.width;\n    height = defaultStyles.height;\n    backgroundColor = defaultStyles.backgroundColor;\n    canvasMode = ToolTypes.CANVAS;\n\n    constructor(\n        private readonly rootStore: RootStore,\n        readonly canvas: fabric.Canvas,\n    ) {\n        makeAutoObservable(this);\n    }\n\n    onInit() {\n        this.canvas.setWidth(this.width);\n        this.canvas.setHeight(this.height);\n        this.canvas.setBackgroundColor(this.backgroundColor, () => {});\n        this.setCanvasMode(this.canvasMode);\n    }\n\n    onDestroy() {\n        this.canvas.dispose();\n    }\n\n    registerCanvasModeManager(mode: ToolTypes, manager: CanvasModeManager) {\n        this.canvasModeManagers.set(mode, manager);\n    }\n\n    setCanvasMode(mode: ToolTypes) {\n        const previousMode = this.canvasMode;\n        this.canvasMode = mode;\n\n        this.canvas.discardActiveObject().renderAll();\n        this.setAllCursor(\"default\");\n        this.setSelectable(false)\n\n        this.canvasModeManagers.get(previousMode)?.onSessionEnd();\n        this.canvasModeManagers.get(mode)?.onSessionStart();\n    }\n\n    setSelectable(selectable: boolean) {\n        this.canvas.selection = selectable;\n        this.canvas.getObjects().forEach(obj => {\n            obj.selectable = selectable;\n        });\n    }\n\n    setDefaultCursor(cursor: string) {\n        this.canvas.defaultCursor = cursor;\n    }\n\n    setHoverCursor(cursor: string) {\n        this.canvas.getObjects().forEach(obj => {\n            obj.hoverCursor = cursor;\n        });\n    }\n\n    setAllCursor(cursor: string) {\n        this.setDefaultCursor(cursor);\n        this.setHoverCursor(cursor);\n    }\n\n    setWidth(width: number) {\n        this.width = width;\n        this.canvas.setWidth(width);\n    }\n\n    setHeight(height: number) {\n        this.height = height;\n        this.canvas.setHeight(height);\n    }\n\n    setBackgroundColor(color: string) {\n        this.backgroundColor = color;\n        this.canvas.setBackgroundColor(color, () => {});\n    }\n}","const deleteIcon = \"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg version='1.1' id='Ebene_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='595.275px' height='595.275px' viewBox='200 215 230 470' xml:space='preserve'%3E%3Ccircle style='fill:%23F44336;' cx='299.76' cy='439.067' r='218.516'/%3E%3Cg%3E%3Crect x='267.162' y='307.978' transform='matrix(0.7071 -0.7071 0.7071 0.7071 -222.6202 340.6915)' style='fill:white;' width='65.545' height='262.18'/%3E%3Crect x='266.988' y='308.153' transform='matrix(0.7071 0.7071 -0.7071 0.7071 398.3889 -83.3116)' style='fill:white;' width='65.544' height='262.179'/%3E%3C/g%3E%3C/svg%3E\";\n\nexport const DeleteImageElement = document.createElement('img');\nDeleteImageElement.src = deleteIcon;","import {fabric} from \"fabric\";\nimport {DeleteImageElement} from \"../../components/element/DeleteImageElement\";\n\ntype DeleteAction = (eventData: MouseEvent, transformData: fabric.Transform, x: number, y: number) => boolean;\n\nexport class DeleteControl {\n    public static init(deleteAction: DeleteAction) {\n        fabric.Object.prototype.controls.deleteControl = new fabric.Control({\n            x: 0.5,\n            y: -0.5,\n            offsetY: -16,\n            offsetX: 16,\n            cursorStyle: 'pointer',\n            mouseUpHandler: deleteAction,\n            render: this.renderIcon(DeleteImageElement),\n        })\n    }\n\n    private static renderIcon(icon: CanvasImageSource) {\n        return (ctx: CanvasRenderingContext2D, left: number, top: number, styleOverride: any, fabricObject: fabric.Object) => {\n            const size = fabricObject.cornerSize;\n            if (size) {\n                ctx.save();\n                ctx.translate(left, top);\n                ctx.rotate(fabric.util.degreesToRadians(fabricObject.angle || 0));\n                ctx.drawImage(icon, -size / 2, -size / 2, size, size);\n                ctx.restore();\n            }\n        };\n    }\n}","import {IEvent, Transform} from \"fabric/fabric-impl\";\nimport { makeAutoObservable, reaction } from \"mobx\";\nimport { CanvasStore } from \"./canvasStore\";\nimport { RootStore } from \"./rootStore\";\nimport {fabric} from \"fabric\";\nimport {DeleteControl} from \"../models/object/DeleteControl\";\n\nexport enum SelectionEventType {\n    SELECTION_CLEARED = \"selection:cleared\",\n    SELECTION_CREATED = \"selection:created\",\n    SELECTION_UPDATED = \"selection:updated\",\n}\n\nexport class SelectionEventStore {\n    private readonly canvasStore: CanvasStore;\n    private readonly listeners: { [eventName: string]: (e: IEvent) => void }\n    private readonly observer: Set<(object: fabric.Object | undefined) => void> = new Set();\n\n    activeObject: fabric.Object | undefined;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        this.canvasStore = rootStore.canvasStore;\n        this.listeners = {\n            onSelected: this.onSelected.bind(this),\n            onCleared: this.onCleared.bind(this),\n        }\n        this.addEventListeners();\n        this.initControl();\n    }\n\n    private onSelected(e: IEvent) {\n        const { target } = e;\n        if (!target) {\n            return;\n        }\n\n        this.activeObject = target;\n    }\n\n    private onCleared() {\n        this.activeObject = undefined;\n    }\n\n    private addEventListeners() {\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CREATED, this.listeners.onSelected);\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_UPDATED, this.listeners.onSelected);\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CLEARED, this.listeners.onCleared);\n        reaction(\n            () => this.activeObject,\n            () => this.observer.forEach(callback => callback(this.activeObject)),\n        );\n    }\n\n    private initControl() {\n        DeleteControl.init(this.removeActiveObjects);\n    }\n\n    private removeActiveObjects(_eventData: MouseEvent, transform: Transform): boolean {\n        const canvas = transform.target.canvas;\n        if (!canvas) {\n            return false;\n        }\n\n        const activeObjects = canvas.getActiveObjects();\n        if (activeObjects.length === 0) {\n            return false;\n        }\n\n        canvas.getActiveObjects().forEach(object => canvas.remove(object));\n        canvas.discardActiveObject();\n        canvas.requestRenderAll();\n        return true;\n    }\n\n    subscribe(listener: (object: fabric.Object | undefined) => void) {\n        this.observer.add(listener);\n    }\n\n    unsubscribe(listener: (object: fabric.Object | undefined) => void) {\n        this.observer.delete(listener);\n    }\n}","import { IEvent } from \"fabric/fabric-impl\";\nimport { RootStore, Store } from \"./rootStore\";\n\nexport enum ObjectEventType {\n    OBJECT_SCALING = \"object:scaling\",\n    OBJECT_MODIFIED = \"object:modified\",\n}\n\nexport class ObjectEventStore implements Store {\n    private readonly listeners: any;\n    private readonly observer: Map<ObjectEventType, Set<(e: IEvent) => void>> = new Map();\n\n    constructor(private readonly rootStore: RootStore) {\n        this.listeners = {\n            onScaling: this.onScaling.bind(this),\n            onModified: this.onModified.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListener();\n    }\n\n    onDestroy() {\n        this.removeEventListener();\n    }\n\n    private addEventListener() {\n        const {canvas} = this.rootStore.canvasStore;\n        canvas.on(ObjectEventType.OBJECT_SCALING, this.listeners.onScaling);\n        canvas.on(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n    }\n\n    private removeEventListener() {\n        const {canvas} = this.rootStore.canvasStore;\n        canvas.off(ObjectEventType.OBJECT_SCALING, this.listeners.onScaling);\n        canvas.off(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n    }\n\n    private onScaling(e: IEvent) {\n        this.observer.get(ObjectEventType.OBJECT_SCALING)?.forEach(callbackFn => callbackFn(e));\n    }\n\n    private onModified(e: IEvent) {\n        this.observer.get(ObjectEventType.OBJECT_MODIFIED)?.forEach(callbackFn => callbackFn(e));\n    }\n\n    subscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\n        if (!this.observer.has(eventType)) {\n            this.observer.set(eventType, new Set());\n        }\n\n        this.observer.get(eventType)?.add(listener);\n    }\n\n    unsubscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\n        this.observer.get(eventType)?.delete(listener);\n    }\n}\n\nexport default ObjectEventStore;","import { makeAutoObservable } from \"mobx\";\nimport { ShapeType } from \"models/tools/Shape\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport { CanvasModeManager } from \"./canvasStore\";\nimport { MouseEventObject, MouseEventStore, MouseEventType } from \"./mouseEventStore\";\nimport { SelectionEventStore } from \"./selectionEventStore\";\nimport { RootStore, Store } from \"./rootStore\";\nimport {fabric} from \"fabric\";\nimport {ObjectStore} from \"./objectStore\";\n\nconst defaultStyles = {\n    shapeType: ShapeType.ELLIPSE,\n    fill: undefined,\n    strokeWidth: 3,\n    stroke: \"#000000\",\n}\n\nexport class ShapeStore implements Store, CanvasModeManager {\n    private static readonly MIN_OBJECT_SIZE = 30;\n    private readonly canvas: fabric.Canvas;\n    private readonly mouseEventStore: MouseEventStore;\n    private readonly selectionEventStore: SelectionEventStore;\n    private readonly objectStore: ObjectStore;\n    private readonly listeners: any;\n    private isDragMode = false;\n\n    item: fabric.Rect | fabric.Triangle | fabric.Ellipse | undefined;\n    fill: string | undefined = defaultStyles.fill;\n    shapeType = defaultStyles.shapeType;\n    strokeWidth = defaultStyles.strokeWidth;\n    stroke: string | undefined = defaultStyles.stroke;\n\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.SHAPE, this);\n        this.canvas = rootStore.canvasStore.canvas;\n        this.mouseEventStore = rootStore.mouseEventStore;\n        this.selectionEventStore = rootStore.selectionEventStore;\n        this.objectStore = rootStore.objectStore;\n        this.listeners = {\n            onMouseUp: this.onMouseUp.bind(this),\n            onMouseDown: this.onMouseDown.bind(this),\n            onMouseMove: this.onMouseMove.bind(this),\n            updateObject: this.updateObject.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListeners();\n        this.addReactions();\n    }\n\n    onDestroy() {\n        this.removeEventListener();\n        this.removeReactions();\n    }\n\n    onSessionStart() {\n        this.rootStore.canvasStore.setAllCursor(\"crosshair\");\n    }\n\n    onSessionEnd() {\n        //\n    }\n\n    setShapeType(shapeType: ShapeType) {\n        this.shapeType = shapeType;\n    }\n\n    setFill(fill: string | undefined) {\n        this.fill = fill;\n        this.objectStore.setFill(fill);\n    }\n\n    setStroke(stroke: string | undefined) {\n        this.stroke = stroke;\n        this.objectStore.setStroke(stroke);\n    }\n\n    setStrokeWidth(strokeWidth: number) {\n        this.strokeWidth = strokeWidth;\n        this.objectStore.setStrokeWidth(strokeWidth);\n    }\n\n    private addReactions() {\n        this.selectionEventStore.subscribe(this.listeners.updateObject);\n    }\n\n    private removeReactions() {\n        this.selectionEventStore.unsubscribe(this.listeners.updateObject);\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (this.objectStore.isShape(object)) {\n            this.item = object;\n            this.updateShapeStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private updateShapeStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            stroke,\n            strokeWidth,\n            fill,\n        } = this.item;\n\n        this.fill = typeof fill === \"string\" ? fill : undefined;\n        this.stroke = stroke;\n        this.strokeWidth = strokeWidth || defaultStyles.strokeWidth;\n    }\n\n    private addEventListeners() {\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n    }\n\n    private removeEventListener() {\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n    }\n\n    private isShapeTool() {\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.SHAPE;\n    }\n\n    private onMouseDown(e: MouseEventObject) {\n        if (!this.isShapeTool()) {\n            return;\n        }\n\n        this.isDragMode = true;\n        this.item = this.shapeType.getShape({\n            left: e.startCursorPosition.x,\n            top: e.startCursorPosition.y,\n            stroke: this.stroke,\n            strokeWidth: this.strokeWidth,\n            fill: this.fill,\n            selectable: false,\n            hoverCursor: \"default\",\n            strokeUniform: true,\n        });\n\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: 0,\n                height: 0,\n            })\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            (this.item as fabric.Ellipse).set({\n                rx: 0,\n                ry: 0,\n            })\n        }\n\n        this.rootStore.canvasStore.canvas.add(this.item);\n    }\n\n    private onMouseMove(e: MouseEventObject) {\n        if (!this.isShapeTool() || !this.isDragMode || !this.item) {\n            return;\n        }\n\n        if (e.currentCursorPosition.x < e.startCursorPosition.x) {\n            this.item.set({ left: Math.abs(e.currentCursorPosition.x) });\n        }\n\n        if (e.currentCursorPosition.y < e.startCursorPosition.y) {\n            this.item.set({ top: Math.abs(e.currentCursorPosition.y) });\n        }\n\n        this.item.set({ flipX: e.currentCursorPosition.x < e.startCursorPosition.x });\n        this.item.set({ flipY: e.currentCursorPosition.y < e.startCursorPosition.y });\n\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x),\n                height: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y),\n            });\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            (this.item as fabric.Ellipse).set({\n                rx: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x) / 2,\n                ry: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y) / 2,\n            })\n        }\n\n        this.rootStore.canvasStore.canvas.renderAll();\n    }\n\n    private onMouseUp(e: MouseEventObject) {\n        if (!this.isShapeTool() || !this.item) {\n            return;\n        }\n\n        this.isDragMode = false;\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.width || ShapeStore.MIN_OBJECT_SIZE),\n                height: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.height || ShapeStore.MIN_OBJECT_SIZE),\n            }).setCoords();\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            const circle = this.item as fabric.Ellipse;\n            circle.set({\n                rx: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.rx || ShapeStore.MIN_OBJECT_SIZE / 2),\n                ry: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.ry || ShapeStore.MIN_OBJECT_SIZE / 2),\n            }).setCoords();\n        }\n\n        const canvasStore = this.rootStore.canvasStore;\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\n        canvasStore.canvas.setActiveObject(this.item);\n        canvasStore.canvas.renderAll();\n\n        this.item = undefined;\n    }\n}","import { makeAutoObservable } from \"mobx\";\nimport { RootStore } from \"./rootStore\";\n\nexport class UIStore {\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);\n    }\n}","import {MouseEventObject, MouseEventStore, MouseEventType} from \"./mouseEventStore\";\nimport {RootStore, Store} from \"./rootStore\";\nimport {fabric} from \"fabric\";\nimport {ToolTypes} from \"models/tools/ToolTypes\";\nimport {ObjectEventStore, ObjectEventType} from \"./objectEventStore\";\nimport {IEvent} from \"fabric/fabric-impl\";\nimport {SelectionEventStore} from \"./selectionEventStore\";\nimport {makeAutoObservable} from \"mobx\";\nimport {FontFaces, fontSizes, FontStyle, FontWeight, TextAlign} from \"models/tools/Text\";\nimport WebFont from \"webfontloader\";\nimport {CanvasModeManager} from \"./canvasStore\";\nimport {ObjectStore} from \"./objectStore\";\n\nconst defaultStyles = {\n    FONT_SIZE: fontSizes[fontSizes.length / 2],\n    FILL: \"#000000\",\n    FONT_FAMILY: FontFaces.TIMES_NEW_ROMAN.value,\n    TEXT_ALIGN: TextAlign.LEFT,\n    FONT_STYLE: FontStyle.NORMAL,\n    FONT_WEIGHT: FontWeight.NORMAL,\n    UNDERLINE: false,\n}\n\nexport class TextStore implements Store, CanvasModeManager {\n    private readonly selectionEventStore: SelectionEventStore;\n    private readonly mouseEventStore: MouseEventStore;\n    private readonly objectEventStore: ObjectEventStore;\n    private readonly objectStore: ObjectStore;\n    private readonly canvas: fabric.Canvas;\n    private readonly listeners: any;\n    private fontStyle = defaultStyles.FONT_STYLE;\n    private fontWeight: string = defaultStyles.FONT_WEIGHT;\n    private autoRenderId: NodeJS.Timeout | undefined;\n\n    fontSize = defaultStyles.FONT_SIZE;\n    fill = defaultStyles.FILL;\n    fontFamily = defaultStyles.FONT_FAMILY;\n    textAlign = defaultStyles.TEXT_ALIGN;\n    underline = defaultStyles.UNDERLINE;\n    item: fabric.IText | undefined;\n\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.TEXT, this);\n        this.loadFont();\n        this.selectionEventStore = rootStore.selectionEventStore;\n        this.mouseEventStore = rootStore.mouseEventStore;\n        this.objectEventStore = rootStore.objectEventStore;\n        this.objectStore = rootStore.objectStore;\n        this.canvas = rootStore.canvasStore.canvas;\n        this.listeners = {\n            onMouseUp: this.onMouseUp.bind(this),\n            onModified: this.onModified.bind(this),\n            updateObject: this.updateObject.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListener();\n        this.addFontAutoRender();\n    }\n\n    onDestroy() {\n        this.removeEventListener();\n        this.removeFontAutoRender();\n    }\n\n    onSessionStart() {\n        this.rootStore.canvasStore.setAllCursor(\"text\");\n    }\n\n    onSessionEnd() {\n        //\n    }\n\n    setFontSize(fontSize: number) {\n        this.fontSize = fontSize;\n        if (this.item) {\n            this.item.set({fontSize: fontSize});\n            this.canvas.renderAll();\n        }\n    }\n\n    setFill(fill: string) {\n        this.fill = fill;\n        this.objectStore.setFill(fill);\n    }\n\n    setFontFamily(fontFamily: string) {\n        this.fontFamily = fontFamily;\n        this.item?.set({fontFamily: fontFamily});\n    }\n\n    setTextAlign(textAlign: string) {\n        this.textAlign = textAlign;\n        this.item?.set({textAlign: textAlign});\n    }\n\n    setUnderline(underline: boolean) {\n        this.underline = underline;\n        this.item?.set({underline: underline});\n    }\n\n    setBold(bold: boolean) {\n        const changedValue = bold ? FontWeight.BOLD : FontWeight.NORMAL;\n        this.fontWeight = changedValue;\n        this.item?.set({fontWeight: changedValue});\n    }\n\n    isBold() {\n        return this.fontWeight === FontWeight.BOLD;\n    }\n\n    setItalic(italic: boolean) {\n        const changedValue = italic ? \"italic\" : \"normal\";\n        this.fontStyle = changedValue;\n        this.item?.set({fontStyle: changedValue});\n    }\n\n    isItalic() {\n        return this.fontStyle === \"italic\";\n    }\n\n    private addEventListener() {\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.objectEventStore.subscribe(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n        this.selectionEventStore.subscribe(this.listeners.updateObject);\n    }\n\n    private removeEventListener() {\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.objectEventStore.unsubscribe(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n        this.selectionEventStore.unsubscribe(this.listeners.updateObject);\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (object && this.objectStore.isText(object)) {\n            this.item = object as fabric.IText;\n            this.updateTextStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private updateTextStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            fontSize,\n            fill,\n            fontFamily,\n            textAlign,\n            fontStyle,\n            fontWeight,\n            underline,\n        } = this.item;\n\n        this.fontSize = fontSize || defaultStyles.FONT_SIZE;\n        this.fill = typeof fill === \"string\" ? fill : defaultStyles.FILL;\n        this.fontFamily = fontFamily || defaultStyles.FONT_FAMILY;\n        this.textAlign = textAlign || defaultStyles.TEXT_ALIGN;\n        this.fontStyle = fontStyle === FontStyle.NORMAL || fontStyle === FontStyle.ITALIC ? fontStyle : defaultStyles.FONT_STYLE;\n        this.fontWeight = typeof fontWeight === \"string\" ? fontWeight : defaultStyles.FONT_WEIGHT;\n        this.underline = !!underline;\n    }\n\n    private onMouseUp(e: MouseEventObject) {\n        if (!this.isTextTool()) {\n            return;\n        }\n\n        this.item = new fabric.IText(\"텍스트를 입력해주세요\", {\n            top: e.currentCursorPosition.y,\n            left: e.currentCursorPosition.x,\n            fontSize: this.fontSize,\n            fill: this.fill,\n            fontFamily: this.fontFamily,\n            textAlign: this.textAlign,\n            fontStyle: this.fontStyle,\n            fontWeight: this.fontWeight,\n            underline: this.underline,\n            lockUniScaling: true,\n        });\n\n        this.item.setControlVisible(\"mt\", false);\n        this.item.setControlVisible(\"mb\", false);\n        this.item.setControlVisible(\"ml\", false);\n        this.item.setControlVisible(\"mr\", false);\n\n        const canvasStore = this.rootStore.canvasStore;\n        canvasStore.canvas.add(this.item);\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\n        canvasStore.canvas.setActiveObject(this.item);\n\n        this.item.selectAll();\n        this.item.enterEditing();\n    }\n\n    private onModified(e: IEvent) {\n        const {target} = e;\n        if (!target || !this.objectStore.isText(target)) {\n            return;\n        }\n\n        const text = target as fabric.IText;\n        const fontSize = parseInt(((text.fontSize || defaultStyles.FONT_SIZE) * (text.scaleX || 1)).toFixed(0), 10);\n        text.set({\n            scaleX: 1,\n            scaleY: 1,\n        });\n        this.setFontSize(fontSize);\n    }\n\n    private isTextTool() {\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.TEXT;\n    }\n\n    private loadFont() {\n        WebFont.load({\n            google: {\n                families: FontFaces.getGoogleFonts().map(font => font.value),\n            },\n        })\n    }\n\n    private addFontAutoRender() {\n        this.autoRenderId = setInterval(() => {\n            this.canvas.getActiveObjects()\n                .filter(object => this.objectStore.isText(object))\n                .forEach((object) => {\n                    const textObject = object as fabric.IText;\n                    textObject.initDimensions();\n                    textObject.dirty = true;\n                });\n            fabric.util.clearFabricFontCache();\n            this.canvas.renderAll();\n        }, 1000);\n    }\n\n    private removeFontAutoRender() {\n        if (this.autoRenderId) {\n            clearInterval(this.autoRenderId);\n        }\n    }\n}","import { ToolTypes } from \"models/tools/ToolTypes\";\nimport { CanvasModeManager } from \"./canvasStore\";\nimport { RootStore } from \"./rootStore\";\n\nexport class SelectStore implements CanvasModeManager {\n    constructor(private readonly rootStore: RootStore) {\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.SELECT, this);\n    }\n\n    onSessionStart() {\n        this.rootStore.canvasStore.setSelectable(true);\n        this.rootStore.canvasStore.setHoverCursor(\"move\");\n    }\n\n    onSessionEnd() {\n        //\n    }\n}","import {RootStore, Store} from \"./rootStore\";\nimport {SelectionEventStore} from \"./selectionEventStore\";\nimport {makeAutoObservable} from \"mobx\";\nimport {fabric} from \"fabric\";\nimport {ShapeType} from \"../models/tools/Shape\";\n\nexport class ObjectStore implements Store {\n    private readonly selectionEventStore: SelectionEventStore;\n    private readonly listeners: any;\n\n    public activeObject: fabric.Object | undefined;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        this.selectionEventStore = rootStore.selectionEventStore;\n        this.listeners = {\n            updateObject: this.updateObject.bind(this),\n        }\n    }\n\n    onInit(): void {\n        this.addReactions();\n    }\n\n    onDestroy(): void {\n        this.removeReactions();\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        this.activeObject = object;\n    }\n\n    private addReactions() {\n        this.selectionEventStore.subscribe(this.listeners.updateObject);\n    }\n\n    private removeReactions() {\n        this.selectionEventStore.unsubscribe(this.listeners.updateObject);\n    }\n\n    public isRect(object = this.activeObject) {\n        return object?.isType(ShapeType.RECT.value);\n    }\n\n    public isEllipse(object = this.activeObject) {\n        return object?.isType(ShapeType.ELLIPSE.value);\n    }\n\n    public isTriangle(object = this.activeObject) {\n        return object?.isType(ShapeType.TRIANGLE.value);\n    }\n\n    public isShape(object = this.activeObject) {\n        return this.isRect(object) || this.isEllipse(object) || this.isTriangle(object);\n    }\n\n    public isPath(object = this.activeObject) {\n        return object?.isType(\"path\");\n    }\n\n    public isText(object = this.activeObject) {\n        return object?.isType(\"i-text\");\n    }\n\n    public isImage(object = this.activeObject) {\n        return object?.isType(\"image\");\n    }\n\n    public isActiveSelection(object = this.activeObject) {\n        return object?.isType(\"activeSelection\");\n    }\n\n    public isGroup(object = this.activeObject) {\n        return object?.isType(\"group\");\n    }\n\n    public getObjectTypeName(object = this.activeObject): string {\n        console.log(object?.type);\n        if (this.isRect(object)) {\n            return ShapeType.RECT.display;\n        } else if (this.isEllipse(object)) {\n            return ShapeType.ELLIPSE.display;\n        } else if (this.isTriangle(object)) {\n            return ShapeType.TRIANGLE.display;\n        } else if (this.isPath(object)) {\n            return \"패스\";\n        } else if (this.isText(object)) {\n            return \"텍스트\";\n        } else if (this.isImage(object)) {\n            return \"이미지\";\n        } else if (this.isGroup(object)) {\n            return \"그룹\"\n        } else {\n            return \"오브젝트\";\n        }\n    }\n\n    public setFill(value: string | undefined, object = this.activeObject) {\n        this.setStyles(\"fill\", value, object);\n    }\n\n    public setStroke(value: string | undefined, object = this.activeObject) {\n        this.setStyles(\"stroke\", value, object);\n    }\n\n    public setStrokeWidth(value: number | undefined, object = this.activeObject) {\n        this.setStyles(\"strokeWidth\", value, object);\n    }\n\n    public setScaleX(value: number, object = this.activeObject) {\n        this.setStyles(\"scaleX\", value, object);\n    }\n\n    public setScaleY(value: number, object = this.activeObject) {\n        this.setStyles(\"scaleY\", value, object);\n    }\n\n    private setStyles(key: keyof fabric.Object, value: any, object = this.activeObject) {\n        object?.set(key, value);\n    }\n}","import {RootStore} from \"./rootStore\";\nimport {CanvasStore} from \"./canvasStore\";\nimport {makeAutoObservable} from \"mobx\";\nimport {fabric} from \"fabric\";\nimport {ObjectStore} from \"./objectStore\";\n\nexport class ImageStore {\n    public readonly uploadedImages: {name: string, dataUrl: string}[] = [];\n    private readonly canvasStore: CanvasStore;\n    private readonly objectStore: ObjectStore;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        this.canvasStore = rootStore.canvasStore;\n        this.objectStore = rootStore.objectStore;\n    }\n\n    public addImage(dataUrl: string): void {\n        fabric.Image.fromURL(dataUrl, (img) => {\n            if (!img.width || !img.height) {\n                return;\n            }\n\n            if (img.width > this.canvasStore.width) {\n                const scale = this.canvasStore.width / img.width * (3/4);\n                this.objectStore.setScaleX(scale, img);\n                this.objectStore.setScaleY(scale, img);\n            } else if (img.height > this.canvasStore.height) {\n                const scale = this.canvasStore.height / img.height * (3/4);\n                this.objectStore.setScaleX(scale, img);\n                this.objectStore.setScaleY(scale, img);\n            }\n\n            this.canvasStore.canvas.add(img);\n        });\n    }\n\n    public upload(files: File[]) {\n        files.forEach(async (file) => {\n            const dataUrl = await this.readFileAsync(file);\n            if (typeof dataUrl === \"string\") {\n                this.uploadedImages.push({\n                    name: file.name,\n                    dataUrl: dataUrl,\n                });\n            }\n        });\n    }\n\n    private readFileAsync(file: File): Promise<string | ArrayBuffer | null> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = () => reject();\n            reader.readAsDataURL(file);\n        })\n    }\n}","import { fabric } from \"fabric\";\nimport { BrushStore } from \"./brushStore\";\nimport { CanvasStore } from \"./canvasStore\";\nimport { MouseEventStore } from \"./mouseEventStore\";\nimport { SelectionEventStore } from \"./selectionEventStore\";\nimport { ObjectEventStore } from \"./objectEventStore\";\nimport { ShapeStore } from \"./shapeStore\";\nimport { UIStore } from \"./UIStore\";\nimport { TextStore } from \"./textStore\";\nimport { SelectStore } from \"./selectStore\";\nimport {ObjectStore} from \"./objectStore\";\nimport {ImageStore} from \"./imageStore\";\n\nexport interface Store {\n    onInit: () => void;\n    onDestroy: () => void;\n}\n\nexport class RootStore implements Store {\n    private readonly canvasElement: HTMLCanvasElement;\n    canvasStore: CanvasStore;\n    selectionEventStore: SelectionEventStore;\n    objectEventStore: ObjectEventStore;\n    mouseEventStore: MouseEventStore;\n\n    objectStore: ObjectStore;\n    brushStore: BrushStore;\n    shapeStore: ShapeStore;\n    textStore: TextStore;\n    imageStore: ImageStore;\n    selectStore: SelectStore;\n    UIStore: UIStore;\n\n    constructor() {\n        this.canvasElement = document.createElement(\"canvas\");\n        document.body.append(this.canvasElement);\n\n        this.canvasStore = new CanvasStore(this, new fabric.Canvas(this.canvasElement));\n        this.selectionEventStore = new SelectionEventStore(this);\n        this.objectEventStore = new ObjectEventStore(this);\n        this.mouseEventStore = new MouseEventStore(this);\n\n        this.objectStore = new ObjectStore(this);\n        this.brushStore = new BrushStore(this);\n        this.shapeStore = new ShapeStore(this);\n        this.textStore = new TextStore(this);\n        this.imageStore = new ImageStore(this);\n        this.selectStore = new SelectStore(this);\n        this.UIStore = new UIStore(this);\n    }\n\n    onInit() {\n        Object.values(this).forEach(obj => {\n            if (obj.onInit) {\n                obj.onInit();\n            }\n        });\n    }\n\n    onDestroy() {\n        Object.values(this).forEach(obj => {\n            if (obj.onDestory) {\n                obj.onDestory();\n            }\n        });\n    }\n\n    init(container: HTMLElement): void {\n        container.append(this.canvasElement.parentElement!);\n    }\n}\n\nexport default new RootStore();","import {Canvas} from 'templates/canvas';\nimport React from 'react';\nimport {StoreProvider} from \"./contexts/storeContext\";\nimport rootStore from \"./stores/rootStore\";\nimport createTheme from '@mui/material/styles/createTheme';\nimport {Theme, ThemeProvider} from '@mui/material/styles';\nimport {CssBaseline} from \"@mui/material\";\n\ndeclare module '@mui/styles/defaultTheme' {\n    interface DefaultTheme extends Theme {}\n}\n\nconst App = () => {\n    const theme = React.useMemo(() => createTheme({\n        palette: {\n            primary: {\n                main: \"#292929\",\n            },\n            secondary: {\n                main: \"#aa75ff\",\n            },\n        }\n    }), []);\n\n    React.useEffect(() => {\n        document.title = \"캔버스\";\n    }, []);\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <StoreProvider value={rootStore}>\n                <Canvas/>\n            </StoreProvider>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}