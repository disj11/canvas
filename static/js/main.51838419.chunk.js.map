{"version":3,"sources":["models/canvas/ToolTypes.tsx","templates/layout/Layout.tsx","components/tools/ToolButton.tsx","models/canvas/CanvasMode.tsx","models/canvas/Shape.tsx","models/canvas/ShapeCanvasEvent.tsx","models/canvas/TextCanvasEvent.tsx","models/canvas/CanvasEvent.tsx","models/canvas/Brush.tsx","stores/CanvasStore.tsx","utils/FileUtils.tsx","contexts/StoreContext.tsx","stores/RootStore.tsx","hooks/useStores.tsx","components/tools/MenuToolButton.tsx","components/tools/ToolBox.tsx","components/tools/BrushPropBox.tsx","components/tools/ShapePropBox.tsx","components/tools/PropBox.tsx","templates/canvas/Canvas.tsx","App.tsx","index.tsx"],"names":["ToolTypes","useStyles","makeStyles","progressWrapper","display","justifyContent","alignItems","Layout","loading","children","classes","Fragment","CssBaseline","className","CircularProgress","theme","button","cursor","color","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","textAlign","caption","fontSize","selected","background","ToolButton","icon","text","onClick","clsx","CanvasMode","canvasStore","this","canvas","isDrawingMode","selectable","defaultCursor","discardActiveObject","renderAll","resetCanvas","setTool","CanvasModeFactory","selectedTool","SELECT","SelectCanvasMode","BRUSH","BrushCanvasMode","SHAPE","ShapeCanvasMode","TEXT","TextCanvasMode","CANVAS","CanvasResizeMode","DefaultCanvasMode","add","fabric","ActiveSelection","width","height","type","backgroundColor","hasBorders","cornerColor","ShapeType","value","_values","push","options","RECT","Rect","ELLIPSE","Ellipse","TRIANGLE","Triangle","values","find","v","MIN_OBJECT_SIZE","ShapeCanvasMouseUpEvent","e","object","isType","set","Math","max","setCoords","circle","rx","ry","setActiveObject","ShapeCanvasMouseDownEvent","shapeType","getShape","left","startCursorPosition","x","top","y","hasBorder","stroke","strokeWidth","fill","hoverCursor","ShapeCanvasMouseMoveEvent","currentCursorPosition","abs","TextCanvasMouseUpEvent","IText","selectAll","enterEditing","TextCanvasMouseDownEvent","TextCanvasMouseMoveEvent","CanvasEvent","shareObject","isDown","on","MOUSE_UP","handleMouseUp","bind","MOUSE_MOVE","handleMouseMove","MOUSE_DOWN","handleMouseDown","SELECTION_CREATED","handleSelectObject","SELECTION_UPDATED","SELECTION_CLEARED","handleDeSelectObject","activeObject","getActiveObject","activeObjects","getActiveObjects","undefined","CanvasMouseUpEventFactory","getInstance","handle","getCursorPosition","CanvasMouseDownEventFactory","CanvasMouseMoveEventFactory","getPointer","BrushType","PENCIL","PencilBrush","CIRCLE","CircleBrush","SPRAY","SprayBrush","MimeType","CanvasStore","canvasId","_canvas","_width","_height","_backgroundColor","_selectedTool","_selectable","_brushType","_shapeType","_activeObject","_activeObjects","makeAutoObservable","el","Canvas","init","select","selection","getObjects","forEach","obj","freeDrawingBrush","getBrush","rootStore","StoreContext","React","createContext","StoreContextProvider","Provider","useStores","useContext","FileUtils","fileName","blob","Blob","objectURL","window","URL","createObjectURL","write","dataURL","a","document","createElement","download","href","click","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","palette","primary","main","common","white","MenuItem","MenuToolButton","useState","anchorEl","setAnchorEl","inputRef","useRef","handleClose","onChange","target","files","item","read","then","jsonString","loadFromJSON","catch","console","error","ref","style","accept","event","currentTarget","keepMounted","open","Boolean","onClose","current","ListItemIcon","ListItemText","writeText","JSON","stringify","toJSON","fullQuality","toDataURL","appBarColor","center","flex","right","ToolBox","observer","AppBar","colorDefault","Toolbar","variant","title","marginBottom","input","padding","borderRadius","BrushPropBox","Typography","Box","mb","Select","native","brushType","valueOf","label","fullWidth","map","brush","ShapePropBox","shape","PropBox","flexDirection","flexBox","contents","flexBasis","canvasWrapper","useEffect","getElementById","initCanvas","id","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.51838419.chunk.js","sourcesContent":["export enum ToolTypes {\r\n    SELECT,\r\n    BRUSH,\r\n    SHAPE,\r\n    TEXT,\r\n    CANVAS,\r\n}","import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    progressWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    }\r\n}))\r\n\r\nconst Layout = ({ loading, children }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <div>\r\n                {loading ? (\r\n                    <div className={classes.progressWrapper}><CircularProgress /></div>\r\n                ) : children}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    loading?: boolean;\r\n    children: React.ReactElement | React.ReactElement[];\r\n}\r\n\r\nexport default Layout;","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n        color: \"#fff\",\r\n        paddingTop: theme.spacing(0.5),\r\n        paddingBottom: theme.spacing(0.5),\r\n        paddingRight: theme.spacing(3),\r\n        paddingLeft: theme.spacing(3),\r\n        textAlign: \"center\",\r\n    },\r\n    caption: {\r\n        fontSize: \"0.70rem\",\r\n    },\r\n    selected: {\r\n        background: \"linear-gradient(90deg, rgba(172,118,255,1) 0%, rgba(91,91,255,1) 100%)\",\r\n    }\r\n}));\r\n\r\nconst ToolButton = ({icon, text, onClick, selected}: Props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={clsx(classes.button, {\r\n            [classes.selected]: selected,\r\n        })} onClick={onClick}>\r\n            {icon}\r\n            <div className={classes.caption}>{text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    icon: any;\r\n    text: string;\r\n    onClick: (event: React.MouseEvent<HTMLElement>) => void;\r\n    selected?: boolean;\r\n}\r\n\r\nexport default ToolButton;","import {ToolTypes} from \"./ToolTypes\";\r\nimport {CanvasStore} from \"../../stores/CanvasStore\";\r\nimport {fabric} from \"fabric\";\r\n\r\nabstract class CanvasMode {\r\n    constructor(protected canvasStore: CanvasStore) {\r\n    }\r\n\r\n    protected abstract setTool(): void;\r\n\r\n    private resetCanvas() {\r\n        this.canvasStore.canvas.isDrawingMode = false;\r\n        this.canvasStore.selectable = false;\r\n        this.canvasStore.canvas.defaultCursor = \"default\";\r\n        this.canvasStore.canvas.discardActiveObject().renderAll();\r\n    }\r\n\r\n    public select() {\r\n        this.resetCanvas();\r\n        this.setTool();\r\n    }\r\n}\r\n\r\nexport class CanvasModeFactory {\r\n    public static getInstance(canvasStore: CanvasStore): CanvasMode {\r\n        switch (canvasStore.selectedTool) {\r\n            case ToolTypes.SELECT:\r\n                return new SelectCanvasMode(canvasStore);\r\n            case ToolTypes.BRUSH:\r\n                return new BrushCanvasMode(canvasStore);\r\n            case ToolTypes.SHAPE:\r\n                return new ShapeCanvasMode(canvasStore);\r\n            case ToolTypes.TEXT:\r\n                return new TextCanvasMode(canvasStore);\r\n            case ToolTypes.CANVAS:\r\n                return new CanvasResizeMode(canvasStore);\r\n            default:\r\n                return new DefaultCanvasMode(canvasStore);\r\n        }\r\n    }\r\n}\r\n\r\nclass SelectCanvasMode extends CanvasMode {\r\n    protected setTool(): void {\r\n        this.canvasStore.selectable = true;\r\n    }\r\n}\r\n\r\nclass BrushCanvasMode extends CanvasMode {\r\n    protected setTool(): void {\r\n        this.canvasStore.canvas.isDrawingMode = true;\r\n    }\r\n}\r\n\r\nclass ShapeCanvasMode extends CanvasMode {\r\n    protected setTool(): void {\r\n        this.canvasStore.canvas.defaultCursor = \"crosshair\";\r\n    }\r\n}\r\n\r\nclass TextCanvasMode extends CanvasMode {\r\n    protected setTool(): void {\r\n        this.canvasStore.canvas.defaultCursor = \"text\";\r\n    }\r\n}\r\n\r\nclass CanvasResizeMode extends CanvasMode {\r\n    protected setTool(): void {\r\n        this.canvasStore.canvas.add(new fabric.ActiveSelection([], {\r\n            width: this.canvasStore.canvas.width,\r\n            height: this.canvasStore.canvas.height,\r\n            type: \"canvas-resize\",\r\n            backgroundColor: \"rgba(0,0,0,0.7)\",\r\n            hasBorders: false,\r\n            cornerColor: \"grey\",\r\n        }))\r\n    }\r\n}\r\n\r\nclass DefaultCanvasMode extends CanvasMode {\r\n    protected setTool(): void {\r\n        //\r\n    }\r\n}","import {fabric} from \"fabric\";\r\n\r\nexport class ShapeType {\r\n    private static readonly _values: ShapeType[] = [];\r\n    public static readonly RECT = new ShapeType(\"rect\", \"사각형\");\r\n    public static readonly ELLIPSE = new ShapeType(\"ellipse\", \"원\");\r\n    public static readonly TRIANGLE = new ShapeType(\"triangle\", \"삼각형\");\r\n\r\n    constructor(\r\n        public readonly value: string,\r\n        public readonly display: string,\r\n    ) {\r\n        ShapeType._values.push(this);\r\n    }\r\n\r\n    public static values() {\r\n        return this._values;\r\n    }\r\n\r\n    public static valueOf(value: string) {\r\n        return this.values().find(v => v.value === value);\r\n    }\r\n\r\n    public getShape<T extends fabric.IObjectOptions>(options: T) {\r\n        switch (this) {\r\n            case ShapeType.RECT:\r\n                return new fabric.Rect(options);\r\n            case ShapeType.ELLIPSE:\r\n                return new fabric.Ellipse(options);\r\n            case ShapeType.TRIANGLE:\r\n                return new fabric.Triangle(options);\r\n            default:\r\n                return new fabric.Rect(options);\r\n        }\r\n    }\r\n}","import {CanvasEventHandler, CanvasEventObject} from \"./CanvasEventModel\";\r\nimport {ShapeType} from \"./Shape\";\r\nimport {ToolTypes} from \"./ToolTypes\";\r\nimport {fabric} from \"fabric\";\r\n\r\nconst MIN_OBJECT_SIZE = 10;\r\n\r\ninterface ShapeCanvasEvent extends CanvasEventObject {\r\n    object: fabric.Object,\r\n}\r\n\r\nexport class ShapeCanvasMouseUpEvent implements CanvasEventHandler<ShapeCanvasEvent> {\r\n    handle(e: ShapeCanvasEvent): void {\r\n        if (e.object.isType(ShapeType.RECT.value) || e.object.isType(ShapeType.TRIANGLE.value)) {\r\n            e.object.set({\r\n                width: Math.max(MIN_OBJECT_SIZE, e.object.width || MIN_OBJECT_SIZE),\r\n                height: Math.max(MIN_OBJECT_SIZE, e.object.height || MIN_OBJECT_SIZE),\r\n            }).setCoords();\r\n        } else if (e.object.isType(ShapeType.ELLIPSE.value)) {\r\n            const circle = e.object as fabric.Ellipse;\r\n            circle.set({\r\n                rx: Math.max(MIN_OBJECT_SIZE / 2, circle.rx || MIN_OBJECT_SIZE / 2),\r\n                ry: Math.max(MIN_OBJECT_SIZE / 2, circle.ry || MIN_OBJECT_SIZE / 2),\r\n            }).setCoords();\r\n        }\r\n\r\n        e.canvasStore.selectedTool = ToolTypes.SELECT;\r\n        e.canvasStore.canvas.setActiveObject(e.object);\r\n        e.canvasStore.canvas.renderAll();\r\n    }\r\n}\r\n\r\nexport class ShapeCanvasMouseDownEvent implements CanvasEventHandler<ShapeCanvasEvent> {\r\n    handle(e: ShapeCanvasEvent): void {\r\n        e.object = e.canvasStore.shapeType.getShape({\r\n            left: e.startCursorPosition.x,\r\n            top: e.startCursorPosition.y,\r\n            hasBorder: true,\r\n            stroke: \"#000\",\r\n            strokeWidth: 3,\r\n            fill: \"transparent\",\r\n            selectable: false,\r\n            hoverCursor: \"default\",\r\n        });\r\n\r\n        if (e.object.isType(ShapeType.RECT.value) || e.object.isType(ShapeType.TRIANGLE.value)) {\r\n            e.object.set({\r\n                width: 0,\r\n                height: 0,\r\n            })\r\n        } else if (e.object.isType(ShapeType.ELLIPSE.value)) {\r\n            (e.object as fabric.Ellipse).set({\r\n                rx: 0,\r\n                ry: 0,\r\n            })\r\n        }\r\n\r\n        e.canvasStore.canvas.add(e.object);\r\n    }\r\n}\r\n\r\nexport class ShapeCanvasMouseMoveEvent implements CanvasEventHandler<ShapeCanvasEvent> {\r\n    handle(e: ShapeCanvasEvent): void {\r\n        if (e.currentCursorPosition.x < e.startCursorPosition.x) {\r\n            e.object.set(\"left\", Math.abs(e.currentCursorPosition.x));\r\n        }\r\n\r\n        if (e.currentCursorPosition.y < e.startCursorPosition.y) {\r\n            e.object.set(\"top\", Math.abs(e.currentCursorPosition.y));\r\n        }\r\n\r\n        e.object.set(\"flipX\", e.currentCursorPosition.x < e.startCursorPosition.x);\r\n        e.object.set(\"flipY\", e.currentCursorPosition.y < e.startCursorPosition.y);\r\n\r\n        if (e.object.isType(ShapeType.RECT.value) || e.object.isType(ShapeType.TRIANGLE.value)) {\r\n            e.object.set({\r\n                width: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x),\r\n                height: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y),\r\n            });\r\n        } else if (e.object.isType(ShapeType.ELLIPSE.value)) {\r\n            (e.object as fabric.Ellipse).set({\r\n                rx: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x) / 2,\r\n                ry: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y) / 2,\r\n            })\r\n        }\r\n\r\n        e.canvasStore.canvas.renderAll();\r\n    }\r\n}\r\n","import { fabric } from \"fabric\";\r\nimport { CanvasEventHandler, CanvasEventObject } from \"./CanvasEventModel\";\r\nimport { ToolTypes } from \"./ToolTypes\";\r\n\r\ninterface TextCanvasEvent extends CanvasEventObject {\r\n    object: fabric.IText,\r\n}\r\n\r\nexport class TextCanvasMouseUpEvent implements CanvasEventHandler<TextCanvasEvent> {\r\n    handle(e: TextCanvasEvent): void {\r\n        e.object = new fabric.IText(\"텍스트를 입력해주세요\", {\r\n            top: e.currentCursorPosition.y,\r\n            left: e.currentCursorPosition.x,\r\n            fontSize: 24,\r\n        });\r\n\r\n        e.canvasStore.canvas.add(e.object);\r\n        e.canvasStore.selectedTool = ToolTypes.SELECT;\r\n        e.canvasStore.canvas.setActiveObject(e.object);\r\n\r\n        e.object.selectAll();\r\n        e.object.enterEditing();\r\n    }\r\n}\r\n\r\nexport class TextCanvasMouseDownEvent implements CanvasEventHandler<TextCanvasEvent> {\r\n    handle(e: TextCanvasEvent): void {\r\n    }\r\n}\r\n\r\nexport class TextCanvasMouseMoveEvent implements CanvasEventHandler<TextCanvasEvent> {\r\n    handle(e: TextCanvasEvent): void {\r\n    }\r\n}\r\n","import { CanvasStore } from \"../../stores/CanvasStore\";\r\nimport { ToolTypes } from \"./ToolTypes\";\r\nimport { IEvent } from \"fabric/fabric-impl\";\r\nimport { CanvasEventHandler, CanvasEventObject } from \"./CanvasEventModel\";\r\nimport { ShapeCanvasMouseDownEvent, ShapeCanvasMouseMoveEvent, ShapeCanvasMouseUpEvent } from \"./ShapeCanvasEvent\";\r\nimport { TextCanvasMouseDownEvent, TextCanvasMouseMoveEvent, TextCanvasMouseUpEvent } from \"./TextCanvasEvent\";\r\n\r\nexport class CanvasEvent {\r\n    protected static MOUSE_UP = \"mouse:up\";\r\n    protected static MOUSE_DOWN = \"mouse:down\";\r\n    protected static MOUSE_MOVE = \"mouse:move\";\r\n    protected static SELECTION_CLEARED = \"selection:cleared\";\r\n    protected static SELECTION_CREATED = \"selection:created\";\r\n    protected static SELECTION_UPDATED = \"selection:updated\";\r\n\r\n    private shareObject: CanvasEventObject = {\r\n        e: {} as IEvent,\r\n        canvasStore: this.canvasStore,\r\n        startCursorPosition: { x: 0, y: 0 },\r\n        currentCursorPosition: { x: 0, y: 0 },\r\n        isDown: false\r\n    };\r\n\r\n    constructor(private readonly canvasStore: CanvasStore) {\r\n    }\r\n\r\n    public init() {\r\n        const canvas = this.canvasStore.canvas;\r\n        canvas.on(CanvasEvent.MOUSE_UP, this.handleMouseUp.bind(this));\r\n        canvas.on(CanvasEvent.MOUSE_MOVE, this.handleMouseMove.bind(this));\r\n        canvas.on(CanvasEvent.MOUSE_DOWN, this.handleMouseDown.bind(this));\r\n        canvas.on(CanvasEvent.SELECTION_CREATED, this.handleSelectObject.bind(this));\r\n        canvas.on(CanvasEvent.SELECTION_UPDATED, this.handleSelectObject.bind(this));\r\n        canvas.on(CanvasEvent.SELECTION_CLEARED, this.handleDeSelectObject.bind(this));\r\n    }\r\n\r\n    private handleSelectObject() {\r\n        const canvas = this.canvasStore.canvas;\r\n        this.canvasStore.activeObject = canvas.getActiveObject();\r\n        this.canvasStore.activeObjects = canvas.getActiveObjects();\r\n    }\r\n\r\n    private handleDeSelectObject() {\r\n        this.canvasStore.activeObject = undefined;\r\n        this.canvasStore.activeObjects = [];\r\n    }\r\n\r\n    private handleMouseUp(e: IEvent) {\r\n        this.shareObject.e = e;\r\n        this.shareObject.isDown = false;\r\n        CanvasMouseUpEventFactory.getInstance(this.canvasStore)?.handle(this.shareObject);\r\n    }\r\n\r\n    private handleMouseDown(e: IEvent) {\r\n        this.shareObject.e = e;\r\n        this.shareObject.isDown = true;\r\n        this.shareObject.startCursorPosition = { ...this.getCursorPosition(e) };\r\n        this.shareObject.currentCursorPosition = { ...this.getCursorPosition(e) };\r\n        CanvasMouseDownEventFactory.getInstance(this.canvasStore)?.handle(this.shareObject);\r\n    };\r\n\r\n    private handleMouseMove(e: IEvent) {\r\n        this.shareObject.e = e;\r\n        this.shareObject.currentCursorPosition = { ...this.getCursorPosition(e) };\r\n        if (this.shareObject.isDown) {\r\n            CanvasMouseMoveEventFactory.getInstance(this.canvasStore)?.handle(this.shareObject);\r\n        }\r\n    };\r\n\r\n    private getCursorPosition(e: IEvent) {\r\n        return this.canvasStore.canvas.getPointer(e.e);\r\n    }\r\n}\r\n\r\nclass CanvasMouseUpEventFactory {\r\n    public static getInstance(canvasStore: CanvasStore): CanvasEventHandler<CanvasEventObject> | null {\r\n        switch (canvasStore.selectedTool) {\r\n            case ToolTypes.SHAPE:\r\n                return new ShapeCanvasMouseUpEvent();\r\n            case ToolTypes.TEXT:\r\n                return new TextCanvasMouseUpEvent();\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass CanvasMouseDownEventFactory {\r\n    public static getInstance(canvasStore: CanvasStore): CanvasEventHandler<CanvasEventObject> | null {\r\n        switch (canvasStore.selectedTool) {\r\n            case ToolTypes.SHAPE:\r\n                return new ShapeCanvasMouseDownEvent();\r\n            case ToolTypes.TEXT:\r\n                return new TextCanvasMouseDownEvent();\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\nclass CanvasMouseMoveEventFactory {\r\n    public static getInstance(canvasStore: CanvasStore): CanvasEventHandler<CanvasEventObject> | null {\r\n        switch (canvasStore.selectedTool) {\r\n            case ToolTypes.SHAPE:\r\n                return new ShapeCanvasMouseMoveEvent();\r\n            case ToolTypes.TEXT:\r\n                return new TextCanvasMouseMoveEvent();\r\n            default:\r\n                return null;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","import {fabric} from \"fabric\";\r\n\r\nexport class BrushType {\r\n    private static readonly _values: BrushType[] = [];\r\n    public static readonly PENCIL = new BrushType(\"pencil\", \"연필\");\r\n    public static readonly CIRCLE = new BrushType(\"circle\", \"원형\");\r\n    public static readonly SPRAY = new BrushType(\"spray\", \"스프레이\");\r\n\r\n    constructor(\r\n        public readonly value: string,\r\n        public readonly display: string,\r\n    ) {\r\n        BrushType._values.push(this);\r\n    }\r\n\r\n    public static values() {\r\n        return this._values;\r\n    }\r\n\r\n    public static valueOf(value: string) {\r\n        return this.values().find(v => v.value === value);\r\n    }\r\n\r\n    public getBrush(canvas: fabric.Canvas) {\r\n        switch (this) {\r\n            case BrushType.PENCIL:\r\n                return new (fabric.PencilBrush as any)(canvas);\r\n            case BrushType.CIRCLE:\r\n                return new (fabric.CircleBrush as any)(canvas);\r\n            case BrushType.SPRAY:\r\n                return new (fabric.SprayBrush as any)(canvas);\r\n            default:\r\n                return new (fabric.PencilBrush as any)(canvas);\r\n        }\r\n    }\r\n}","import {makeAutoObservable} from \"mobx\";\r\nimport {fabric} from \"fabric\";\r\nimport {ToolTypes} from \"../models/canvas/ToolTypes\";\r\nimport {CanvasModeFactory} from \"../models/canvas/CanvasMode\";\r\nimport {CanvasEvent} from \"../models/canvas/CanvasEvent\";\r\nimport {BrushType} from \"../models/canvas/Brush\";\r\nimport {ShapeType} from \"../models/canvas/Shape\";\r\n\r\nexport class CanvasStore {\r\n    public readonly canvasId = \"canvas\";\r\n    private _canvas = {} as fabric.Canvas;\r\n    private _width = 500;\r\n    private _height = 500;\r\n    private _backgroundColor = \"white\";\r\n    private _selectedTool: ToolTypes = ToolTypes.SELECT;\r\n    private _selectable = false;\r\n    private _brushType = BrushType.PENCIL;\r\n    private _shapeType = ShapeType.RECT;\r\n    private _activeObject: fabric.Object | undefined;\r\n    private _activeObjects: fabric.Object[] = [];\r\n\r\n    constructor() {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    public initCanvas(el: HTMLCanvasElement, options?: fabric.ICanvasOptions) {\r\n        this._canvas = new fabric.Canvas(el, options);\r\n        this.selectedTool = this._selectedTool;\r\n        new CanvasEvent(this).init();\r\n    }\r\n\r\n    get canvas() {\r\n        return this._canvas;\r\n    }\r\n\r\n    get width(): number {\r\n        return this._width;\r\n    }\r\n\r\n    set width(value: number) {\r\n        this._width = value;\r\n    }\r\n\r\n    get height(): number {\r\n        return this._height;\r\n    }\r\n\r\n    set height(value: number) {\r\n        this._height = value;\r\n    }\r\n\r\n    get backgroundColor(): string {\r\n        return this._backgroundColor;\r\n    }\r\n\r\n    set backgroundColor(value: string) {\r\n        this._backgroundColor = value;\r\n    }\r\n\r\n    get selectedTool(): ToolTypes {\r\n        return this._selectedTool;\r\n    }\r\n\r\n    set selectedTool(value: ToolTypes) {\r\n        this._selectedTool = value;\r\n        CanvasModeFactory.getInstance(this).select();\r\n    }\r\n\r\n    get selectable(): boolean {\r\n        return this._selectable;\r\n    }\r\n\r\n    set selectable(value: boolean) {\r\n        this.canvas.selection = value;\r\n        this.canvas.getObjects().forEach(obj => {\r\n            obj.selectable = value;\r\n            obj.hoverCursor = value ? \"move\" : \"default\";\r\n        });\r\n    }\r\n\r\n    get brushType(): BrushType {\r\n        return this._brushType;\r\n    }\r\n\r\n    set brushType(value: BrushType) {\r\n        this._brushType = value;\r\n        this.canvas.freeDrawingBrush = value.getBrush(this.canvas);\r\n    }\r\n\r\n    get shapeType(): ShapeType {\r\n        return this._shapeType;\r\n    }\r\n\r\n    set shapeType(value: ShapeType) {\r\n        this._shapeType = value;\r\n    }\r\n\r\n    get activeObject(): fabric.Object | undefined {\r\n        return this._activeObject;\r\n    }\r\n\r\n    set activeObject(value: fabric.Object | undefined) {\r\n        this._activeObject = value;\r\n    }\r\n\r\n    get activeObjects(): fabric.Object[] {\r\n        return this._activeObjects;\r\n    }\r\n\r\n    set activeObjects(value: fabric.Object[]) {\r\n        this._activeObjects = value;\r\n    }\r\n}","enum MimeType {\r\n    TEXT = \"text/plain\",\r\n}\r\n\r\nexport class FileUtils {\r\n    public static writeText(fileName: string, text: string) {\r\n        const blob = new Blob([text], { type: MimeType.TEXT });\r\n        const objectURL = window.URL.createObjectURL(blob);\r\n        this.write(fileName, objectURL);\r\n    }\r\n\r\n    public static write(fileName: string, dataURL: string) {\r\n        const a = document.createElement('a');\r\n        a.download = fileName;\r\n        a.href = dataURL;\r\n        a.click();\r\n    }\r\n\r\n    public static async read(file: File): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.onload = () => resolve(reader.result as string);\r\n            reader.onerror = () => reject();\r\n            reader.readAsText(file);\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport {RootStore} from \"../stores/RootStore\";\r\n\r\nconst rootStore = new RootStore();\r\nexport const StoreContext = React.createContext<RootStore>(rootStore);\r\nexport const StoreContextProvider = ({children}: StoreProviderProps) => {\r\n    return (\r\n        <StoreContext.Provider value={rootStore}>\r\n            {children}\r\n        </StoreContext.Provider>\r\n    )\r\n}\r\n\r\ninterface StoreProviderProps {\r\n    children: JSX.Element;\r\n}","import {CanvasStore} from \"./CanvasStore\";\r\n\r\nexport class RootStore {\r\n    public readonly canvasStore;\r\n\r\n    constructor() {\r\n        this.canvasStore = new CanvasStore();\r\n    }\r\n}","import React from \"react\";\r\nimport {RootStore} from \"../stores/RootStore\";\r\nimport {StoreContext} from \"../contexts/StoreContext\";\r\n\r\nexport const useStores = (): RootStore => React.useContext(StoreContext);","import React from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Menu, {MenuProps} from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ToolButton from \"./ToolButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\nimport {FileUtils} from \"../../utils/FileUtils\";\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: \"1px solid #d3d4d5\",\r\n    },\r\n})((props: MenuProps) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        \"&:focus\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\nexport default function MenuToolButton() {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const {canvasStore} = useStores();\r\n    const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleFileOpen = () => {\r\n        inputRef.current?.click();\r\n        handleClose();\r\n    }\r\n\r\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files?.item(0);\r\n        e.target.value = \"\";\r\n\r\n        if (!!file) {\r\n            FileUtils.read(file).then(jsonString => {\r\n                canvasStore.canvas.loadFromJSON(jsonString, () => {\r\n                    //\r\n                })\r\n            }).catch(e => console.error(e));\r\n        }\r\n    }\r\n\r\n    const handleSave = () => {\r\n        FileUtils.writeText(\"canvas.json\", JSON.stringify(canvasStore.canvas.toJSON()));\r\n        handleClose();\r\n    }\r\n\r\n    const handleImageSave = () => {\r\n        const fullQuality = canvasStore.canvas.toDataURL();\r\n        FileUtils.write(\"canvas.png\", fullQuality);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type={\"file\"}\r\n                onChange={handleFileChange}\r\n                ref={inputRef}\r\n                style={{display: \"none\"}}\r\n                accept=\"application/json\"\r\n            />\r\n            <ToolButton icon={<MenuIcon/>} text={\"메뉴\"} onClick={handleClick}/>\r\n            <StyledMenu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <StyledMenuItem onClick={handleFileOpen}>\r\n                    <ListItemIcon>\r\n                        <DescriptionIcon fontSize=\"small\"/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"열기\"/>\r\n                </StyledMenuItem>\r\n                <StyledMenuItem onClick={handleSave}>\r\n                    <ListItemIcon>\r\n                        <SaveIcon fontSize=\"small\"/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"저장\"/>\r\n                </StyledMenuItem>\r\n                <StyledMenuItem onClick={handleImageSave}>\r\n                    <ListItemIcon>\r\n                        <SaveAltIcon fontSize=\"small\"/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"이미지로 저장\"/>\r\n                </StyledMenuItem>\r\n            </StyledMenu>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {AppBar, Toolbar} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\nimport ToolButton from \"./ToolButton\";\r\nimport MouseIcon from '@material-ui/icons/Mouse';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport BrushIcon from \"@material-ui/icons/Brush\";\r\nimport {ToolTypes} from \"../../models/canvas/ToolTypes\";\r\nimport MenuToolButton from \"./MenuToolButton\";\r\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    appBarColor: {\r\n        backgroundColor: \"rgba(30,30,30,0.95)\",\r\n    },\r\n    left: {\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n    },\r\n    right: {\r\n        justifyContent: \"flex-end\",\r\n    }\r\n}));\r\n\r\nconst ToolBox = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore} = useStores();\r\n\r\n    return (\r\n        <AppBar\r\n            classes={{\r\n                colorDefault: classes.appBarColor,\r\n            }}\r\n            color={\"default\"}\r\n            elevation={0}\r\n        >\r\n            <Toolbar variant={\"dense\"}>\r\n                <div className={classes.left}>\r\n                    <MenuToolButton/>\r\n                </div>\r\n                <div className={classes.center}>\r\n                    <ToolButton\r\n                        icon={<MouseIcon/>}\r\n                        text={\"선택\"}\r\n                        onClick={() => canvasStore.selectedTool = ToolTypes.SELECT}\r\n                        selected={canvasStore.selectedTool === ToolTypes.SELECT}\r\n                    />\r\n                    <ToolButton\r\n                        icon={<BrushIcon/>}\r\n                        text={\"브러시\"}\r\n                        onClick={() => canvasStore.selectedTool = ToolTypes.BRUSH}\r\n                        selected={canvasStore.selectedTool === ToolTypes.BRUSH}\r\n                    />\r\n                    <ToolButton\r\n                        icon={<DashboardIcon/>}\r\n                        text={\"셰이프\"}\r\n                        onClick={() => canvasStore.selectedTool = ToolTypes.SHAPE}\r\n                        selected={canvasStore.selectedTool === ToolTypes.SHAPE}\r\n                    />\r\n                    <ToolButton\r\n                        icon={<TextFieldsIcon/>}\r\n                        text={\"텍스트\"}\r\n                        onClick={() => canvasStore.selectedTool = ToolTypes.TEXT}\r\n                        selected={canvasStore.selectedTool === ToolTypes.TEXT}\r\n                    />\r\n                </div>\r\n                <div className={classes.right}>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n})\r\n\r\nexport default ToolBox;","import {Box, Select, Typography} from \"@material-ui/core\";\r\nimport {BrushType} from \"../../models/canvas/Brush\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    input: {\r\n        padding: theme.spacing(1),\r\n        borderRadius: 4,\r\n        backgroundColor: \"#fff\",\r\n    }\r\n}))\r\n\r\nconst BrushPropBox = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore} = useStores();\r\n\r\n    const handleBrushChange = (e: any) => {\r\n        canvasStore.brushType = BrushType.valueOf(e.target.value) || BrushType.PENCIL;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.title}>\r\n                <Typography variant={\"h6\"} color={\"primary\"}>브러시</Typography>\r\n            </div>\r\n            <div>\r\n                <Box mb={1}>\r\n                    <Typography variant={\"caption\"}>모양</Typography>\r\n                </Box>\r\n                <Select\r\n                    className={classes.input}\r\n                    native\r\n                    onChange={handleBrushChange}\r\n                    value={canvasStore.brushType.value}\r\n                    label=\"브러시 모양\"\r\n                    fullWidth\r\n                >\r\n                    {BrushType.values().map(brush => (\r\n                        <option key={brush.value} value={brush.value}>{brush.display}</option>\r\n                    ))}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default BrushPropBox;","import {Box, Select, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {observer} from \"mobx-react\";\r\nimport {ShapeType} from \"../../models/canvas/Shape\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    title: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    input: {\r\n        padding: theme.spacing(1),\r\n        borderRadius: 4,\r\n        backgroundColor: \"#fff\",\r\n    }\r\n}))\r\n\r\nconst ShapePropBox = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore} = useStores();\r\n\r\n    const handleShapeChange = (e: any) => {\r\n        canvasStore.shapeType = ShapeType.valueOf(e.target.value) || ShapeType.ELLIPSE;\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.title}>\r\n                <Typography variant={\"h6\"} color={\"primary\"}>셰이프</Typography>\r\n            </div>\r\n            <div>\r\n                <Box mb={1}>\r\n                    <Typography variant={\"caption\"}>모양</Typography>\r\n                </Box>\r\n                <Select\r\n                    className={classes.input}\r\n                    native\r\n                    onChange={handleShapeChange}\r\n                    value={canvasStore.shapeType.value}\r\n                    label=\"셰이프 모양\"\r\n                    fullWidth\r\n                >\r\n                    {ShapeType.values().map(shape => (\r\n                        <option key={shape.value} value={shape.value}>{shape.display}</option>\r\n                    ))}\r\n                </Select>\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default ShapePropBox;","import React from \"react\";\r\nimport {observer} from \"mobx-react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\nimport {ToolTypes} from \"../../models/canvas/ToolTypes\";\r\nimport BrushPropBox from \"./BrushPropBox\";\r\nimport ShapePropBox from \"./ShapePropBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n    }\r\n}));\r\n\r\nconst PropBox = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore} = useStores();\r\n    const selectedTool = canvasStore.selectedTool;\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            {selectedTool === ToolTypes.BRUSH && <BrushPropBox/>}\r\n            {selectedTool === ToolTypes.SHAPE && (<ShapePropBox/>)}\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PropBox;","import React from \"react\";\r\nimport {Layout} from \"../layout\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {PropBox, ToolBox} from \"../../components/tools\";\r\nimport {observer} from \"mobx-react\";\r\nimport {Toolbar} from \"@material-ui/core\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\n\r\nconst leftMenuWidth = 240;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n    },\r\n    flexBox: {\r\n        display: \"flex\",\r\n        flex: 1,\r\n    },\r\n    contents: {\r\n        display: \"flex\",\r\n    },\r\n    left: {\r\n        flexBasis: `${leftMenuWidth}px`,\r\n        backgroundColor: \"#f0f0f0\",\r\n    },\r\n    canvasWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        backgroundColor: \"#c0c0c0\",\r\n        padding: theme.spacing(3),\r\n    },\r\n}))\r\n\r\nconst Canvas = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore} = useStores();\r\n\r\n    React.useEffect(() => {\r\n        const el = document.getElementById(canvasStore.canvasId) as HTMLCanvasElement;\r\n        canvasStore.initCanvas(el, {\r\n            width: canvasStore.width,\r\n            height: canvasStore.height,\r\n            backgroundColor: canvasStore.backgroundColor,\r\n        });\r\n        // eslint-disable-next-line\r\n    }, []);\r\n\r\n    return (\r\n        <Layout>\r\n            <ToolBox/>\r\n            <div className={classes.root}>\r\n                <Toolbar variant={\"dense\"}/>\r\n                <div className={classes.flexBox}>\r\n                    <div className={classes.left}>\r\n                        <PropBox/>\r\n                    </div>\r\n                    <div className={classes.canvasWrapper}>\r\n                        <canvas id={canvasStore.canvasId}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default Canvas;","import {Canvas} from 'templates/canvas';\r\nimport React from 'react';\r\n\r\nfunction App() {\r\n    return (\r\n        <Canvas/>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport {StoreContextProvider} from \"./contexts/StoreContext\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <StoreContextProvider>\r\n            <App/>\r\n        </StoreContextProvider>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}