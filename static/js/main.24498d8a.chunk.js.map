{"version":3,"sources":["templates/layout/Layout.tsx","models/color/CommonColor.tsx","components/tools/ToolButton.tsx","contexts/storeContext.ts","hooks/useStores.tsx","models/tools/ToolTypes.ts","utils/FileUtils.ts","components/tools/MenuToolButton.tsx","components/tools/ToolBox.tsx","models/tools/Brush.ts","models/tools/Text.ts","components/input/Range.tsx","components/input/ColorPicker.tsx","components/input/ColorPalette.tsx","hooks/usePrevious.tsx","components/input/ColorSelect.tsx","components/input/AlignButton.tsx","components/input/BoldButton.tsx","components/input/ItalicButton.tsx","components/input/UnderlineButton.tsx","components/input/TextStyleButton.tsx","components/input/ImageUploadButton.tsx","components/propbox/PropBoxLayout.tsx","components/propbox/PropBoxItem.tsx","components/propbox/BrushPropBox.tsx","models/tools/Shape.ts","components/propbox/ShapePropBox.tsx","stores/mouseEventStore.ts","components/propbox/TextPropBox.tsx","components/propbox/CanvasPropBox.tsx","components/propbox/SelectPropBox.tsx","components/propbox/ImagePropBox.tsx","components/propbox/PropBox.tsx","templates/canvas/Canvas.tsx","stores/brushStore.ts","stores/canvasStore.ts","components/element/DeleteImageElement.tsx","models/object/DeleteControl.ts","stores/selectionEventStore.ts","stores/objectEventStore.ts","stores/shapeStore.ts","stores/UIStore.ts","stores/textStore.ts","stores/selectStore.ts","stores/objectStore.ts","stores/imageStore.ts","stores/rootStore.ts","App.tsx","index.tsx"],"names":["useStyles","makeStyles","progressWrapper","display","justifyContent","alignItems","Layout","loading","children","classes","Fragment","CssBaseline","className","CircularProgress","CommonColor","theme","button","cursor","color","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","textAlign","caption","fontSize","selected","background","ToolButton","icon","text","onClick","clsx","StoreContext","React","createContext","StoreProvider","Provider","useStores","useContext","ToolTypes","value","_values","push","this","values","find","v","SELECT","BRUSH","SHAPE","TEXT","IMAGE","CANVAS","MimeType","FileUtils","fileName","blob","Blob","type","objectURL","window","URL","createObjectURL","write","dataURL","a","document","createElement","download","href","click","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","backgroundColor","palette","primary","main","common","white","MenuItem","MenuToolButton","useState","anchorEl","setAnchorEl","canvasStore","inputRef","useRef","handleClose","onChange","e","target","files","item","read","then","jsonString","canvas","loadFromJSON","catch","console","error","ref","style","accept","event","currentTarget","keepMounted","open","Boolean","onClose","current","ListItemIcon","ListItemText","writeText","JSON","stringify","toJSON","fullQuality","toDataURL","appBarColor","left","center","flex","right","ToolBox","observer","AppBar","colorDefault","Toolbar","variant","setCanvasMode","canvasMode","BrushType","PENCIL","fabric","PencilBrush","CIRCLE","CircleBrush","SPRAY","SprayBrush","FontFaceType","label","Range","prefix","min","max","Typography","Input","margin","inputProps","endAdornment","InputAdornment","position","Slider","newValue","colorBox","width","height","borderStyle","borderColor","disabled","ColorPicker","Popover","disableAlpha","onChangeComplete","ColorPalette","Box","mb","usePrevious","useEffect","ColorSelect","previousColor","selectedValue","setSelectedValue","mr","flexBasis","rgb","r","g","b","hex","FormControl","fullWidth","Select","undefined","fontSizes","TextAlign","FontWeight","FontStyle","FontFaces","filter","font","GOOGLE","TIMES_NEW_ROMAN","DEFAULT","NOTO_SANS_KR","NANUM_GOTHIC","NANUM_PEN_SCRIPT","SONG_MYUNG","alignBox","alignButton","borderRadius","AlignButton","Button","BoldButton","bold","toggle","faBold","size","ItalicButton","italic","faItalic","UnderlineButton","underline","faUnderline","marginRight","TextStyleButton","toggleBold","toggleItalic","toggleUnderline","ImageUploadButton","multiple","Array","from","startIcon","flexDirection","title","marginBottom","propBoxWrapper","PropBoxLayout","objectStore","activeObject","getObjectTypeName","PropBoxItem","other","padding","BrushPropBox","brushStore","brushType","setBrushType","faPencilAlt","faSprayCan","faCircle","strokeWidth","setStrokeWidth","stroke","setStroke","ShapeType","options","RECT","Rect","ELLIPSE","Ellipse","TRIANGLE","Triangle","MouseEventType","propBox","ShapePropBox","shapeStore","shapeType","setShapeType","cx","cy","fill","points","setFill","TextPropBox","textStore","fontFamily","setFontFamily","map","parseInt","setFontSize","isBold","isItalic","setBold","setItalic","setUnderline","setTextAlign","CanvasPropBox","setWidth","setHeight","InputLabel","htmlFor","id","onBlur","setBackgroundColor","SelectPropBox","ImagePropBox","imageStore","upload","Grid","container","uploadedImages","image","addImage","dataUrl","src","alt","name","objectFit","PropBox","selectedTool","isPath","isShape","isText","isImage","flexBox","contents","canvasWrapper","Canvas","rootStore","canvasRef","init","onInit","onDestroy","defaultStyles","BrushStore","listeners","selectionEventStore","makeAutoObservable","registerCanvasModeManager","updateObject","bind","addReactions","removeReactions","isDrawingMode","setFreeDrawingBrush","freeDrawingBrush","updateStroke","updateStrokeWidth","getBrush","object","isBrush","updatePathStyles","subscribe","unsubscribe","CanvasStore","canvasModeManagers","Map","dispose","mode","manager","set","previousMode","discardActiveObject","renderAll","setAllCursor","setSelectable","get","onSessionEnd","onSessionStart","selectable","selection","getObjects","forEach","obj","defaultCursor","hoverCursor","setDefaultCursor","setHoverCursor","MouseEventStore","startCursorPosition","x","y","currentCursorPosition","onMouseDown","onMouseUp","onMouseMove","addEventListeners","removeEventListeners","eventType","listener","has","fn","getCursorPosition","MOUSE_DOWN","callback","MOUSE_MOVE","MOUSE_UP","on","off","getPointer","DeleteImageElement","SelectionEventType","DeleteControl","deleteAction","Object","prototype","controls","deleteControl","Control","offsetY","offsetX","cursorStyle","mouseUpHandler","render","renderIcon","ctx","top","styleOverride","fabricObject","cornerSize","save","translate","rotate","util","degreesToRadians","angle","drawImage","restore","ObjectEventType","SelectionEventStore","Set","onSelected","onCleared","initControl","SELECTION_CREATED","SELECTION_UPDATED","SELECTION_CLEARED","reaction","removeActiveObjects","_eventData","transform","getActiveObjects","length","remove","requestRenderAll","add","delete","ObjectEventStore","onScaling","onModified","addEventListener","removeEventListener","OBJECT_SCALING","OBJECT_MODIFIED","callbackFn","ShapeStore","mouseEventStore","isDragMode","updateShapeStyles","isShapeTool","getShape","strokeUniform","isType","rx","ry","Math","abs","flipX","flipY","MIN_OBJECT_SIZE","setCoords","circle","setActiveObject","UIStore","FONT_SIZE","FILL","FONT_FAMILY","TEXT_ALIGN","FONT_STYLE","FONT_WEIGHT","UNDERLINE","TextStore","objectEventStore","fontStyle","fontWeight","autoRenderId","loadFont","addFontAutoRender","removeFontAutoRender","changedValue","updateTextStyles","isTextTool","IText","lockUniScaling","setControlVisible","selectAll","enterEditing","scaleX","toFixed","scaleY","WebFont","load","google","families","getGoogleFonts","setInterval","textObject","initDimensions","dirty","clearFabricFontCache","clearInterval","SelectStore","ObjectStore","isRect","isEllipse","isTriangle","log","isGroup","setStyles","key","ImageStore","Image","fromURL","img","scale","setScaleX","setScaleY","readFileAsync","readAsDataURL","canvasElement","selectStore","body","append","onDestory","parentElement","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.24498d8a.chunk.js","sourcesContent":["import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(() => ({\n    progressWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    }\n}))\n\nconst Layout = ({ loading, children }: Props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <div>\n                {loading ? (\n                    <div className={classes.progressWrapper}><CircularProgress /></div>\n                ) : children}\n            </div>\n        </React.Fragment>\n    )\n}\n\ninterface Props {\n    loading?: boolean;\n    children: React.ReactElement | React.ReactElement[];\n}\n\nexport default Layout;","export const CommonColor = {\n    PRIMARY: \"#ac76ff\",\n    BACKGROUND_GRADIENT: \"linear-gradient(90deg, rgba(172,118,255,1) 0%, rgba(91,91,255,1) 100%)\",\n    BACKGROUND_GRADIENT_HOVER: \"linear-gradient(90deg, rgba(172,118,255,.4) 0%, rgba(91,91,255,.4) 100%)\",\n}","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport clsx from \"clsx\";\nimport {CommonColor} from \"../../models/color/CommonColor\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: \"inline-block\",\n        cursor: \"pointer\",\n        color: \"#fff\",\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        textAlign: \"center\",\n    },\n    caption: {\n        fontSize: \"0.70rem\",\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n    }\n}));\n\nconst ToolButton = ({icon, text, onClick, selected}: Props) => {\n    const classes = useStyles();\n    return (\n        <div className={clsx(classes.button, {\n            [classes.selected]: selected,\n        })} onClick={onClick}>\n            {icon}\n            <div className={classes.caption}>{text}</div>\n        </div>\n    )\n}\n\ninterface Props {\n    icon: any;\n    text: string;\n    onClick: (event: React.MouseEvent<HTMLElement>) => void;\n    selected?: boolean;\n}\n\nexport default ToolButton;","import React from \"react\";\nimport { RootStore } from \"stores/rootStore\";\n\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\nexport const StoreProvider = StoreContext.Provider;","import React from \"react\";\nimport {RootStore} from \"../stores/rootStore\";\nimport {StoreContext} from \"../contexts/storeContext\";\n\nexport const useStores = (): RootStore => React.useContext(StoreContext);","export class ToolTypes {\n    private static readonly _values: ToolTypes[] = [];\n    public static readonly SELECT = new ToolTypes(\"select\", \"선택\");\n    public static readonly BRUSH = new ToolTypes(\"brush\", \"브러쉬\");\n    public static readonly SHAPE = new ToolTypes(\"shape\", \"셰이프\");\n    public static readonly TEXT = new ToolTypes(\"text\", \"텍스트\");\n    public static readonly IMAGE = new ToolTypes(\"image\", \"이미지\");\n    public static readonly CANVAS = new ToolTypes(\"canvas\", \"캔버스\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        ToolTypes._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n}","enum MimeType {\n    TEXT = \"text/plain\",\n}\n\nexport class FileUtils {\n    public static writeText(fileName: string, text: string) {\n        const blob = new Blob([text], { type: MimeType.TEXT });\n        const objectURL = window.URL.createObjectURL(blob);\n        this.write(fileName, objectURL);\n    }\n\n    public static write(fileName: string, dataURL: string) {\n        const a = document.createElement('a');\n        a.download = fileName;\n        a.href = dataURL;\n        a.click();\n    }\n\n    public static async read(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = () => reject();\n            reader.readAsText(file);\n        });\n    }\n}","import React from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Menu, {MenuProps} from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ToolButton from \"./ToolButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {FileUtils} from \"../../utils/FileUtils\";\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: \"1px solid #d3d4d5\",\n    },\n})((props: MenuProps) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n        }}\n        transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n        }}\n        {...props}\n    />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        \"&:focus\": {\n            backgroundColor: theme.palette.primary.main,\n            \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n                color: theme.palette.common.white,\n            },\n        },\n    },\n}))(MenuItem);\n\nexport default function MenuToolButton() {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const {canvasStore} = useStores();\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleFileOpen = () => {\n        inputRef.current?.click();\n        handleClose();\n    }\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.item(0);\n        e.target.value = \"\";\n\n        if (!!file) {\n            FileUtils.read(file).then(jsonString => {\n                canvasStore.canvas.loadFromJSON(jsonString, () => {\n                    //\n                })\n            }).catch(e => console.error(e));\n        }\n    }\n\n    const handleSave = () => {\n        FileUtils.writeText(\"canvas.json\", JSON.stringify(canvasStore.canvas.toJSON()));\n        handleClose();\n    }\n\n    const handleImageSave = () => {\n        const fullQuality = canvasStore.canvas.toDataURL();\n        FileUtils.write(\"canvas.png\", fullQuality);\n        handleClose();\n    }\n\n    return (\n        <div>\n            <input\n                type={\"file\"}\n                onChange={handleFileChange}\n                ref={inputRef}\n                style={{display: \"none\"}}\n                accept=\"application/json\"\n            />\n            <ToolButton icon={<MenuIcon/>} text={\"메뉴\"} onClick={handleClick}/>\n            <StyledMenu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <StyledMenuItem onClick={handleFileOpen}>\n                    <ListItemIcon>\n                        <DescriptionIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"열기\"/>\n                </StyledMenuItem>\n                <StyledMenuItem onClick={handleSave}>\n                    <ListItemIcon>\n                        <SaveIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"저장\"/>\n                </StyledMenuItem>\n                <StyledMenuItem onClick={handleImageSave}>\n                    <ListItemIcon>\n                        <SaveAltIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"이미지로 저장\"/>\n                </StyledMenuItem>\n            </StyledMenu>\n        </div>\n    );\n}","import React from \"react\";\nimport {AppBar, Toolbar} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\nimport ToolButton from \"./ToolButton\";\nimport MouseIcon from '@material-ui/icons/Mouse';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BrushIcon from \"@material-ui/icons/Brush\";\nimport {ToolTypes} from \"../../models/tools/ToolTypes\";\nimport MenuToolButton from \"./MenuToolButton\";\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport PhotoSizeSelectSmallIcon from \"@material-ui/icons/PhotoSizeSelectSmall\";\nimport ImageIcon from \"@material-ui/icons/Image\";\n\nconst useStyles = makeStyles(() => ({\n    appBarColor: {\n        backgroundColor: \"rgba(30,30,30,0.95)\",\n    },\n    left: {\n        justifyContent: \"flex-start\",\n    },\n    center: {\n        display: \"flex\",\n        flex: 1,\n        justifyContent: \"center\",\n    },\n    right: {\n        justifyContent: \"flex-end\",\n    }\n}));\n\nconst ToolBox = observer(() => {\n    const classes = useStyles();\n    const {canvasStore} = useStores();\n\n    return (\n        <AppBar\n            classes={{\n                colorDefault: classes.appBarColor,\n            }}\n            color={\"default\"}\n            elevation={0}\n        >\n            <Toolbar variant={\"dense\"}>\n                <div className={classes.left}>\n                    <MenuToolButton/>\n                </div>\n                <div className={classes.center}>\n                    <ToolButton\n                        icon={<MouseIcon/>}\n                        text={ToolTypes.SELECT.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SELECT)}\n                        selected={canvasStore.canvasMode === ToolTypes.SELECT}\n                    />\n                    <ToolButton\n                        icon={<BrushIcon/>}\n                        text={ToolTypes.BRUSH.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.BRUSH)}\n                        selected={canvasStore.canvasMode === ToolTypes.BRUSH}\n                    />\n                    <ToolButton\n                        icon={<DashboardIcon/>}\n                        text={ToolTypes.SHAPE.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SHAPE)}\n                        selected={canvasStore.canvasMode === ToolTypes.SHAPE}\n                    />\n                    <ToolButton\n                        icon={<TextFieldsIcon/>}\n                        text={ToolTypes.TEXT.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.TEXT)}\n                        selected={canvasStore.canvasMode === ToolTypes.TEXT}\n                    />\n                    <ToolButton\n                        icon={<ImageIcon/>}\n                        text={ToolTypes.IMAGE.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.IMAGE)}\n                        selected={canvasStore.canvasMode === ToolTypes.IMAGE}\n                    />\n                    <ToolButton\n                        icon={<PhotoSizeSelectSmallIcon/>}\n                        text={ToolTypes.CANVAS.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.CANVAS)}\n                        selected={canvasStore.canvasMode === ToolTypes.CANVAS}\n                    />\n                </div>\n                <div className={classes.right}>\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n})\n\nexport default ToolBox;","import {fabric} from \"fabric\";\n\nexport class BrushType {\n    private static readonly _values: BrushType[] = [];\n    public static readonly PENCIL = new BrushType(\"pencil\", \"연필\");\n    public static readonly CIRCLE = new BrushType(\"circle\", \"원형\");\n    public static readonly SPRAY = new BrushType(\"spray\", \"스프레이\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        BrushType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getBrush(canvas: fabric.Canvas) {\n        switch (this) {\n            case BrushType.PENCIL:\n                return new (fabric.PencilBrush as any)(canvas);\n            case BrushType.CIRCLE:\n                return new (fabric.CircleBrush as any)(canvas);\n            case BrushType.SPRAY:\n                return new (fabric.SprayBrush as any)(canvas);\n            default:\n                return new (fabric.PencilBrush as any)(canvas);\n        }\n    }\n}","export const fontSizes = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72, 94, 130];\n\nexport enum FontFaceType {\n    DEFAULT,\n    GOOGLE,\n}\n\nexport const TextAlign = {\n    LEFT: \"left\",\n    CENTER: \"center\",\n    RIGHT: \"right\",\n}\n\nexport const FontWeight = {\n    NORMAL: \"normal\",\n    BOLD: \"bold\",\n}\n\nexport const FontStyle: Record<string, \"normal\" | \"italic\"> = {\n    NORMAL: \"normal\",\n    ITALIC: \"italic\",\n}\n\nexport class FontFaces {\n    private static readonly _values: FontFaces[] = [];\n    public static readonly TIMES_NEW_ROMAN = new FontFaces(\"Times New Roman\", \"Times New Roman\", FontFaceType.DEFAULT);\n    public static readonly NOTO_SANS_KR = new FontFaces(\"Noto Sans KR\", \"노토산스\", FontFaceType.GOOGLE);\n    public static readonly NANUM_GOTHIC = new FontFaces(\"Nanum Gothic\", \"나눔고딕\", FontFaceType.GOOGLE);\n    public static readonly NANUM_PEN_SCRIPT = new FontFaces(\"Nanum Pen Script\", \"나눔펜\", FontFaceType.GOOGLE);\n    public static readonly SONG_MYUNG = new FontFaces(\"Song Myung\", \"송명\", FontFaceType.GOOGLE);\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n        public readonly type: FontFaceType,\n    ) {\n        FontFaces._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public static getGoogleFonts() {\n        return this.values().filter(font => font.type === FontFaceType.GOOGLE);\n    }\n}","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Slider } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { InputAdornment } from \"@material-ui/core\";\n\ninterface Props {\n    label: string;\n    value: number;\n    onChange: (value: number) => void;\n    prefix?: string;\n    min?: number;\n    max?: number;\n}\n\nconst useStyles = makeStyles(theme => ({\n    label: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    }\n}));\n\nconst Range = ({ label, value, onChange, prefix, min, max }: Props) => {\n    const classes = useStyles();\n\n    const handleSliderChange = (event: any, newValue: number | number[]) => {\n        if (typeof newValue === \"number\") {\n            onChange(newValue);\n        }\n    };\n\n    return (\n        <div>\n            <div className={classes.label}>\n                <Typography variant={\"caption\"}>{label}</Typography>\n                <Input\n                    value={value}\n                    margin=\"dense\"\n                    inputProps={{\n                        min: 1,\n                        max: 100,\n                        type: 'number',\n                    }}\n                    endAdornment={<InputAdornment position=\"end\">{prefix}</InputAdornment>}\n                />\n            </div>\n            <div>\n                <Slider\n                    min={min}\n                    max={max}\n                    value={value}\n                    onChange={handleSliderChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Range;","import {Popover, Typography} from \"@material-ui/core\";\nimport React from \"react\";\nimport {ChromePicker, ColorResult} from \"react-color\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\ninterface Props {\n    label?: string,\n    color: string | undefined,\n    disableAlpha?: boolean,\n    disabled?: boolean,\n    onChange: (color: ColorResult) => void;\n}\n\nconst useStyles = makeStyles(() => ({\n    colorBox: {\n        width: \"100%\",\n        height: 35,\n        border: 1,\n        borderStyle: \"solid\",\n        borderColor: \"#c0c0c0\",\n        backgroundColor: (props: Props) => props.color,\n        cursor: (props: Props) => !props.disabled ? \"pointer\" : \"default\",\n    }\n}));\n\nconst ColorPicker = (props: Props) => {\n    const classes = useStyles(props);\n    const [anchorEl, setAnchorEl] = React.useState<HTMLDivElement | null>(null);\n    const open = !!anchorEl;\n\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            {props.label && <Typography variant={\"caption\"}>{props.label}</Typography>}\n            <div>\n                <div className={classes.colorBox} onClick={handleClick}/>\n                <Popover\n                    open={open && !props.disabled}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                >\n                    <ChromePicker color={props.color} disableAlpha={props.disableAlpha}\n                                  onChangeComplete={props.onChange}/>\n                </Popover>\n            </div>\n        </div>\n    )\n}\n\nexport default ColorPicker;","import { Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport { ColorResult, TwitterPicker } from \"react-color\"\nimport ColorPicker from \"./ColorPicker\";\n\ninterface Props {\n    color: string | undefined,\n    disableAlpha?: boolean,\n    onChange: (color: ColorResult) => void;\n}\n\nconst ColorPalette = (props: Props) => {\n    return (\n        <div>\n            <Box mb={2}>\n                <ColorPicker {...props} />\n            </Box>\n            <TwitterPicker width={\"100%\"} color={props.color} onChangeComplete={props.onChange} />\n        </div>\n    )\n}\n\nexport default ColorPalette;","import React from \"react\";\n\nconst usePrevious = (value: any) => {\n    const ref = React.useRef();\n    React.useEffect(() => {\n        ref.current = value;\n    });\n\n    return ref.current;\n}\n\nexport default usePrevious;","import { Select } from \"@material-ui/core\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { FormControl } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\nimport usePrevious from \"hooks/usePrevious\";\nimport { CommonColor } from \"models/color/CommonColor\";\nimport React from \"react\"\nimport { ColorResult } from \"react-color\"\nimport ColorPicker from \"./ColorPicker\"\n\ninterface Props {\n    color: string | undefined;\n    onChange: (color: string | undefined) => void;\n}\n\nconst ColorSelect = ({ color, onChange }: Props) => {\n    const previousColor = usePrevious(color);\n    const [selectedValue, setSelectedValue] = React.useState<string>(!color ? \"none\" : \"solid\");\n\n    const handleColorChange = (color: ColorResult) => {\n        const rgb = !color.rgb.a && color.rgb.a !== 0 ? color.hex : `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n        onChange(rgb);\n    }\n\n    const handleSelectedValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const value = event.target.value as string;\n        setSelectedValue(value);\n\n        if (value === \"none\") {\n            onChange(undefined);\n        } else {\n            onChange(previousColor || CommonColor.PRIMARY);\n        }\n    };\n\n    return (\n        <Box display={\"flex\"}>\n            <Box mr={1.5} flexBasis={35}>\n                <ColorPicker color={color} onChange={handleColorChange} disabled={selectedValue === \"none\"} />\n            </Box>\n            <Box flex={1}>\n                <FormControl fullWidth>\n                    <Select\n                        value={selectedValue}\n                        onChange={handleSelectedValueChange}\n                    >\n                        <MenuItem value=\"none\">\n                            <em>없음</em>\n                        </MenuItem>\n                        <MenuItem value={\"solid\"}>단색</MenuItem>\n                    </Select>\n                </FormControl>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ColorSelect","import FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Button } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { TextAlign } from 'models/tools/Text';\nimport { CommonColor } from 'models/color/CommonColor';\n\nconst useStyles = makeStyles((theme) => ({\n    alignBox: {\n        display: \"flex\",\n        border: 2,\n        borderStyle: \"solid\",\n        borderColor: \"#ddd\",\n    },\n    alignButton: {\n        flex: 1,\n        borderRadius: 0,\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        color: \"#ffffff\",\n    }\n}));\n\ninterface Props {\n    textAlign: string,\n    onChange: (textAlign: string) => void,\n}\n\nconst AlignButton = ({textAlign, onChange}: Props) => {\n    const classes = useStyles();\n    \n    return (\n        <div className={classes.alignBox}>\n            <Button className={clsx(classes.alignButton, textAlign === TextAlign.LEFT && classes.selected)} onClick={() => onChange(TextAlign.LEFT)}>\n                <FormatAlignLeftIcon/>\n            </Button>\n            <Button className={clsx(classes.alignButton, textAlign === TextAlign.CENTER && classes.selected)} onClick={() => onChange(TextAlign.CENTER)}>\n                <FormatAlignCenterIcon/>\n            </Button>\n            <Button className={clsx(classes.alignButton, textAlign === TextAlign.RIGHT && classes.selected)} onClick={() => onChange(TextAlign.RIGHT)}>\n                <FormatAlignRightIcon/>\n            </Button>\n        </div>\n    )\n}\n\nexport default AlignButton;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBold } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CommonColor } from \"models/color/CommonColor\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        borderRadius: 0,\n        border: 2,\n        borderStyle: \"solid\",\n        borderColor: \"#ddd\",\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        color: \"#ffffff\",\n    }\n}));\n\n\ninterface Props {\n    bold: boolean,\n    toggle: (bold: boolean) => void,\n}\n\nconst BoldButton = ({bold, toggle}: Props) => {\n    const classes = useStyles();\n    return (\n        <Button className={clsx(classes.button, bold && classes.selected)} onClick={() => toggle(!bold)}>\n            <FontAwesomeIcon icon={faBold} size=\"lg\" />\n        </Button>\n    )\n}\n\nexport default BoldButton;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faItalic } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CommonColor } from \"models/color/CommonColor\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        borderRadius: 0,\n        border: 2,\n        borderStyle: \"solid\",\n        borderColor: \"#ddd\",\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        color: \"#ffffff\",\n    }\n}));\n\n\ninterface Props {\n    italic: boolean,\n    toggle: (bold: boolean) => void,\n}\n\nconst ItalicButton = ({italic, toggle}: Props) => {\n    const classes = useStyles();\n    return (\n        <Button className={clsx(classes.button, italic && classes.selected)} onClick={() => toggle(!italic)}>\n            <FontAwesomeIcon icon={faItalic} size=\"lg\" />\n        </Button>\n    )\n}\n\nexport default ItalicButton;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUnderline } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CommonColor } from \"models/color/CommonColor\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        borderRadius: 0,\n        border: 2,\n        borderStyle: \"solid\",\n        borderColor: \"#ddd\",\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        color: \"#ffffff\",\n    }\n}));\n\n\ninterface Props {\n    underline: boolean,\n    toggle: (bold: boolean) => void,\n}\n\nconst UnderlineButton = ({underline, toggle}: Props) => {\n    const classes = useStyles();\n    return (\n        <Button className={clsx(classes.button, underline && classes.selected)} onClick={() => toggle(!underline)}>\n            <FontAwesomeIcon icon={faUnderline} size=\"lg\" />\n        </Button>\n    )\n}\n\nexport default UnderlineButton;","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport BoldButton from './BoldButton';\nimport ItalicButton from './ItalicButton';\nimport UnderlineButton from './UnderlineButton';\n\nconst useStyles = makeStyles((theme) => ({\n    alignBox: {\n        display: \"flex\",\n        \"& > *\": {\n            flex: 1,\n            marginRight: theme.spacing(1),\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n            \"&:last-child\": {\n                marginRight: 0,\n            }\n        }\n    },\n}));\n\ninterface Props {\n    bold: boolean;\n    italic: boolean;\n    underline: boolean;\n    toggleBold: (bold: boolean) => void;\n    toggleItalic: (italic: boolean) => void;\n    toggleUnderline: (underline: boolean) => void;\n}\n\nconst TextStyleButton = ({bold, italic, underline, toggleBold, toggleItalic, toggleUnderline}: Props) => {\n    const classes = useStyles();\n    \n    return (\n        <div className={classes.alignBox}>\n            <BoldButton bold={bold} toggle={toggleBold}/>\n            <ItalicButton italic={italic} toggle={toggleItalic}/>\n            <UnderlineButton underline={underline} toggle={toggleUnderline}/>\n        </div>\n    )\n}\n\nexport default TextStyleButton;","import {Button} from \"@material-ui/core\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport React from \"react\";\n\ninterface Props {\n    onChange?: (files: File[]) => void;\n}\n\nconst ImageUploadButton = ({onChange}: Props) => {\n    const inputRef = React.useRef<null | HTMLInputElement>(null);\n\n    const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        if (onChange) {\n            const files = e.target.files ? Array.from(e.target.files) : [];\n            onChange(files);\n        }\n    };\n\n    return (\n        <>\n            <input\n                ref={inputRef}\n                type={\"file\"}\n                style={{display: \"none\"}}\n                accept={\"image/*\"}\n                multiple={true}\n                onChange={handleChange}\n            />\n            <Button\n                variant={\"contained\"}\n                color={\"primary\"}\n                startIcon={<PublishIcon/>}\n                onClick={() => inputRef.current?.click()}\n            >\n                이미지 추가\n            </Button>\n        </>\n    )\n}\n\nexport default ImageUploadButton;","import {Typography} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { useStores } from \"hooks/useStores\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n    },\n    title: {\n        marginBottom: theme.spacing(3),\n    },\n    propBoxWrapper: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n}))\n\nconst PropBoxLayout: React.FC = observer(({ children }) => {\n    const classes = useStyles();\n    const { canvasStore, objectStore } = useStores();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.title}>\n                <Typography variant={\"h6\"} color={\"primary\"}>\n                    {objectStore.activeObject ? objectStore.getObjectTypeName() : canvasStore.canvasMode.display}\n                </Typography>\n            </div>\n            <div className={classes.propBoxWrapper}>\n                {children}\n            </div>\n        </div>\n    )\n})\n\nexport default PropBoxLayout;","import React from \"react\";\nimport {Box, BoxProps, Typography} from \"@material-ui/core\";\n\ninterface Props extends BoxProps {\n    label?: string,\n}\n\nconst PropBoxItem: React.FC<Props> = ({label, children, ...other}) => {\n    return (\n        <Box {...other}>\n            {label && (\n                <Box mb={1}>\n                    <Typography variant={\"caption\"}>{label}</Typography>\n                </Box>\n            )}\n            {children}\n        </Box>\n    )\n}\n\nexport default PropBoxItem;","import {Box} from \"@material-ui/core\";\nimport {BrushType} from \"../../models/tools/Brush\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\nimport {faCircle, faPencilAlt, faSprayCan} from \"@fortawesome/free-solid-svg-icons\";\nimport clsx from \"clsx\";\nimport {CommonColor} from \"../../models/color/CommonColor\";\nimport {ColorPalette, Range} from \"components/input\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport PropBoxItem from \"./PropBoxItem\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        \"&:hover\": {\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\n            \"& *\": {\n                color: \"white\",\n            }\n        },\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        \"& *\": {\n            color: \"white\",\n        }\n    },\n}))\n\nconst BrushPropBox = observer(() => {\n    const classes = useStyles();\n    const {brushStore} = useStores();\n\n    return (\n        <PropBoxLayout>\n            {!brushStore.item && <div>\n                <PropBoxItem label={\"모양\"} mb={3}>\n                    <Box display=\"flex\">\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.PENCIL && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.PENCIL)}\n                        >\n                            <FontAwesomeIcon icon={faPencilAlt} size=\"lg\"/>\n                        </div>\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.SPRAY && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.SPRAY)}\n                        >\n                            <FontAwesomeIcon icon={faSprayCan} size=\"lg\"/>\n                        </div>\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.CIRCLE && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.CIRCLE)}\n                        >\n                            <FontAwesomeIcon icon={faCircle} size=\"lg\"/>\n                        </div>\n                    </Box>\n                </PropBoxItem>\n            </div>}\n            <PropBoxItem mb={3}>\n                <Range\n                    label=\"두께\"\n                    value={brushStore.strokeWidth}\n                    onChange={(strokeWidth) => brushStore.setStrokeWidth(strokeWidth)}\n                    prefix={\"px\"}\n                    min={1}\n                />\n            </PropBoxItem>\n            <PropBoxItem label={\"색상\"}>\n                <ColorPalette color={brushStore.stroke} onChange={(color) => brushStore.setStroke(color.hex)}\n                              disableAlpha={true}/>\n            </PropBoxItem>\n        </PropBoxLayout>\n    )\n})\n\nexport default BrushPropBox;","import {fabric} from \"fabric\";\n\nexport class ShapeType {\n    private static readonly _values: ShapeType[] = [];\n    public static readonly RECT = new ShapeType(\"rect\", \"사각형\");\n    public static readonly ELLIPSE = new ShapeType(\"ellipse\", \"원\");\n    public static readonly TRIANGLE = new ShapeType(\"triangle\", \"삼각형\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        ShapeType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getShape<T extends fabric.IObjectOptions>(options?: T) {\n        switch (this) {\n            case ShapeType.RECT:\n                return new fabric.Rect(options);\n            case ShapeType.ELLIPSE:\n                return new fabric.Ellipse(options);\n            case ShapeType.TRIANGLE:\n                return new fabric.Triangle(options);\n            default:\n                return new fabric.Rect(options);\n        }\n    }\n}","import {Box} from \"@material-ui/core\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {observer} from \"mobx-react\";\nimport {ShapeType} from \"../../models/tools/Shape\";\nimport clsx from \"clsx\";\nimport {CommonColor} from \"../../models/color/CommonColor\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport {useStores} from \"hooks/useStores\";\nimport {ColorSelect, Range} from \"components/input\";\nimport PropBoxItem from \"./PropBoxItem\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        height: 40,\n        \"&:hover\": {\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\n            \"& svg > *\": {\n                stroke: \"white\",\n            }\n        },\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        \"& svg > *\": {\n            stroke: \"white\",\n        }\n    },\n    propBox: {\n        \"& > div\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}))\n\nconst ShapePropBox = observer(() => {\n    const classes = useStyles();\n    const { shapeStore } = useStores();\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                {!shapeStore.item && <div>\n                    <PropBoxItem label={\"모양\"}>\n                        <Box display={\"flex\"}>\n                            <div\n                                className={clsx(classes.button, shapeStore.shapeType === ShapeType.ELLIPSE && classes.selected)}\n                                onClick={() => shapeStore.setShapeType(ShapeType.ELLIPSE)}\n                            >\n                                <svg height=\"24\" width=\"24\">\n                                    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\n                                </svg>\n                            </div>\n                            <div\n                                className={clsx(classes.button, shapeStore.shapeType === ShapeType.RECT && classes.selected)}\n                                onClick={() => shapeStore.setShapeType(ShapeType.RECT)}\n                            >\n                                <svg width=\"24\" height=\"24\">\n                                    <rect width=\"24\" height=\"24\" stroke=\"black\" fill=\"transparent\" strokeWidth={4} />\n                                </svg>\n                            </div>\n                            <div\n                                className={clsx(classes.button, shapeStore.shapeType === ShapeType.TRIANGLE && classes.selected)}\n                                onClick={() => shapeStore.setShapeType(ShapeType.TRIANGLE)}\n                            >\n                                <svg width=\"24\" height=\"24\">\n                                    <polygon points=\"12,2 22,22 2,22\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\n                                </svg>\n                            </div>\n                        </Box>\n                    </PropBoxItem>\n                </div>}\n                <PropBoxItem label={\"채우기\"}>\n                    <ColorSelect color={shapeStore.fill} onChange={(color: string | undefined) => shapeStore.setFill(color)} />\n                </PropBoxItem>\n                <PropBoxItem label={\"선 색상\"}>\n                    <ColorSelect color={shapeStore.stroke} onChange={(color: string | undefined) => shapeStore.setStroke(color)} />\n                </PropBoxItem>\n                <PropBoxItem>\n                    <Range label=\"선 두께\" value={shapeStore.strokeWidth} onChange={(strokeWidth) => shapeStore.setStrokeWidth(strokeWidth)} prefix={\"px\"} />\n                </PropBoxItem>\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default ShapePropBox;","import { IEvent } from \"fabric/fabric-impl\";\nimport { RootStore, Store } from \"./rootStore\";\n\nexport enum MouseEventType {\n    MOUSE_UP = \"mouse:up\",\n    MOUSE_DOWN = \"mouse:down\",\n    MOUSE_MOVE = \"mouse:move\",\n}\n\nexport interface MouseEventObject {\n    startCursorPosition: {x: number, y: number},\n    currentCursorPosition: {x: number, y: number},\n}\n\nexport class MouseEventStore implements Store {\n    private readonly listeners: any;\n    private startCursorPosition = { x: 0, y: 0 };\n    private currentCursorPosition = { x: 0, y: 0 };\n    private observer: Map<MouseEventType, Array<(e: MouseEventObject) => void>> = new Map();\n\n    constructor(private readonly rootStore: RootStore) {\n        this.listeners = {\n            onMouseDown: this.onMouseDown.bind(this),\n            onMouseUp: this.onMouseUp.bind(this),\n            onMouseMove: this.onMouseMove.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListeners();\n    }\n\n    onDestroy() {\n        this.removeEventListeners();\n    }\n\n    subscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\n        if (!this.observer.has(eventType)) {\n            this.observer.set(eventType, []);\n        }\n        \n        this.observer.get(eventType)?.push(listener);\n    }\n\n    unsubscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\n        this.observer.set(eventType, this.observer.get(eventType)?.filter(fn => fn !== listener) || []);\n    }\n\n    private onMouseDown(e: IEvent) {\n        this.startCursorPosition = { ...this.getCursorPosition(e) };\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_DOWN)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }));\n    }\n\n    private onMouseMove(e: IEvent) {\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_MOVE)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }));\n    }\n\n    private onMouseUp(e: IEvent) {\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_UP)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }));\n    }\n\n    private addEventListeners() {\n        const { canvas } = this.rootStore.canvasStore;\n        canvas.on(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        canvas.on(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n        canvas.on(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n    }\n\n    private removeEventListeners() {\n        const { canvas } = this.rootStore.canvasStore;\n        canvas.off(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        canvas.off(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n        canvas.off(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n    }\n\n    private getCursorPosition(e: IEvent) {\n        return this.rootStore.canvasStore.canvas.getPointer(e.e);\n    }\n}","import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport React from \"react\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport { AlignButton, ColorPicker, TextStyleButton } from \"../input\";\nimport { useStores } from \"hooks/useStores\";\nimport { observer } from \"mobx-react\";\nimport { Box, FormControl, Select } from \"@material-ui/core\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { FontFaces, fontSizes } from \"models/tools/Text\";\nimport PropBoxItem from \"./PropBoxItem\";\n\nconst useStyles = makeStyles(theme => ({\n    propBox: {\n        \"& > *\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}));\n\nconst TextPropBox = observer(() => {\n    const classes = useStyles();\n    const { textStore } = useStores();\n\n    const handleFontSizeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const fontSize = parseInt(event.target.value as string, 10);\n        textStore.setFontSize(fontSize);\n    };\n\n    const handleFontFamilyChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const fontFamily = event.target.value as string;\n        textStore.setFontFamily(fontFamily);\n    };\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                <PropBoxItem label={\"폰트\"}>\n                    <FormControl fullWidth>\n                        <Select\n                            value={textStore.fontFamily}\n                            onChange={handleFontFamilyChange}\n                        >\n                            {FontFaces.values().map(font => (\n                                <MenuItem\n                                    key={font.value}\n                                    value={font.value}\n                                    style={{\n                                        fontFamily: font.value,\n                                    }}\n                                >\n                                    {font.display}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </PropBoxItem>\n                <PropBoxItem label={\"폰트 크기\"}>\n                    <Box display={\"flex\"}>\n                        <Box flex={1} mr={1.5}>\n                            <FormControl fullWidth>\n                                <Select\n                                    value={textStore.fontSize}\n                                    onChange={handleFontSizeChange}\n                                >\n                                    <MenuItem value={textStore.fontSize}>{textStore.fontSize}</MenuItem>\n                                    {fontSizes.map(fontSize => (\n                                        textStore.fontSize !== fontSize && <MenuItem key={fontSize} value={fontSize}>{fontSize}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </Box>\n                        <Box flexBasis={35}>\n                            <ColorPicker color={textStore.fill} onChange={(color) => textStore.setFill(color.hex)} />\n                        </Box>\n                    </Box>\n                </PropBoxItem>\n                <PropBoxItem label={\"폰트 스타일\"}>\n                    <TextStyleButton\n                        bold={textStore.isBold()}\n                        italic={textStore.isItalic()}\n                        underline={textStore.underline}\n                        toggleBold={(bold) => textStore.setBold(bold)}\n                        toggleItalic={(italic) => textStore.setItalic(italic)}\n                        toggleUnderline={(underline) => textStore.setUnderline(underline)}\n                    />\n                </PropBoxItem>\n                <PropBoxItem label={\"정렬\"}>\n                    <AlignButton textAlign={textStore.textAlign} onChange={(textAlign) => textStore.setTextAlign(textAlign)} />\n                </PropBoxItem>\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default TextPropBox;","import {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport {Box, FormControl, Input, InputAdornment, InputLabel} from \"@material-ui/core\";\nimport React from \"react\";\nimport {ColorPalette} from \"../input\";\nimport PropBoxItem from \"./PropBoxItem\";\n\nconst CanvasPropBox = observer(() => {\n    const {canvasStore} = useStores();\n    const [width, setWidth] = React.useState(canvasStore.width);\n    const [height, setHeight] = React.useState(canvasStore.height);\n\n    return (\n        <PropBoxLayout>\n            <PropBoxItem label={\"캔버스 크기 조정\"} mb={3}>\n                <Box display={\"flex\"}>\n                    <Box flex={1} mr={1.5}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor={\"canvas-width\"}>너비</InputLabel>\n                            <Input\n                                id={\"canvas-width\"}\n                                type={\"number\"}\n                                value={width}\n                                onChange={(event) => setWidth(parseInt(event.target.value))}\n                                onBlur={() => canvasStore.setWidth(width)}\n                                endAdornment={<InputAdornment position=\"end\">px</InputAdornment>}\n                            />\n                        </FormControl>\n                    </Box>\n                    <Box flex={1}>\n                        <FormControl fullWidth>\n                            <InputLabel htmlFor={\"canvas-width\"}>높이</InputLabel>\n                            <Input\n                                id={\"canvas-width\"}\n                                type={\"number\"}\n                                value={height}\n                                onChange={(event) => setHeight(parseInt(event.target.value))}\n                                onBlur={() => canvasStore.setHeight(height)}\n                                endAdornment={<InputAdornment position=\"end\">px</InputAdornment>}\n                            />\n                        </FormControl>\n                    </Box>\n                </Box>\n            </PropBoxItem>\n            <PropBoxItem label={\"배경\"}>\n                <ColorPalette\n                    color={canvasStore.backgroundColor}\n                    onChange={(event) => canvasStore.setBackgroundColor(event.hex)}\n                    disableAlpha={true}\n                />\n            </PropBoxItem>\n        </PropBoxLayout>\n    )\n})\n\nexport default CanvasPropBox;","import PropBoxLayout from \"./PropBoxLayout\";\n\nconst SelectPropBox = () => {\n    return (\n        <PropBoxLayout>\n            오브젝트를 선택하면 속성을 변경할 수 있습니다.\n        </PropBoxLayout>\n    )\n}\n\nexport default SelectPropBox;","import PropBoxLayout from \"./PropBoxLayout\";\nimport {ImageUploadButton} from \"../input\";\nimport React from \"react\";\nimport PropBoxItem from \"./PropBoxItem\";\nimport {Grid} from \"@material-ui/core\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\n\nconst ImagePropBox = observer(() => {\n    const {imageStore} = useStores();\n\n    return (\n        <PropBoxLayout>\n            <PropBoxItem mb={3}>\n                <ImageUploadButton\n                    onChange={(files) => imageStore.upload(files)}\n                />\n            </PropBoxItem>\n            <PropBoxItem>\n                <Grid container={true} spacing={1}>\n                    {imageStore.uploadedImages.map(image => (\n                        <Grid\n                            key={image.name}\n                            item={true}\n                            onClick={() => imageStore.addImage(image.dataUrl)}\n                            style={{cursor: \"pointer\"}}\n                        >\n                            <img\n                                src={image.dataUrl}\n                                alt={image.name}\n                                style={{\n                                    width: \"100%\",\n                                    objectFit: \"cover\",\n                                }}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n            </PropBoxItem>\n        </PropBoxLayout>\n    )\n})\n\nexport default ImagePropBox;","import React from \"react\";\nimport {observer} from \"mobx-react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {ToolTypes} from \"../../models/tools/ToolTypes\";\nimport BrushPropBox from \"./BrushPropBox\";\nimport ShapePropBox from \"./ShapePropBox\";\nimport TextPropBox from \"./TextPropBox\";\nimport CanvasPropBox from \"./CanvasPropBox\";\nimport SelectPropBox from \"./SelectPropBox\";\nimport ImagePropBox from \"./ImagePropBox\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n    }\n}));\n\nconst PropBox = observer(() => {\n    const classes = useStyles();\n    const {canvasStore, objectStore} = useStores();\n    const selectedTool = canvasStore.canvasMode;\n    const activeObject = objectStore.activeObject;\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {!activeObject && <React.Fragment>\n                    {selectedTool === ToolTypes.SELECT && (<SelectPropBox/>)}\n                    {selectedTool === ToolTypes.BRUSH && (<BrushPropBox/>)}\n                    {selectedTool === ToolTypes.SHAPE && (<ShapePropBox/>)}\n                    {selectedTool === ToolTypes.TEXT && (<TextPropBox/>)}\n                    {selectedTool === ToolTypes.IMAGE && (<ImagePropBox/>)}\n                    {selectedTool === ToolTypes.CANVAS && (<CanvasPropBox/>)}\n                </React.Fragment>}\n                {activeObject && <React.Fragment>\n                    {objectStore.isPath() && <BrushPropBox/>}\n                    {objectStore.isShape() && <ShapePropBox/>}\n                    {objectStore.isText() && <TextPropBox/>}\n                    {objectStore.isImage() && <ImagePropBox/>}\n                </React.Fragment>}\n            </div>\n        </React.Fragment>\n    )\n})\n\nexport default PropBox;","import React from \"react\";\nimport {Layout} from \"../layout\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {ToolBox} from \"../../components/tools\";\nimport {observer} from \"mobx-react\";\nimport {Toolbar} from \"@material-ui/core\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {PropBox} from \"../../components/propbox\";\n\nconst leftMenuWidth = 260;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100vw\",\n        height: \"100vh\",\n    },\n    flexBox: {\n        display: \"flex\",\n        flex: 1,\n    },\n    contents: {\n        display: \"flex\",\n    },\n    left: {\n        flexBasis: `${leftMenuWidth}px`,\n        backgroundColor: \"#f0f0f0\",\n    },\n    canvasWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1,\n        backgroundColor: \"#c0c0c0\",\n        padding: theme.spacing(3),\n    },\n}))\n\nconst Canvas = observer(() => {\n    const classes = useStyles();\n    const rootStore = useStores();\n    const canvasRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!canvasRef.current) {\n            return;\n        }\n\n        rootStore.init(canvasRef.current);\n        rootStore.onInit();\n        return () => rootStore.onDestroy();\n    }, [rootStore, canvasRef]);\n\n    return (\n        <Layout>\n            <ToolBox/>\n            <div className={classes.root}>\n                <Toolbar variant={\"dense\"}/>\n                <div className={classes.flexBox}>\n                    <div className={classes.left}>\n                        <PropBox/>\n                    </div>\n                    <div className={classes.canvasWrapper} ref={canvasRef}/>\n                </div>\n            </div>\n        </Layout>\n    )\n})\n\nexport default Canvas;","import { makeAutoObservable } from \"mobx\";\nimport { BrushType } from \"models/tools/Brush\";\nimport { RootStore, Store } from \"./rootStore\";\nimport { fabric } from \"fabric\";\nimport { SelectionEventStore } from \"./selectionEventStore\";\nimport { CanvasModeManager } from \"./canvasStore\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport {ObjectStore} from \"./objectStore\";\n\nconst defaultStyles = {\n    brushType: BrushType.PENCIL,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n}\n\nexport class BrushStore implements Store, CanvasModeManager {\n    public brushType = defaultStyles.brushType;\n    public stroke = defaultStyles.stroke;\n    public strokeWidth = defaultStyles.strokeWidth;\n    public item: fabric.Path | undefined;\n\n    private readonly listeners: any;\n    private readonly canvas: fabric.Canvas;\n    private readonly selectionEventStore: SelectionEventStore;\n    private readonly objectStore: ObjectStore;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.BRUSH, this);\n        this.canvas = rootStore.canvasStore.canvas;\n        this.selectionEventStore = rootStore.selectionEventStore;\n        this.objectStore = rootStore.objectStore;\n        this.listeners = {\n            updateObject: this.updateObject.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addReactions();\n    }\n\n    onDestroy() {\n        this.removeReactions();\n    }\n\n    onSessionStart() {\n        this.canvas.isDrawingMode = true;\n        this.setBrushType(this.brushType);\n    }\n\n    onSessionEnd() {\n        this.canvas.isDrawingMode = false;\n    }\n\n    setBrushType(brushType: BrushType) {\n        this.brushType = brushType;\n        this.setFreeDrawingBrush();\n    }\n\n    updateStroke(stroke: string | undefined) {\n        this.stroke = stroke || defaultStyles.stroke;\n        this.canvas.freeDrawingBrush.color = this.stroke;\n    }\n\n    setStroke(stroke: string | undefined) {\n        this.updateStroke(stroke);\n        this.objectStore.setStroke(stroke);\n    }\n\n    updateStrokeWidth(strokeWidth: number | undefined) {\n        this.strokeWidth = strokeWidth || defaultStyles.strokeWidth;\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\n    }\n\n    setStrokeWidth(strokeWidth: number | undefined) {\n        this.updateStrokeWidth(strokeWidth);\n        this.objectStore.setStrokeWidth(strokeWidth);\n    }\n\n    private setFreeDrawingBrush() {\n        this.canvas.freeDrawingBrush = this.brushType.getBrush(this.canvas);\n        this.canvas.freeDrawingBrush.color = this.stroke;\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (this.isBrush(object)) {\n            this.item = object as fabric.Path;\n            this.updatePathStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private updatePathStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            stroke,\n            strokeWidth,\n        } = this.item;\n\n        this.updateStroke(stroke);\n        this.updateStrokeWidth(strokeWidth);\n    }\n\n    private isBrush(object: fabric.Object | undefined) {\n        return this.objectStore.isPath(object);\n    }\n\n    private addReactions() {\n        this.selectionEventStore.subscribe(this.listeners.updateObject);\n    }\n\n    private removeReactions() {\n        this.selectionEventStore.unsubscribe(this.listeners.updateObject);\n    }\n}","import {makeAutoObservable} from \"mobx\";\nimport {ToolTypes} from \"models/tools/ToolTypes\";\nimport {RootStore, Store} from \"./rootStore\";\nimport {fabric} from \"fabric\";\n\nconst defaultStyles = {\n    width: 500,\n    height: 500,\n    backgroundColor: \"#ffffff\",\n}\n\nexport interface CanvasModeManager {\n    onSessionStart: () => void;\n    onSessionEnd: () => void;\n}\n\nexport class CanvasStore implements Store {\n    private readonly canvasModeManagers: Map<ToolTypes, CanvasModeManager> = new Map();\n\n    width = defaultStyles.width;\n    height = defaultStyles.height;\n    backgroundColor = defaultStyles.backgroundColor;\n    canvasMode = ToolTypes.CANVAS;\n\n    constructor(\n        private readonly rootStore: RootStore,\n        readonly canvas: fabric.Canvas,\n    ) {\n        makeAutoObservable(this);\n    }\n\n    onInit() {\n        this.canvas.setWidth(this.width);\n        this.canvas.setHeight(this.height);\n        this.canvas.setBackgroundColor(this.backgroundColor, () => {});\n        this.setCanvasMode(this.canvasMode);\n    }\n\n    onDestroy() {\n        this.canvas.dispose();\n    }\n\n    registerCanvasModeManager(mode: ToolTypes, manager: CanvasModeManager) {\n        this.canvasModeManagers.set(mode, manager);\n    }\n\n    setCanvasMode(mode: ToolTypes) {\n        const previousMode = this.canvasMode;\n        this.canvasMode = mode;\n\n        this.canvas.discardActiveObject().renderAll();\n        this.setAllCursor(\"default\");\n        this.setSelectable(false)\n\n        this.canvasModeManagers.get(previousMode)?.onSessionEnd();\n        this.canvasModeManagers.get(mode)?.onSessionStart();\n    }\n\n    setSelectable(selectable: boolean) {\n        this.canvas.selection = selectable;\n        this.canvas.getObjects().forEach(obj => {\n            obj.selectable = selectable;\n        });\n    }\n\n    setDefaultCursor(cursor: string) {\n        this.canvas.defaultCursor = cursor;\n    }\n\n    setHoverCursor(cursor: string) {\n        this.canvas.getObjects().forEach(obj => {\n            obj.hoverCursor = cursor;\n        });\n    }\n\n    setAllCursor(cursor: string) {\n        this.setDefaultCursor(cursor);\n        this.setHoverCursor(cursor);\n    }\n\n    setWidth(width: number) {\n        this.width = width;\n        this.canvas.setWidth(width);\n    }\n\n    setHeight(height: number) {\n        this.height = height;\n        this.canvas.setHeight(height);\n    }\n\n    setBackgroundColor(color: string) {\n        this.backgroundColor = color;\n        this.canvas.setBackgroundColor(color, () => {});\n    }\n}","const deleteIcon = \"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg version='1.1' id='Ebene_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='595.275px' height='595.275px' viewBox='200 215 230 470' xml:space='preserve'%3E%3Ccircle style='fill:%23F44336;' cx='299.76' cy='439.067' r='218.516'/%3E%3Cg%3E%3Crect x='267.162' y='307.978' transform='matrix(0.7071 -0.7071 0.7071 0.7071 -222.6202 340.6915)' style='fill:white;' width='65.545' height='262.18'/%3E%3Crect x='266.988' y='308.153' transform='matrix(0.7071 0.7071 -0.7071 0.7071 398.3889 -83.3116)' style='fill:white;' width='65.544' height='262.179'/%3E%3C/g%3E%3C/svg%3E\";\n\nexport const DeleteImageElement = document.createElement('img');\nDeleteImageElement.src = deleteIcon;","import {fabric} from \"fabric\";\nimport {DeleteImageElement} from \"../../components/element/DeleteImageElement\";\n\ntype DeleteAction = (eventData: MouseEvent, transformData: fabric.Transform, x: number, y: number) => boolean;\n\nexport class DeleteControl {\n    public static init(deleteAction: DeleteAction) {\n        fabric.Object.prototype.controls.deleteControl = new fabric.Control({\n            x: 0.5,\n            y: -0.5,\n            offsetY: -16,\n            offsetX: 16,\n            cursorStyle: 'pointer',\n            mouseUpHandler: deleteAction,\n            render: this.renderIcon(DeleteImageElement),\n        })\n    }\n\n    private static renderIcon(icon: CanvasImageSource) {\n        return (ctx: CanvasRenderingContext2D, left: number, top: number, styleOverride: any, fabricObject: fabric.Object) => {\n            const size = fabricObject.cornerSize;\n            if (size) {\n                ctx.save();\n                ctx.translate(left, top);\n                ctx.rotate(fabric.util.degreesToRadians(fabricObject.angle || 0));\n                ctx.drawImage(icon, -size / 2, -size / 2, size, size);\n                ctx.restore();\n            }\n        };\n    }\n}","import {IEvent, Transform} from \"fabric/fabric-impl\";\nimport { makeAutoObservable, reaction } from \"mobx\";\nimport { CanvasStore } from \"./canvasStore\";\nimport { RootStore } from \"./rootStore\";\nimport {fabric} from \"fabric\";\nimport {DeleteControl} from \"../models/object/DeleteControl\";\n\nexport enum SelectionEventType {\n    SELECTION_CLEARED = \"selection:cleared\",\n    SELECTION_CREATED = \"selection:created\",\n    SELECTION_UPDATED = \"selection:updated\",\n}\n\nexport class SelectionEventStore {\n    private readonly canvasStore: CanvasStore;\n    private readonly listeners: { [eventName: string]: (e: IEvent) => void }\n    private readonly observer: Set<(object: fabric.Object | undefined) => void> = new Set();\n\n    activeObject: fabric.Object | undefined;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        this.canvasStore = rootStore.canvasStore;\n        this.listeners = {\n            onSelected: this.onSelected.bind(this),\n            onCleared: this.onCleared.bind(this),\n        }\n        this.addEventListeners();\n        this.initControl();\n    }\n\n    private onSelected(e: IEvent) {\n        const { target } = e;\n        if (!target) {\n            return;\n        }\n\n        this.activeObject = target;\n    }\n\n    private onCleared() {\n        this.activeObject = undefined;\n    }\n\n    private addEventListeners() {\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CREATED, this.listeners.onSelected);\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_UPDATED, this.listeners.onSelected);\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CLEARED, this.listeners.onCleared);\n        reaction(\n            () => this.activeObject,\n            () => this.observer.forEach(callback => callback(this.activeObject)),\n        );\n    }\n\n    private initControl() {\n        DeleteControl.init(this.removeActiveObjects);\n    }\n\n    private removeActiveObjects(_eventData: MouseEvent, transform: Transform): boolean {\n        const canvas = transform.target.canvas;\n        if (!canvas) {\n            return false;\n        }\n\n        const activeObjects = canvas.getActiveObjects();\n        if (activeObjects.length === 0) {\n            return false;\n        }\n\n        canvas.getActiveObjects().forEach(object => canvas.remove(object));\n        canvas.discardActiveObject();\n        canvas.requestRenderAll();\n        return true;\n    }\n\n    subscribe(listener: (object: fabric.Object | undefined) => void) {\n        this.observer.add(listener);\n    }\n\n    unsubscribe(listener: (object: fabric.Object | undefined) => void) {\n        this.observer.delete(listener);\n    }\n}","import { IEvent } from \"fabric/fabric-impl\";\nimport { RootStore, Store } from \"./rootStore\";\n\nexport enum ObjectEventType {\n    OBJECT_SCALING = \"object:scaling\",\n    OBJECT_MODIFIED = \"object:modified\",\n}\n\nexport class ObjectEventStore implements Store {\n    private readonly listeners: any;\n    private readonly observer: Map<ObjectEventType, Set<(e: IEvent) => void>> = new Map();\n\n    constructor(private readonly rootStore: RootStore) {\n        this.listeners = {\n            onScaling: this.onScaling.bind(this),\n            onModified: this.onModified.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListener();\n    }\n\n    onDestroy() {\n        this.removeEventListener();\n    }\n\n    private addEventListener() {\n        const {canvas} = this.rootStore.canvasStore;\n        canvas.on(ObjectEventType.OBJECT_SCALING, this.listeners.onScaling);\n        canvas.on(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n    }\n\n    private removeEventListener() {\n        const {canvas} = this.rootStore.canvasStore;\n        canvas.off(ObjectEventType.OBJECT_SCALING, this.listeners.onScaling);\n        canvas.off(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n    }\n\n    private onScaling(e: IEvent) {\n        this.observer.get(ObjectEventType.OBJECT_SCALING)?.forEach(callbackFn => callbackFn(e));\n    }\n\n    private onModified(e: IEvent) {\n        this.observer.get(ObjectEventType.OBJECT_MODIFIED)?.forEach(callbackFn => callbackFn(e));\n    }\n\n    subscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\n        if (!this.observer.has(eventType)) {\n            this.observer.set(eventType, new Set());\n        }\n\n        this.observer.get(eventType)?.add(listener);\n    }\n\n    unsubscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\n        this.observer.get(eventType)?.delete(listener);\n    }\n}\n\nexport default ObjectEventStore;","import { makeAutoObservable } from \"mobx\";\nimport { ShapeType } from \"models/tools/Shape\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport { CanvasModeManager } from \"./canvasStore\";\nimport { MouseEventObject, MouseEventStore, MouseEventType } from \"./mouseEventStore\";\nimport { SelectionEventStore } from \"./selectionEventStore\";\nimport { RootStore, Store } from \"./rootStore\";\nimport {fabric} from \"fabric\";\nimport {ObjectStore} from \"./objectStore\";\n\nconst defaultStyles = {\n    shapeType: ShapeType.ELLIPSE,\n    fill: undefined,\n    strokeWidth: 3,\n    stroke: \"#000000\",\n}\n\nexport class ShapeStore implements Store, CanvasModeManager {\n    private static readonly MIN_OBJECT_SIZE = 30;\n    private readonly canvas: fabric.Canvas;\n    private readonly mouseEventStore: MouseEventStore;\n    private readonly selectionEventStore: SelectionEventStore;\n    private readonly objectStore: ObjectStore;\n    private readonly listeners: any;\n    private isDragMode = false;\n\n    item: fabric.Rect | fabric.Triangle | fabric.Ellipse | undefined;\n    fill: string | undefined = defaultStyles.fill;\n    shapeType = defaultStyles.shapeType;\n    strokeWidth = defaultStyles.strokeWidth;\n    stroke: string | undefined = defaultStyles.stroke;\n\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.SHAPE, this);\n        this.canvas = rootStore.canvasStore.canvas;\n        this.mouseEventStore = rootStore.mouseEventStore;\n        this.selectionEventStore = rootStore.selectionEventStore;\n        this.objectStore = rootStore.objectStore;\n        this.listeners = {\n            onMouseUp: this.onMouseUp.bind(this),\n            onMouseDown: this.onMouseDown.bind(this),\n            onMouseMove: this.onMouseMove.bind(this),\n            updateObject: this.updateObject.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListeners();\n        this.addReactions();\n    }\n\n    onDestroy() {\n        this.removeEventListener();\n        this.removeReactions();\n    }\n\n    onSessionStart() {\n        this.rootStore.canvasStore.setAllCursor(\"crosshair\");\n    }\n\n    onSessionEnd() {\n        //\n    }\n\n    setShapeType(shapeType: ShapeType) {\n        this.shapeType = shapeType;\n    }\n\n    setFill(fill: string | undefined) {\n        this.fill = fill;\n        this.objectStore.setFill(fill);\n    }\n\n    setStroke(stroke: string | undefined) {\n        this.stroke = stroke;\n        this.objectStore.setStroke(stroke);\n    }\n\n    setStrokeWidth(strokeWidth: number) {\n        this.strokeWidth = strokeWidth;\n        this.objectStore.setStrokeWidth(strokeWidth);\n    }\n\n    private addReactions() {\n        this.selectionEventStore.subscribe(this.listeners.updateObject);\n    }\n\n    private removeReactions() {\n        this.selectionEventStore.unsubscribe(this.listeners.updateObject);\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (this.objectStore.isShape(object)) {\n            this.item = object;\n            this.updateShapeStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private updateShapeStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            stroke,\n            strokeWidth,\n            fill,\n        } = this.item;\n\n        this.fill = typeof fill === \"string\" ? fill : undefined;\n        this.stroke = stroke;\n        this.strokeWidth = strokeWidth || defaultStyles.strokeWidth;\n    }\n\n    private addEventListeners() {\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n    }\n\n    private removeEventListener() {\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n    }\n\n    private isShapeTool() {\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.SHAPE;\n    }\n\n    private onMouseDown(e: MouseEventObject) {\n        if (!this.isShapeTool()) {\n            return;\n        }\n\n        this.isDragMode = true;\n        this.item = this.shapeType.getShape({\n            left: e.startCursorPosition.x,\n            top: e.startCursorPosition.y,\n            stroke: this.stroke,\n            strokeWidth: this.strokeWidth,\n            fill: this.fill,\n            selectable: false,\n            hoverCursor: \"default\",\n            strokeUniform: true,\n        });\n\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: 0,\n                height: 0,\n            })\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            (this.item as fabric.Ellipse).set({\n                rx: 0,\n                ry: 0,\n            })\n        }\n\n        this.rootStore.canvasStore.canvas.add(this.item);\n    }\n\n    private onMouseMove(e: MouseEventObject) {\n        if (!this.isShapeTool() || !this.isDragMode || !this.item) {\n            return;\n        }\n\n        if (e.currentCursorPosition.x < e.startCursorPosition.x) {\n            this.item.set({ left: Math.abs(e.currentCursorPosition.x) });\n        }\n\n        if (e.currentCursorPosition.y < e.startCursorPosition.y) {\n            this.item.set({ top: Math.abs(e.currentCursorPosition.y) });\n        }\n\n        this.item.set({ flipX: e.currentCursorPosition.x < e.startCursorPosition.x });\n        this.item.set({ flipY: e.currentCursorPosition.y < e.startCursorPosition.y });\n\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x),\n                height: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y),\n            });\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            (this.item as fabric.Ellipse).set({\n                rx: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x) / 2,\n                ry: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y) / 2,\n            })\n        }\n\n        this.rootStore.canvasStore.canvas.renderAll();\n    }\n\n    private onMouseUp(e: MouseEventObject) {\n        if (!this.isShapeTool() || !this.item) {\n            return;\n        }\n\n        this.isDragMode = false;\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.width || ShapeStore.MIN_OBJECT_SIZE),\n                height: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.height || ShapeStore.MIN_OBJECT_SIZE),\n            }).setCoords();\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            const circle = this.item as fabric.Ellipse;\n            circle.set({\n                rx: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.rx || ShapeStore.MIN_OBJECT_SIZE / 2),\n                ry: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.ry || ShapeStore.MIN_OBJECT_SIZE / 2),\n            }).setCoords();\n        }\n\n        const canvasStore = this.rootStore.canvasStore;\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\n        canvasStore.canvas.setActiveObject(this.item);\n        canvasStore.canvas.renderAll();\n\n        this.item = undefined;\n    }\n}","import { makeAutoObservable } from \"mobx\";\nimport { RootStore } from \"./rootStore\";\n\nexport class UIStore {\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);;\n    }\n}","import {MouseEventObject, MouseEventStore, MouseEventType} from \"./mouseEventStore\";\nimport {RootStore, Store} from \"./rootStore\";\nimport {fabric} from \"fabric\";\nimport {ToolTypes} from \"models/tools/ToolTypes\";\nimport {ObjectEventStore, ObjectEventType} from \"./objectEventStore\";\nimport {IEvent} from \"fabric/fabric-impl\";\nimport {SelectionEventStore} from \"./selectionEventStore\";\nimport {makeAutoObservable} from \"mobx\";\nimport {FontFaces, fontSizes, FontStyle, FontWeight, TextAlign} from \"models/tools/Text\";\nimport WebFont from \"webfontloader\";\nimport {CanvasModeManager} from \"./canvasStore\";\nimport {ObjectStore} from \"./objectStore\";\n\nconst defaultStyles = {\n    FONT_SIZE: fontSizes[fontSizes.length / 2],\n    FILL: \"#000000\",\n    FONT_FAMILY: FontFaces.TIMES_NEW_ROMAN.value,\n    TEXT_ALIGN: TextAlign.LEFT,\n    FONT_STYLE: FontStyle.NORMAL,\n    FONT_WEIGHT: FontWeight.NORMAL,\n    UNDERLINE: false,\n}\n\nexport class TextStore implements Store, CanvasModeManager {\n    private readonly selectionEventStore: SelectionEventStore;\n    private readonly mouseEventStore: MouseEventStore;\n    private readonly objectEventStore: ObjectEventStore;\n    private readonly objectStore: ObjectStore;\n    private readonly canvas: fabric.Canvas;\n    private readonly listeners: any;\n    private fontStyle = defaultStyles.FONT_STYLE;\n    private fontWeight: string = defaultStyles.FONT_WEIGHT;\n    private autoRenderId: NodeJS.Timeout | undefined;\n\n    fontSize = defaultStyles.FONT_SIZE;\n    fill = defaultStyles.FILL;\n    fontFamily = defaultStyles.FONT_FAMILY;\n    textAlign = defaultStyles.TEXT_ALIGN;\n    underline = defaultStyles.UNDERLINE;\n    item: fabric.IText | undefined;\n\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.TEXT, this);\n        this.loadFont();\n        this.selectionEventStore = rootStore.selectionEventStore;\n        this.mouseEventStore = rootStore.mouseEventStore;\n        this.objectEventStore = rootStore.objectEventStore;\n        this.objectStore = rootStore.objectStore;\n        this.canvas = rootStore.canvasStore.canvas;\n        this.listeners = {\n            onMouseUp: this.onMouseUp.bind(this),\n            onModified: this.onModified.bind(this),\n            updateObject: this.updateObject.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListener();\n        this.addFontAutoRender();\n    }\n\n    onDestroy() {\n        this.removeEventListener();\n        this.removeFontAutoRender();\n    }\n\n    onSessionStart() {\n        this.rootStore.canvasStore.setAllCursor(\"text\");\n    }\n\n    onSessionEnd() {\n        //\n    }\n\n    setFontSize(fontSize: number) {\n        this.fontSize = fontSize;\n        if (this.item) {\n            this.item.set({fontSize: fontSize});\n            this.canvas.renderAll();\n        }\n    }\n\n    setFill(fill: string) {\n        this.fill = fill;\n        this.objectStore.setFill(fill);\n    }\n\n    setFontFamily(fontFamily: string) {\n        this.fontFamily = fontFamily;\n        this.item?.set({fontFamily: fontFamily});\n    }\n\n    setTextAlign(textAlign: string) {\n        this.textAlign = textAlign;\n        this.item?.set({textAlign: textAlign});\n    }\n\n    setUnderline(underline: boolean) {\n        this.underline = underline;\n        this.item?.set({underline: underline});\n    }\n\n    setBold(bold: boolean) {\n        const changedValue = bold ? FontWeight.BOLD : FontWeight.NORMAL;\n        this.fontWeight = changedValue;\n        this.item?.set({fontWeight: changedValue});\n    }\n\n    isBold() {\n        return this.fontWeight === FontWeight.BOLD;\n    }\n\n    setItalic(italic: boolean) {\n        const changedValue = italic ? \"italic\" : \"normal\";\n        this.fontStyle = changedValue;\n        this.item?.set({fontStyle: changedValue});\n    }\n\n    isItalic() {\n        return this.fontStyle === \"italic\";\n    }\n\n    private addEventListener() {\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.objectEventStore.subscribe(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n        this.selectionEventStore.subscribe(this.listeners.updateObject);\n    }\n\n    private removeEventListener() {\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.objectEventStore.unsubscribe(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n        this.selectionEventStore.unsubscribe(this.listeners.updateObject);\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (object && this.objectStore.isText(object)) {\n            this.item = object as fabric.IText;\n            this.updateTextStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private updateTextStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            fontSize,\n            fill,\n            fontFamily,\n            textAlign,\n            fontStyle,\n            fontWeight,\n            underline,\n        } = this.item;\n\n        this.fontSize = fontSize || defaultStyles.FONT_SIZE;\n        this.fill = typeof fill === \"string\" ? fill : defaultStyles.FILL;\n        this.fontFamily = fontFamily || defaultStyles.FONT_FAMILY;\n        this.textAlign = textAlign || defaultStyles.TEXT_ALIGN;\n        this.fontStyle = fontStyle === FontStyle.NORMAL || fontStyle === FontStyle.ITALIC ? fontStyle : defaultStyles.FONT_STYLE;\n        this.fontWeight = typeof fontWeight === \"string\" ? fontWeight : defaultStyles.FONT_WEIGHT;\n        this.underline = !!underline;\n    }\n\n    private onMouseUp(e: MouseEventObject) {\n        if (!this.isTextTool()) {\n            return;\n        }\n\n        this.item = new fabric.IText(\"텍스트를 입력해주세요\", {\n            top: e.currentCursorPosition.y,\n            left: e.currentCursorPosition.x,\n            fontSize: this.fontSize,\n            fill: this.fill,\n            fontFamily: this.fontFamily,\n            textAlign: this.textAlign,\n            fontStyle: this.fontStyle,\n            fontWeight: this.fontWeight,\n            underline: this.underline,\n            lockUniScaling: true,\n        });\n\n        this.item.setControlVisible(\"mt\", false);\n        this.item.setControlVisible(\"mb\", false);\n        this.item.setControlVisible(\"ml\", false);\n        this.item.setControlVisible(\"mr\", false);\n\n        const canvasStore = this.rootStore.canvasStore;\n        canvasStore.canvas.add(this.item);\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\n        canvasStore.canvas.setActiveObject(this.item);\n\n        this.item.selectAll();\n        this.item.enterEditing();\n    }\n\n    private onModified(e: IEvent) {\n        const {target} = e;\n        if (!target || !this.objectStore.isText(target)) {\n            return;\n        }\n\n        const text = target as fabric.IText;\n        const fontSize = parseInt(((text.fontSize || defaultStyles.FONT_SIZE) * (text.scaleX || 1)).toFixed(0), 10);\n        text.set({\n            scaleX: 1,\n            scaleY: 1,\n        });\n        this.setFontSize(fontSize);\n    }\n\n    private isTextTool() {\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.TEXT;\n    }\n\n    private loadFont() {\n        WebFont.load({\n            google: {\n                families: FontFaces.getGoogleFonts().map(font => font.value),\n            },\n        })\n    }\n\n    private addFontAutoRender() {\n        this.autoRenderId = setInterval(() => {\n            this.canvas.getActiveObjects()\n                .filter(object => this.objectStore.isText(object))\n                .forEach((object) => {\n                    const textObject = object as fabric.IText;\n                    textObject.initDimensions();\n                    textObject.dirty = true;\n                });\n            fabric.util.clearFabricFontCache();\n            this.canvas.renderAll();\n        }, 1000);\n    }\n\n    private removeFontAutoRender() {\n        if (this.autoRenderId) {\n            clearInterval(this.autoRenderId);\n        }\n    }\n}","import { ToolTypes } from \"models/tools/ToolTypes\";\nimport { CanvasModeManager } from \"./canvasStore\";\nimport { RootStore } from \"./rootStore\";\n\nexport class SelectStore implements CanvasModeManager {\n    constructor(private readonly rootStore: RootStore) {\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.SELECT, this);\n    }\n\n    onSessionStart() {\n        this.rootStore.canvasStore.setSelectable(true);\n        this.rootStore.canvasStore.setHoverCursor(\"move\");\n    }\n\n    onSessionEnd() {\n        //\n    }\n}","import {RootStore, Store} from \"./rootStore\";\nimport {SelectionEventStore} from \"./selectionEventStore\";\nimport {makeAutoObservable} from \"mobx\";\nimport {fabric} from \"fabric\";\nimport {ShapeType} from \"../models/tools/Shape\";\n\nexport class ObjectStore implements Store {\n    private readonly selectionEventStore: SelectionEventStore;\n    private readonly listeners: any;\n\n    public activeObject: fabric.Object | undefined;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        this.selectionEventStore = rootStore.selectionEventStore;\n        this.listeners = {\n            updateObject: this.updateObject.bind(this),\n        }\n    }\n\n    onInit(): void {\n        this.addReactions();\n    }\n\n    onDestroy(): void {\n        this.removeReactions();\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        this.activeObject = object;\n    }\n\n    private addReactions() {\n        this.selectionEventStore.subscribe(this.listeners.updateObject);\n    }\n\n    private removeReactions() {\n        this.selectionEventStore.unsubscribe(this.listeners.updateObject);\n    }\n\n    public isRect(object = this.activeObject) {\n        return object?.isType(ShapeType.RECT.value);\n    }\n\n    public isEllipse(object = this.activeObject) {\n        return object?.isType(ShapeType.ELLIPSE.value);\n    }\n\n    public isTriangle(object = this.activeObject) {\n        return object?.isType(ShapeType.TRIANGLE.value);\n    }\n\n    public isShape(object = this.activeObject) {\n        return this.isRect(object) || this.isEllipse(object) || this.isTriangle(object);\n    }\n\n    public isPath(object = this.activeObject) {\n        return object?.isType(\"path\");\n    }\n\n    public isText(object = this.activeObject) {\n        return object?.isType(\"i-text\");\n    }\n\n    public isImage(object = this.activeObject) {\n        return object?.isType(\"image\");\n    }\n\n    public isActiveSelection(object = this.activeObject) {\n        return object?.isType(\"activeSelection\");\n    }\n\n    public isGroup(object = this.activeObject) {\n        return object?.isType(\"group\");\n    }\n\n    public getObjectTypeName(object = this.activeObject): string {\n        console.log(object?.type);\n        if (this.isRect(object)) {\n            return ShapeType.RECT.display;\n        } else if (this.isEllipse(object)) {\n            return ShapeType.ELLIPSE.display;\n        } else if (this.isTriangle(object)) {\n            return ShapeType.TRIANGLE.display;\n        } else if (this.isPath(object)) {\n            return \"패스\";\n        } else if (this.isText(object)) {\n            return \"텍스트\";\n        } else if (this.isImage(object)) {\n            return \"이미지\";\n        } else if (this.isGroup(object)) {\n            return \"그룹\"\n        } else {\n            return \"오브젝트\";\n        }\n    }\n\n    public setFill(value: string | undefined, object = this.activeObject) {\n        this.setStyles(\"fill\", value, object);\n    }\n\n    public setStroke(value: string | undefined, object = this.activeObject) {\n        this.setStyles(\"stroke\", value, object);\n    }\n\n    public setStrokeWidth(value: number | undefined, object = this.activeObject) {\n        this.setStyles(\"strokeWidth\", value, object);\n    }\n\n    public setScaleX(value: number, object = this.activeObject) {\n        this.setStyles(\"scaleX\", value, object);\n    }\n\n    public setScaleY(value: number, object = this.activeObject) {\n        this.setStyles(\"scaleY\", value, object);\n    }\n\n    private setStyles(key: keyof fabric.Object, value: any, object = this.activeObject) {\n        object?.set(key, value);\n    }\n}","import {RootStore} from \"./rootStore\";\nimport {CanvasStore} from \"./canvasStore\";\nimport {makeAutoObservable} from \"mobx\";\nimport {fabric} from \"fabric\";\nimport {ObjectStore} from \"./objectStore\";\n\nexport class ImageStore {\n    public readonly uploadedImages: {name: string, dataUrl: string}[] = [];\n    private readonly canvasStore: CanvasStore;\n    private readonly objectStore: ObjectStore;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        this.canvasStore = rootStore.canvasStore;\n        this.objectStore = rootStore.objectStore;\n    }\n\n    public addImage(dataUrl: string): void {\n        fabric.Image.fromURL(dataUrl, (img) => {\n            if (!img.width || !img.height) {\n                return;\n            }\n\n            if (img.width > this.canvasStore.width) {\n                const scale = this.canvasStore.width / img.width * (3/4);\n                this.objectStore.setScaleX(scale, img);\n                this.objectStore.setScaleY(scale, img);\n            } else if (img.height > this.canvasStore.height) {\n                const scale = this.canvasStore.height / img.height * (3/4);\n                this.objectStore.setScaleX(scale, img);\n                this.objectStore.setScaleY(scale, img);\n            }\n\n            this.canvasStore.canvas.add(img);\n        });\n    }\n\n    public upload(files: File[]) {\n        files.forEach(async (file) => {\n            const dataUrl = await this.readFileAsync(file);\n            if (typeof dataUrl === \"string\") {\n                this.uploadedImages.push({\n                    name: file.name,\n                    dataUrl: dataUrl,\n                });\n            }\n        });\n    }\n\n    private readFileAsync(file: File): Promise<string | ArrayBuffer | null> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = () => reject();\n            reader.readAsDataURL(file);\n        })\n    }\n}","import { fabric } from \"fabric\";\nimport { BrushStore } from \"./brushStore\";\nimport { CanvasStore } from \"./canvasStore\";\nimport { MouseEventStore } from \"./mouseEventStore\";\nimport { SelectionEventStore } from \"./selectionEventStore\";\nimport { ObjectEventStore } from \"./objectEventStore\";\nimport { ShapeStore } from \"./shapeStore\";\nimport { UIStore } from \"./UIStore\";\nimport { TextStore } from \"./textStore\";\nimport { SelectStore } from \"./selectStore\";\nimport {ObjectStore} from \"./objectStore\";\nimport {ImageStore} from \"./imageStore\";\n\nexport interface Store {\n    onInit: () => void;\n    onDestroy: () => void;\n}\n\nexport class RootStore implements Store {\n    private readonly canvasElement: HTMLCanvasElement;\n    canvasStore: CanvasStore;\n    selectionEventStore: SelectionEventStore;\n    objectEventStore: ObjectEventStore;\n    mouseEventStore: MouseEventStore;\n\n    objectStore: ObjectStore;\n    brushStore: BrushStore;\n    shapeStore: ShapeStore;\n    textStore: TextStore;\n    imageStore: ImageStore;\n    selectStore: SelectStore;\n    UIStore: UIStore;\n\n    constructor() {\n        this.canvasElement = document.createElement(\"canvas\");\n        document.body.append(this.canvasElement);\n\n        this.canvasStore = new CanvasStore(this, new fabric.Canvas(this.canvasElement));\n        this.selectionEventStore = new SelectionEventStore(this);\n        this.objectEventStore = new ObjectEventStore(this);\n        this.mouseEventStore = new MouseEventStore(this);\n\n        this.objectStore = new ObjectStore(this);\n        this.brushStore = new BrushStore(this);\n        this.shapeStore = new ShapeStore(this);\n        this.textStore = new TextStore(this);\n        this.imageStore = new ImageStore(this);\n        this.selectStore = new SelectStore(this);\n        this.UIStore = new UIStore(this);\n    }\n\n    onInit() {\n        Object.values(this).forEach(obj => {\n            if (obj.onInit) {\n                obj.onInit();\n            }\n        });\n    }\n\n    onDestroy() {\n        Object.values(this).forEach(obj => {\n            if (obj.onDestory) {\n                obj.onDestory();\n            }\n        });\n    }\n\n    init(container: HTMLElement): void {\n        container.append(this.canvasElement.parentElement!);\n    }\n}\n\nexport default new RootStore();","import {Canvas} from 'templates/canvas';\nimport React from 'react';\nimport {StoreProvider} from \"./contexts/storeContext\";\nimport rootStore from \"./stores/rootStore\";\nimport {CssBaseline} from \"@material-ui/core\";\n\nconst App = () => {\n    React.useEffect(() => {\n        document.title = \"캔버스\";\n    }, []);\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <StoreProvider value={rootStore}>\n                <Canvas/>\n            </StoreProvider>\n        </React.Fragment>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n    <App/>,\n    document.getElementById('root')\n);"],"sourceRoot":""}