{"version":3,"sources":["templates/layout/Layout.tsx","models/color/CommonColor.tsx","components/tools/ToolButton.tsx","contexts/storeContext.ts","hooks/useStores.tsx","models/tools/ToolTypes.ts","utils/FileUtils.ts","components/tools/MenuToolButton.tsx","components/tools/ToolBox.tsx","models/tools/Brush.ts","models/tools/Text.ts","components/input/Range.tsx","components/input/ColorPicker.tsx","components/input/ColorPalette.tsx","hooks/usePrevious.tsx","components/input/ColorSelect.tsx","components/input/AlignButton.tsx","components/input/BoldButton.tsx","components/input/ItalicButton.tsx","components/input/UnderlineButton.tsx","components/input/TextStyleButton.tsx","components/propbox/PropBoxLayout.tsx","components/propbox/PropBoxItem.tsx","components/propbox/BrushPropBox.tsx","models/tools/Shape.ts","components/propbox/ShapePropBox.tsx","stores/mouseEventStore.ts","components/propbox/TextPropBox.tsx","components/propbox/CanvasPropBox.tsx","components/propbox/SelectPropBox.tsx","components/propbox/PropBox.tsx","templates/canvas/Canvas.tsx","stores/brushStore.ts","stores/canvasStore.ts","components/element/DeleteImageElement.tsx","models/object/DeleteControl.ts","stores/objectManagerStore.ts","stores/objectEventStore.ts","stores/shapeStore.ts","stores/UIStore.ts","stores/textStore.ts","stores/selectStore.ts","stores/rootStore.ts","App.tsx","index.tsx"],"names":["useStyles","makeStyles","progressWrapper","display","justifyContent","alignItems","Layout","loading","children","classes","Fragment","CssBaseline","className","CircularProgress","CommonColor","theme","button","cursor","color","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","textAlign","caption","fontSize","selected","background","ToolButton","icon","text","onClick","clsx","StoreContext","React","createContext","StoreProvider","Provider","useStores","useContext","ToolTypes","value","_values","push","this","values","find","v","SELECT","BRUSH","SHAPE","TEXT","CANVAS","MimeType","FileUtils","fileName","blob","Blob","type","objectURL","window","URL","createObjectURL","write","dataURL","a","document","createElement","download","href","click","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","backgroundColor","palette","primary","main","common","white","MenuItem","MenuToolButton","useState","anchorEl","setAnchorEl","canvasStore","inputRef","useRef","handleClose","onChange","e","target","files","item","read","then","jsonString","canvas","loadFromJSON","catch","console","error","ref","style","accept","event","currentTarget","keepMounted","open","Boolean","onClose","current","ListItemIcon","ListItemText","writeText","JSON","stringify","toJSON","fullQuality","toDataURL","appBarColor","left","center","flex","right","ToolBox","observer","AppBar","colorDefault","Toolbar","variant","setCanvasMode","canvasMode","BrushType","PENCIL","fabric","PencilBrush","CIRCLE","CircleBrush","SPRAY","SprayBrush","FontFaceType","label","Range","prefix","min","max","Typography","Input","margin","inputProps","endAdornment","InputAdornment","position","Slider","newValue","colorBox","width","height","borderStyle","borderColor","disabled","ColorPicker","Popover","disableAlpha","onChangeComplete","ColorPalette","Box","mb","usePrevious","useEffect","ColorSelect","previousColor","selectedValue","setSelectedValue","mr","flexBasis","rgb","r","g","b","hex","FormControl","fullWidth","Select","undefined","fontSizes","TextAlign","FontWeight","FontStyle","FontFaces","filter","font","GOOGLE","TIMES_NEW_ROMAN","DEFAULT","NOTO_SANS_KR","NANUM_GOTHIC","NANUM_PEN_SCRIPT","SONG_MYUNG","alignBox","alignButton","borderRadius","AlignButton","Button","BoldButton","bold","toggle","faBold","size","ItalicButton","italic","faItalic","UnderlineButton","underline","faUnderline","marginRight","TextStyleButton","toggleBold","toggleItalic","toggleUnderline","flexDirection","title","marginBottom","propBoxWrapper","PropBoxLayout","objectManagerStore","activeObject","getObjectTypeName","PropBoxItem","other","padding","BrushPropBox","brushStore","brushType","setBrushType","faPencilAlt","faSprayCan","faCircle","strokeWidth","setStrokeWidth","stroke","setStroke","ShapeType","options","RECT","Rect","ELLIPSE","Ellipse","TRIANGLE","Triangle","MouseEventType","propBox","ShapePropBox","shapeStore","shapeType","setShapeType","cx","cy","fill","points","setFill","TextPropBox","textStore","fontFamily","setFontFamily","map","parseInt","setFontSize","isBold","isItalic","setBold","setItalic","setUnderline","setTextAlign","CanvasPropBox","setWidth","setHeight","InputLabel","htmlFor","id","onBlur","setBackgroundColor","SelectPropBox","PropBox","selectedTool","isPath","isShape","isText","flexBox","contents","canvasWrapper","Canvas","rootStore","canvasRef","init","onInit","onDestroy","defaultStyles","BrushStore","listeners","objectManager","makeAutoObservable","registerCanvasModeManager","updateObject","bind","addReactions","removeReactions","isDrawingMode","setFreeDrawingBrush","set","freeDrawingBrush","renderAll","getBrush","object","isBrush","updatePathStyles","styles","setPathStyles","isType","subscribe","unsubscribe","CanvasStore","canvasModeManagers","Map","dispose","mode","manager","previousMode","discardActiveObject","setAllCursor","setSelectable","get","onSessionEnd","onSessionStart","selectable","selection","getObjects","forEach","obj","defaultCursor","hoverCursor","setDefaultCursor","setHoverCursor","MouseEventStore","startCursorPosition","x","y","currentCursorPosition","onMouseDown","onMouseUp","onMouseMove","addEventListeners","removeEventListeners","eventType","listener","has","fn","getCursorPosition","MOUSE_DOWN","callback","MOUSE_MOVE","MOUSE_UP","on","off","getPointer","DeleteImageElement","src","SelectionEventType","DeleteControl","deleteAction","Object","prototype","controls","deleteControl","Control","offsetY","offsetX","cursorStyle","mouseUpHandler","render","renderIcon","ctx","top","styleOverride","fabricObject","cornerSize","save","translate","rotate","util","degreesToRadians","angle","drawImage","restore","ObjectEventType","ObjectManagerStore","Set","onSelected","onCleared","initControl","SELECTION_CREATED","SELECTION_UPDATED","SELECTION_CLEARED","reaction","removeActiveObjects","_eventData","transform","getActiveObjects","length","remove","requestRenderAll","add","delete","isRect","isEllipse","isTriangle","isGroup","ObjectEventStore","onScaling","onModified","addEventListener","removeEventListener","OBJECT_SCALING","OBJECT_MODIFIED","callbackFn","ShapeStore","mouseEventStore","isDragMode","updateShapeStyles","setShapeStyles","isShapeTool","getShape","strokeUniform","rx","ry","Math","abs","flipX","flipY","MIN_OBJECT_SIZE","setCoords","circle","setActiveObject","UIStore","FONT_SIZE","FILL","FONT_FAMILY","TEXT_ALIGN","FONT_STYLE","FONT_WEIGHT","UNDERLINE","TextStore","objectEventStore","fontStyle","fontWeight","autoRenderId","loadFont","addFontAutoRender","removeFontAutoRender","changedValue","updateTextStyles","setTextStyles","isTextTool","IText","lockUniScaling","setControlVisible","selectAll","enterEditing","scaleX","toFixed","scaleY","WebFont","load","google","families","getGoogleFonts","setInterval","textObject","initDimensions","dirty","clearFabricFontCache","clearInterval","SelectStore","canvasElement","selectStore","body","append","onDestory","container","parentElement","App","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.980a31d1.chunk.js","sourcesContent":["import React from \"react\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport {CircularProgress} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    progressWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n    }\r\n}))\r\n\r\nconst Layout = ({ loading, children }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <div>\r\n                {loading ? (\r\n                    <div className={classes.progressWrapper}><CircularProgress /></div>\r\n                ) : children}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    loading?: boolean;\r\n    children: React.ReactElement | React.ReactElement[];\r\n}\r\n\r\nexport default Layout;","export const CommonColor = {\r\n    PRIMARY: \"#ac76ff\",\r\n    BACKGROUND_GRADIENT: \"linear-gradient(90deg, rgba(172,118,255,1) 0%, rgba(91,91,255,1) 100%)\",\r\n    BACKGROUND_GRADIENT_HOVER: \"linear-gradient(90deg, rgba(172,118,255,.4) 0%, rgba(91,91,255,.4) 100%)\",\r\n}","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport clsx from \"clsx\";\r\nimport {CommonColor} from \"../../models/color/CommonColor\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    button: {\r\n        display: \"inline-block\",\r\n        cursor: \"pointer\",\r\n        color: \"#fff\",\r\n        paddingTop: theme.spacing(0.5),\r\n        paddingBottom: theme.spacing(0.5),\r\n        paddingRight: theme.spacing(3),\r\n        paddingLeft: theme.spacing(3),\r\n        textAlign: \"center\",\r\n    },\r\n    caption: {\r\n        fontSize: \"0.70rem\",\r\n    },\r\n    selected: {\r\n        background: CommonColor.BACKGROUND_GRADIENT,\r\n    }\r\n}));\r\n\r\nconst ToolButton = ({icon, text, onClick, selected}: Props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={clsx(classes.button, {\r\n            [classes.selected]: selected,\r\n        })} onClick={onClick}>\r\n            {icon}\r\n            <div className={classes.caption}>{text}</div>\r\n        </div>\r\n    )\r\n}\r\n\r\ninterface Props {\r\n    icon: any;\r\n    text: string;\r\n    onClick: (event: React.MouseEvent<HTMLElement>) => void;\r\n    selected?: boolean;\r\n}\r\n\r\nexport default ToolButton;","import React from \"react\";\r\nimport { RootStore } from \"stores/rootStore\";\r\n\r\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\r\nexport const StoreProvider = StoreContext.Provider;","import React from \"react\";\r\nimport {RootStore} from \"../stores/rootStore\";\r\nimport {StoreContext} from \"../contexts/storeContext\";\r\n\r\nexport const useStores = (): RootStore => React.useContext(StoreContext);","export class ToolTypes {\r\n    private static readonly _values: ToolTypes[] = [];\r\n    public static readonly SELECT = new ToolTypes(\"select\", \"선택\");\r\n    public static readonly BRUSH = new ToolTypes(\"brush\", \"브러쉬\");\r\n    public static readonly SHAPE = new ToolTypes(\"shape\", \"셰이프\");\r\n    public static readonly TEXT = new ToolTypes(\"text\", \"텍스트\");\r\n    public static readonly CANVAS = new ToolTypes(\"canvas\", \"캔버스\");\r\n\r\n    constructor(\r\n        public readonly value: string,\r\n        public readonly display: string,\r\n    ) {\r\n        ToolTypes._values.push(this);\r\n    }\r\n\r\n    public static values() {\r\n        return this._values;\r\n    }\r\n\r\n    public static valueOf(value: string) {\r\n        return this.values().find(v => v.value === value);\r\n    }\r\n}","enum MimeType {\r\n    TEXT = \"text/plain\",\r\n}\r\n\r\nexport class FileUtils {\r\n    public static writeText(fileName: string, text: string) {\r\n        const blob = new Blob([text], { type: MimeType.TEXT });\r\n        const objectURL = window.URL.createObjectURL(blob);\r\n        this.write(fileName, objectURL);\r\n    }\r\n\r\n    public static write(fileName: string, dataURL: string) {\r\n        const a = document.createElement('a');\r\n        a.download = fileName;\r\n        a.href = dataURL;\r\n        a.click();\r\n    }\r\n\r\n    public static async read(file: File): Promise<string> {\r\n        return new Promise((resolve, reject) => {\r\n            const reader = new FileReader();\r\n            reader.onload = () => resolve(reader.result as string);\r\n            reader.onerror = () => reject();\r\n            reader.readAsText(file);\r\n        });\r\n    }\r\n}","import React from \"react\";\r\nimport {withStyles} from \"@material-ui/core/styles\";\r\nimport Menu, {MenuProps} from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ToolButton from \"./ToolButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\nimport {FileUtils} from \"../../utils/FileUtils\";\r\n\r\nconst StyledMenu = withStyles({\r\n    paper: {\r\n        border: \"1px solid #d3d4d5\",\r\n    },\r\n})((props: MenuProps) => (\r\n    <Menu\r\n        elevation={0}\r\n        getContentAnchorEl={null}\r\n        anchorOrigin={{\r\n            vertical: \"bottom\",\r\n            horizontal: \"center\",\r\n        }}\r\n        transformOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"center\",\r\n        }}\r\n        {...props}\r\n    />\r\n));\r\n\r\nconst StyledMenuItem = withStyles((theme) => ({\r\n    root: {\r\n        \"&:focus\": {\r\n            backgroundColor: theme.palette.primary.main,\r\n            \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\r\n                color: theme.palette.common.white,\r\n            },\r\n        },\r\n    },\r\n}))(MenuItem);\r\n\r\nexport default function MenuToolButton() {\r\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n    const {canvasStore} = useStores();\r\n    const inputRef = React.useRef<HTMLInputElement>(null);\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    const handleFileOpen = () => {\r\n        inputRef.current?.click();\r\n        handleClose();\r\n    }\r\n\r\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const file = e.target.files?.item(0);\r\n        e.target.value = \"\";\r\n\r\n        if (!!file) {\r\n            FileUtils.read(file).then(jsonString => {\r\n                canvasStore.canvas.loadFromJSON(jsonString, () => {\r\n                    //\r\n                })\r\n            }).catch(e => console.error(e));\r\n        }\r\n    }\r\n\r\n    const handleSave = () => {\r\n        FileUtils.writeText(\"canvas.json\", JSON.stringify(canvasStore.canvas.toJSON()));\r\n        handleClose();\r\n    }\r\n\r\n    const handleImageSave = () => {\r\n        const fullQuality = canvasStore.canvas.toDataURL();\r\n        FileUtils.write(\"canvas.png\", fullQuality);\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type={\"file\"}\r\n                onChange={handleFileChange}\r\n                ref={inputRef}\r\n                style={{display: \"none\"}}\r\n                accept=\"application/json\"\r\n            />\r\n            <ToolButton icon={<MenuIcon/>} text={\"메뉴\"} onClick={handleClick}/>\r\n            <StyledMenu\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n            >\r\n                <StyledMenuItem onClick={handleFileOpen}>\r\n                    <ListItemIcon>\r\n                        <DescriptionIcon fontSize=\"small\"/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"열기\"/>\r\n                </StyledMenuItem>\r\n                <StyledMenuItem onClick={handleSave}>\r\n                    <ListItemIcon>\r\n                        <SaveIcon fontSize=\"small\"/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"저장\"/>\r\n                </StyledMenuItem>\r\n                <StyledMenuItem onClick={handleImageSave}>\r\n                    <ListItemIcon>\r\n                        <SaveAltIcon fontSize=\"small\"/>\r\n                    </ListItemIcon>\r\n                    <ListItemText primary=\"이미지로 저장\"/>\r\n                </StyledMenuItem>\r\n            </StyledMenu>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport {AppBar, Toolbar} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\nimport ToolButton from \"./ToolButton\";\r\nimport MouseIcon from '@material-ui/icons/Mouse';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport BrushIcon from \"@material-ui/icons/Brush\";\r\nimport {ToolTypes} from \"../../models/tools/ToolTypes\";\r\nimport MenuToolButton from \"./MenuToolButton\";\r\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\r\nimport PhotoSizeSelectSmallIcon from \"@material-ui/icons/PhotoSizeSelectSmall\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    appBarColor: {\r\n        backgroundColor: \"rgba(30,30,30,0.95)\",\r\n    },\r\n    left: {\r\n        justifyContent: \"flex-start\",\r\n    },\r\n    center: {\r\n        display: \"flex\",\r\n        flex: 1,\r\n        justifyContent: \"center\",\r\n    },\r\n    right: {\r\n        justifyContent: \"flex-end\",\r\n    }\r\n}));\r\n\r\nconst ToolBox = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore} = useStores();\r\n\r\n    return (\r\n        <AppBar\r\n            classes={{\r\n                colorDefault: classes.appBarColor,\r\n            }}\r\n            color={\"default\"}\r\n            elevation={0}\r\n        >\r\n            <Toolbar variant={\"dense\"}>\r\n                <div className={classes.left}>\r\n                    <MenuToolButton/>\r\n                </div>\r\n                <div className={classes.center}>\r\n                    <ToolButton\r\n                        icon={<MouseIcon/>}\r\n                        text={ToolTypes.SELECT.display}\r\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SELECT)}\r\n                        selected={canvasStore.canvasMode === ToolTypes.SELECT}\r\n                    />\r\n                    <ToolButton\r\n                        icon={<BrushIcon/>}\r\n                        text={ToolTypes.BRUSH.display}\r\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.BRUSH)}\r\n                        selected={canvasStore.canvasMode === ToolTypes.BRUSH}\r\n                    />\r\n                    <ToolButton\r\n                        icon={<DashboardIcon/>}\r\n                        text={ToolTypes.SHAPE.display}\r\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SHAPE)}\r\n                        selected={canvasStore.canvasMode === ToolTypes.SHAPE}\r\n                    />\r\n                    <ToolButton\r\n                        icon={<TextFieldsIcon/>}\r\n                        text={ToolTypes.TEXT.display}\r\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.TEXT)}\r\n                        selected={canvasStore.canvasMode === ToolTypes.TEXT}\r\n                    />\r\n                    <ToolButton\r\n                        icon={<PhotoSizeSelectSmallIcon/>}\r\n                        text={ToolTypes.CANVAS.display}\r\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.CANVAS)}\r\n                        selected={canvasStore.canvasMode === ToolTypes.CANVAS}\r\n                    />\r\n                </div>\r\n                <div className={classes.right}>\r\n                </div>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n})\r\n\r\nexport default ToolBox;","import {fabric} from \"fabric\";\r\n\r\nexport class BrushType {\r\n    private static readonly _values: BrushType[] = [];\r\n    public static readonly PENCIL = new BrushType(\"pencil\", \"연필\");\r\n    public static readonly CIRCLE = new BrushType(\"circle\", \"원형\");\r\n    public static readonly SPRAY = new BrushType(\"spray\", \"스프레이\");\r\n\r\n    constructor(\r\n        public readonly value: string,\r\n        public readonly display: string,\r\n    ) {\r\n        BrushType._values.push(this);\r\n    }\r\n\r\n    public static values() {\r\n        return this._values;\r\n    }\r\n\r\n    public static valueOf(value: string) {\r\n        return this.values().find(v => v.value === value);\r\n    }\r\n\r\n    public getBrush(canvas: fabric.Canvas) {\r\n        switch (this) {\r\n            case BrushType.PENCIL:\r\n                return new (fabric.PencilBrush as any)(canvas);\r\n            case BrushType.CIRCLE:\r\n                return new (fabric.CircleBrush as any)(canvas);\r\n            case BrushType.SPRAY:\r\n                return new (fabric.SprayBrush as any)(canvas);\r\n            default:\r\n                return new (fabric.PencilBrush as any)(canvas);\r\n        }\r\n    }\r\n}","export const fontSizes = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72, 94, 130];\r\n\r\nexport enum FontFaceType {\r\n    DEFAULT,\r\n    GOOGLE,\r\n}\r\n\r\nexport const TextAlign = {\r\n    LEFT: \"left\",\r\n    CENTER: \"center\",\r\n    RIGHT: \"right\",\r\n}\r\n\r\nexport const FontWeight = {\r\n    NORMAL: \"normal\",\r\n    BOLD: \"bold\",\r\n}\r\n\r\nexport const FontStyle = {\r\n    NORMAL: \"normal\",\r\n    ITALIC: \"italic\",\r\n}\r\n\r\nexport class FontFaces {\r\n    private static readonly _values: FontFaces[] = [];\r\n    public static readonly TIMES_NEW_ROMAN = new FontFaces(\"Times New Roman\", \"Times New Roman\", FontFaceType.DEFAULT);\r\n    public static readonly NOTO_SANS_KR = new FontFaces(\"Noto Sans KR\", \"노토산스\", FontFaceType.GOOGLE);\r\n    public static readonly NANUM_GOTHIC = new FontFaces(\"Nanum Gothic\", \"나눔고딕\", FontFaceType.GOOGLE);\r\n    public static readonly NANUM_PEN_SCRIPT = new FontFaces(\"Nanum Pen Script\", \"나눔펜\", FontFaceType.GOOGLE);\r\n    public static readonly SONG_MYUNG = new FontFaces(\"Song Myung\", \"송명\", FontFaceType.GOOGLE);\r\n\r\n    constructor(\r\n        public readonly value: string,\r\n        public readonly display: string,\r\n        public readonly type: FontFaceType,\r\n    ) {\r\n        FontFaces._values.push(this);\r\n    }\r\n\r\n    public static values() {\r\n        return this._values;\r\n    }\r\n\r\n    public static valueOf(value: string) {\r\n        return this.values().find(v => v.value === value);\r\n    }\r\n\r\n    public static getGoogleFonts() {\r\n        return this.values().filter(font => font.type === FontFaceType.GOOGLE);\r\n    }\r\n}","import React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { Slider } from \"@material-ui/core\";\r\nimport { Input } from \"@material-ui/core\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport { InputAdornment } from \"@material-ui/core\";\r\n\r\ninterface Props {\r\n    label: string;\r\n    value: number;\r\n    onChange: (value: number) => void;\r\n    prefix?: string;\r\n    min?: number;\r\n    max?: number;\r\n}\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    label: {\r\n        display: \"flex\",\r\n        justifyContent: \"space-between\",\r\n    }\r\n}));\r\n\r\nconst Range = ({ label, value, onChange, prefix, min, max }: Props) => {\r\n    const classes = useStyles();\r\n\r\n    const handleSliderChange = (event: any, newValue: number | number[]) => {\r\n        if (typeof newValue === \"number\") {\r\n            onChange(newValue);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className={classes.label}>\r\n                <Typography variant={\"caption\"}>{label}</Typography>\r\n                <Input\r\n                    value={value}\r\n                    margin=\"dense\"\r\n                    inputProps={{\r\n                        min: 1,\r\n                        max: 100,\r\n                        type: 'number',\r\n                    }}\r\n                    endAdornment={<InputAdornment position=\"end\">{prefix}</InputAdornment>}\r\n                />\r\n            </div>\r\n            <div>\r\n                <Slider\r\n                    min={min}\r\n                    max={max}\r\n                    value={value}\r\n                    onChange={handleSliderChange}\r\n                />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Range;","import {Popover, Typography} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {ChromePicker, ColorResult} from \"react-color\"\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\n\r\ninterface Props {\r\n    label?: string,\r\n    color: string | undefined,\r\n    disableAlpha?: boolean,\r\n    disabled?: boolean,\r\n    onChange: (color: ColorResult) => void;\r\n}\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    colorBox: {\r\n        width: \"100%\",\r\n        height: 35,\r\n        border: 1,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"#c0c0c0\",\r\n        backgroundColor: (props: Props) => props.color,\r\n        cursor: (props: Props) => !props.disabled ? \"pointer\" : \"default\",\r\n    }\r\n}));\r\n\r\nconst ColorPicker = (props: Props) => {\r\n    const classes = useStyles(props);\r\n    const [anchorEl, setAnchorEl] = React.useState<HTMLDivElement | null>(null);\r\n    const open = !!anchorEl;\r\n\r\n    const handleClick = (event: React.MouseEvent<HTMLDivElement>) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {props.label && <Typography variant={\"caption\"}>{props.label}</Typography>}\r\n            <div>\r\n                <div className={classes.colorBox} onClick={handleClick}/>\r\n                <Popover\r\n                    open={open && !props.disabled}\r\n                    anchorEl={anchorEl}\r\n                    onClose={handleClose}\r\n                >\r\n                    <ChromePicker color={props.color} disableAlpha={props.disableAlpha}\r\n                                  onChangeComplete={props.onChange}/>\r\n                </Popover>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorPicker;","import { Box } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport { ColorResult, TwitterPicker } from \"react-color\"\r\nimport ColorPicker from \"./ColorPicker\";\r\n\r\ninterface Props {\r\n    color: string | undefined,\r\n    disableAlpha?: boolean,\r\n    onChange: (color: ColorResult) => void;\r\n}\r\n\r\nconst ColorPalette = (props: Props) => {\r\n    return (\r\n        <div>\r\n            <Box mb={2}>\r\n                <ColorPicker {...props} />\r\n            </Box>\r\n            <TwitterPicker width={\"100%\"} color={props.color} onChangeComplete={props.onChange} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ColorPalette;","import React from \"react\";\r\n\r\nconst usePrevious = (value: any) => {\r\n    const ref = React.useRef();\r\n    React.useEffect(() => {\r\n        ref.current = value;\r\n    });\r\n\r\n    return ref.current;\r\n}\r\n\r\nexport default usePrevious;","import { Select } from \"@material-ui/core\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { FormControl } from \"@material-ui/core\";\r\nimport { Box } from \"@material-ui/core\";\r\nimport usePrevious from \"hooks/usePrevious\";\r\nimport { CommonColor } from \"models/color/CommonColor\";\r\nimport React from \"react\"\r\nimport { ColorResult } from \"react-color\"\r\nimport ColorPicker from \"./ColorPicker\"\r\n\r\ninterface Props {\r\n    color: string | undefined;\r\n    onChange: (color: string | undefined) => void;\r\n}\r\n\r\nconst ColorSelect = ({ color, onChange }: Props) => {\r\n    const previousColor = usePrevious(color);\r\n    const [selectedValue, setSelectedValue] = React.useState<string>(!color ? \"none\" : \"solid\");\r\n\r\n    const handleColorChange = (color: ColorResult) => {\r\n        const rgb = !color.rgb.a && color.rgb.a !== 0 ? color.hex : `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\r\n        onChange(rgb);\r\n    }\r\n\r\n    const handleSelectedValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        const value = event.target.value as string;\r\n        setSelectedValue(value);\r\n\r\n        if (value === \"none\") {\r\n            onChange(undefined);\r\n        } else {\r\n            onChange(previousColor || CommonColor.PRIMARY);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Box display={\"flex\"}>\r\n            <Box mr={1.5} flexBasis={35}>\r\n                <ColorPicker color={color} onChange={handleColorChange} disabled={selectedValue === \"none\"} />\r\n            </Box>\r\n            <Box flex={1}>\r\n                <FormControl fullWidth>\r\n                    <Select\r\n                        value={selectedValue}\r\n                        onChange={handleSelectedValueChange}\r\n                    >\r\n                        <MenuItem value=\"none\">\r\n                            <em>없음</em>\r\n                        </MenuItem>\r\n                        <MenuItem value={\"solid\"}>단색</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Box>\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default ColorSelect","import FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\r\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\r\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\r\nimport React from 'react';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport { Button } from '@material-ui/core';\r\nimport clsx from 'clsx';\r\nimport { TextAlign } from 'models/tools/Text';\r\nimport { CommonColor } from 'models/color/CommonColor';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    alignBox: {\r\n        display: \"flex\",\r\n        border: 2,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"#ddd\",\r\n    },\r\n    alignButton: {\r\n        flex: 1,\r\n        borderRadius: 0,\r\n    },\r\n    selected: {\r\n        background: CommonColor.BACKGROUND_GRADIENT,\r\n        color: \"#ffffff\",\r\n    }\r\n}));\r\n\r\ninterface Props {\r\n    textAlign: string,\r\n    onChange: (textAlign: string) => void,\r\n}\r\n\r\nconst AlignButton = ({textAlign, onChange}: Props) => {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.alignBox}>\r\n            <Button className={clsx(classes.alignButton, textAlign === TextAlign.LEFT && classes.selected)} onClick={() => onChange(TextAlign.LEFT)}>\r\n                <FormatAlignLeftIcon/>\r\n            </Button>\r\n            <Button className={clsx(classes.alignButton, textAlign === TextAlign.CENTER && classes.selected)} onClick={() => onChange(TextAlign.CENTER)}>\r\n                <FormatAlignCenterIcon/>\r\n            </Button>\r\n            <Button className={clsx(classes.alignButton, textAlign === TextAlign.RIGHT && classes.selected)} onClick={() => onChange(TextAlign.RIGHT)}>\r\n                <FormatAlignRightIcon/>\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AlignButton;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faBold } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { CommonColor } from \"models/color/CommonColor\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    button: {\r\n        borderRadius: 0,\r\n        border: 2,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"#ddd\",\r\n    },\r\n    selected: {\r\n        background: CommonColor.BACKGROUND_GRADIENT,\r\n        color: \"#ffffff\",\r\n    }\r\n}));\r\n\r\n\r\ninterface Props {\r\n    bold: boolean,\r\n    toggle: (bold: boolean) => void,\r\n}\r\n\r\nconst BoldButton = ({bold, toggle}: Props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Button className={clsx(classes.button, bold && classes.selected)} onClick={() => toggle(!bold)}>\r\n            <FontAwesomeIcon icon={faBold} size=\"lg\" />\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default BoldButton;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faItalic } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { CommonColor } from \"models/color/CommonColor\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    button: {\r\n        borderRadius: 0,\r\n        border: 2,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"#ddd\",\r\n    },\r\n    selected: {\r\n        background: CommonColor.BACKGROUND_GRADIENT,\r\n        color: \"#ffffff\",\r\n    }\r\n}));\r\n\r\n\r\ninterface Props {\r\n    italic: boolean,\r\n    toggle: (bold: boolean) => void,\r\n}\r\n\r\nconst ItalicButton = ({italic, toggle}: Props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Button className={clsx(classes.button, italic && classes.selected)} onClick={() => toggle(!italic)}>\r\n            <FontAwesomeIcon icon={faItalic} size=\"lg\" />\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default ItalicButton;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUnderline } from \"@fortawesome/free-solid-svg-icons\";\r\nimport React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { CommonColor } from \"models/color/CommonColor\";\r\nimport clsx from \"clsx\";\r\n\r\nconst useStyles = makeStyles(() => ({\r\n    button: {\r\n        borderRadius: 0,\r\n        border: 2,\r\n        borderStyle: \"solid\",\r\n        borderColor: \"#ddd\",\r\n    },\r\n    selected: {\r\n        background: CommonColor.BACKGROUND_GRADIENT,\r\n        color: \"#ffffff\",\r\n    }\r\n}));\r\n\r\n\r\ninterface Props {\r\n    underline: boolean,\r\n    toggle: (bold: boolean) => void,\r\n}\r\n\r\nconst UnderlineButton = ({underline, toggle}: Props) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <Button className={clsx(classes.button, underline && classes.selected)} onClick={() => toggle(!underline)}>\r\n            <FontAwesomeIcon icon={faUnderline} size=\"lg\" />\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default UnderlineButton;","import React from 'react';\r\nimport makeStyles from '@material-ui/core/styles/makeStyles';\r\nimport BoldButton from './BoldButton';\r\nimport ItalicButton from './ItalicButton';\r\nimport UnderlineButton from './UnderlineButton';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    alignBox: {\r\n        display: \"flex\",\r\n        \"& > *\": {\r\n            flex: 1,\r\n            marginRight: theme.spacing(1),\r\n            paddingTop: theme.spacing(1),\r\n            paddingBottom: theme.spacing(1),\r\n            \"&:last-child\": {\r\n                marginRight: 0,\r\n            }\r\n        }\r\n    },\r\n}));\r\n\r\ninterface Props {\r\n    bold: boolean;\r\n    italic: boolean;\r\n    underline: boolean;\r\n    toggleBold: (bold: boolean) => void;\r\n    toggleItalic: (italic: boolean) => void;\r\n    toggleUnderline: (underline: boolean) => void;\r\n}\r\n\r\nconst TextStyleButton = ({bold, italic, underline, toggleBold, toggleItalic, toggleUnderline}: Props) => {\r\n    const classes = useStyles();\r\n    \r\n    return (\r\n        <div className={classes.alignBox}>\r\n            <BoldButton bold={bold} toggle={toggleBold}/>\r\n            <ItalicButton italic={italic} toggle={toggleItalic}/>\r\n            <UnderlineButton underline={underline} toggle={toggleUnderline}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TextStyleButton;","import {Typography} from \"@material-ui/core\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport { useStores } from \"hooks/useStores\";\r\nimport { observer } from \"mobx-react\";\r\nimport React from \"react\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        height: \"100%\",\r\n    },\r\n    title: {\r\n        marginBottom: theme.spacing(3),\r\n    },\r\n    propBoxWrapper: {\r\n        flex: 1,\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n    },\r\n}))\r\n\r\nconst PropBoxLayout: React.FC = observer(({ children }) => {\r\n    const classes = useStyles();\r\n    const { canvasStore, objectManagerStore } = useStores();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.title}>\r\n                <Typography variant={\"h6\"} color={\"primary\"}>{objectManagerStore.activeObject ? objectManagerStore.getObjectTypeName() : canvasStore.canvasMode.display}</Typography>\r\n            </div>\r\n            <div className={classes.propBoxWrapper}>\r\n                {children}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default PropBoxLayout;","import React from \"react\";\r\nimport {Box, BoxProps, Typography} from \"@material-ui/core\";\r\n\r\ninterface Props extends BoxProps {\r\n    label?: string,\r\n}\r\n\r\nconst PropBoxItem: React.FC<Props> = ({label, children, ...other}) => {\r\n    return (\r\n        <Box {...other}>\r\n            {label && (\r\n                <Box mb={1}>\r\n                    <Typography variant={\"caption\"}>{label}</Typography>\r\n                </Box>\r\n            )}\r\n            {children}\r\n        </Box>\r\n    )\r\n}\r\n\r\nexport default PropBoxItem;","import {Box} from \"@material-ui/core\";\r\nimport {BrushType} from \"../../models/tools/Brush\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {observer} from \"mobx-react\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\nimport {FontAwesomeIcon} from \"@fortawesome/react-fontawesome\";\r\nimport {faCircle, faPencilAlt, faSprayCan} from \"@fortawesome/free-solid-svg-icons\";\r\nimport clsx from \"clsx\";\r\nimport {CommonColor} from \"../../models/color/CommonColor\";\r\nimport {ColorPalette, Range} from \"components/input\";\r\nimport PropBoxLayout from \"./PropBoxLayout\";\r\nimport PropBoxItem from \"./PropBoxItem\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        borderRadius: \"4px\",\r\n        cursor: \"pointer\",\r\n        padding: theme.spacing(1),\r\n        marginRight: theme.spacing(0.5),\r\n        \"&:hover\": {\r\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\r\n            \"& *\": {\r\n                color: \"white\",\r\n            }\r\n        },\r\n    },\r\n    selected: {\r\n        background: CommonColor.BACKGROUND_GRADIENT,\r\n        \"& *\": {\r\n            color: \"white\",\r\n        }\r\n    },\r\n}))\r\n\r\nconst BrushPropBox = observer(() => {\r\n    const classes = useStyles();\r\n    const {brushStore} = useStores();\r\n\r\n    return (\r\n        <PropBoxLayout>\r\n            {!brushStore.item && <div>\r\n                <PropBoxItem label={\"모양\"} mb={3}>\r\n                    <Box display=\"flex\">\r\n                        <div\r\n                            className={clsx(classes.button, brushStore.brushType === BrushType.PENCIL && classes.selected)}\r\n                            onClick={() => brushStore.setBrushType(BrushType.PENCIL)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faPencilAlt} size=\"lg\"/>\r\n                        </div>\r\n                        <div\r\n                            className={clsx(classes.button, brushStore.brushType === BrushType.SPRAY && classes.selected)}\r\n                            onClick={() => brushStore.setBrushType(BrushType.SPRAY)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faSprayCan} size=\"lg\"/>\r\n                        </div>\r\n                        <div\r\n                            className={clsx(classes.button, brushStore.brushType === BrushType.CIRCLE && classes.selected)}\r\n                            onClick={() => brushStore.setBrushType(BrushType.CIRCLE)}\r\n                        >\r\n                            <FontAwesomeIcon icon={faCircle} size=\"lg\"/>\r\n                        </div>\r\n                    </Box>\r\n                </PropBoxItem>\r\n            </div>}\r\n            <PropBoxItem mb={3}>\r\n                <Range\r\n                    label=\"두께\"\r\n                    value={brushStore.strokeWidth}\r\n                    onChange={(strokeWidth) => brushStore.setStrokeWidth(strokeWidth)}\r\n                    prefix={\"px\"}\r\n                    min={1}\r\n                />\r\n            </PropBoxItem>\r\n            <PropBoxItem label={\"색상\"}>\r\n                <ColorPalette color={brushStore.stroke} onChange={(color) => brushStore.setStroke(color.hex)}\r\n                              disableAlpha={true}/>\r\n            </PropBoxItem>\r\n        </PropBoxLayout>\r\n    )\r\n})\r\n\r\nexport default BrushPropBox;","import {fabric} from \"fabric\";\r\n\r\nexport class ShapeType {\r\n    private static readonly _values: ShapeType[] = [];\r\n    public static readonly RECT = new ShapeType(\"rect\", \"사각형\");\r\n    public static readonly ELLIPSE = new ShapeType(\"ellipse\", \"원\");\r\n    public static readonly TRIANGLE = new ShapeType(\"triangle\", \"삼각형\");\r\n\r\n    constructor(\r\n        public readonly value: string,\r\n        public readonly display: string,\r\n    ) {\r\n        ShapeType._values.push(this);\r\n    }\r\n\r\n    public static values() {\r\n        return this._values;\r\n    }\r\n\r\n    public static valueOf(value: string) {\r\n        return this.values().find(v => v.value === value);\r\n    }\r\n\r\n    public getShape<T extends fabric.IObjectOptions>(options?: T) {\r\n        switch (this) {\r\n            case ShapeType.RECT:\r\n                return new fabric.Rect(options);\r\n            case ShapeType.ELLIPSE:\r\n                return new fabric.Ellipse(options);\r\n            case ShapeType.TRIANGLE:\r\n                return new fabric.Triangle(options);\r\n            default:\r\n                return new fabric.Rect(options);\r\n        }\r\n    }\r\n}","import {Box} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {observer} from \"mobx-react\";\r\nimport {ShapeType} from \"../../models/tools/Shape\";\r\nimport clsx from \"clsx\";\r\nimport {CommonColor} from \"../../models/color/CommonColor\";\r\nimport PropBoxLayout from \"./PropBoxLayout\";\r\nimport {useStores} from \"hooks/useStores\";\r\nimport {ColorSelect, Range} from \"components/input\";\r\nimport PropBoxItem from \"./PropBoxItem\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    button: {\r\n        borderRadius: \"4px\",\r\n        cursor: \"pointer\",\r\n        padding: theme.spacing(1),\r\n        marginRight: theme.spacing(0.5),\r\n        height: 40,\r\n        \"&:hover\": {\r\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\r\n            \"& svg > *\": {\r\n                stroke: \"white\",\r\n            }\r\n        },\r\n    },\r\n    selected: {\r\n        background: CommonColor.BACKGROUND_GRADIENT,\r\n        \"& svg > *\": {\r\n            stroke: \"white\",\r\n        }\r\n    },\r\n    propBox: {\r\n        \"& > div\": {\r\n            marginBottom: theme.spacing(3),\r\n        }\r\n    }\r\n}))\r\n\r\nconst ShapePropBox = observer(() => {\r\n    const classes = useStyles();\r\n    const { shapeStore } = useStores();\r\n\r\n    return (\r\n        <PropBoxLayout>\r\n            <div className={classes.propBox}>\r\n                {!shapeStore.item && <div>\r\n                    <PropBoxItem label={\"모양\"}>\r\n                        <Box display={\"flex\"}>\r\n                            <div\r\n                                className={clsx(classes.button, shapeStore.shapeType === ShapeType.ELLIPSE && classes.selected)}\r\n                                onClick={() => shapeStore.setShapeType(ShapeType.ELLIPSE)}\r\n                            >\r\n                                <svg height=\"24\" width=\"24\">\r\n                                    <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\r\n                                </svg>\r\n                            </div>\r\n                            <div\r\n                                className={clsx(classes.button, shapeStore.shapeType === ShapeType.RECT && classes.selected)}\r\n                                onClick={() => shapeStore.setShapeType(ShapeType.RECT)}\r\n                            >\r\n                                <svg width=\"24\" height=\"24\">\r\n                                    <rect width=\"24\" height=\"24\" stroke=\"black\" fill=\"transparent\" strokeWidth={4} />\r\n                                </svg>\r\n                            </div>\r\n                            <div\r\n                                className={clsx(classes.button, shapeStore.shapeType === ShapeType.TRIANGLE && classes.selected)}\r\n                                onClick={() => shapeStore.setShapeType(ShapeType.TRIANGLE)}\r\n                            >\r\n                                <svg width=\"24\" height=\"24\">\r\n                                    <polygon points=\"12,2 22,22 2,22\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\r\n                                </svg>\r\n                            </div>\r\n                        </Box>\r\n                    </PropBoxItem>\r\n                </div>}\r\n                <PropBoxItem label={\"채우기\"}>\r\n                    <ColorSelect color={shapeStore.fill} onChange={(color: string | undefined) => shapeStore.setFill(color)} />\r\n                </PropBoxItem>\r\n                <PropBoxItem label={\"선 색상\"}>\r\n                    <ColorSelect color={shapeStore.stroke} onChange={(color: string | undefined) => shapeStore.setStroke(color)} />\r\n                </PropBoxItem>\r\n                <PropBoxItem>\r\n                    <Range label=\"선 두께\" value={shapeStore.strokeWidth} onChange={(strokeWidth) => shapeStore.setStrokeWidth(strokeWidth)} prefix={\"px\"} />\r\n                </PropBoxItem>\r\n            </div>\r\n        </PropBoxLayout>\r\n    )\r\n})\r\n\r\nexport default ShapePropBox;","import { IEvent } from \"fabric/fabric-impl\";\r\nimport { RootStore, Store } from \"./rootStore\";\r\n\r\nexport enum MouseEventType {\r\n    MOUSE_UP = \"mouse:up\",\r\n    MOUSE_DOWN = \"mouse:down\",\r\n    MOUSE_MOVE = \"mouse:move\",\r\n}\r\n\r\nexport interface MouseEventObject {\r\n    startCursorPosition: {x: number, y: number},\r\n    currentCursorPosition: {x: number, y: number},\r\n}\r\n\r\nexport class MouseEventStore implements Store {\r\n    private readonly listeners: any;\r\n    private startCursorPosition = { x: 0, y: 0 };\r\n    private currentCursorPosition = { x: 0, y: 0 };\r\n    private observer: Map<MouseEventType, Array<(e: MouseEventObject) => void>> = new Map();\r\n\r\n    constructor(private readonly rootStore: RootStore) {\r\n        // this.addEventListeners();\r\n        this.listeners = {\r\n            onMouseDown: this.onMouseDown.bind(this),\r\n            onMouseUp: this.onMouseUp.bind(this),\r\n            onMouseMove: this.onMouseMove.bind(this),\r\n        }\r\n    }\r\n\r\n    onInit() {\r\n        this.addEventListeners();\r\n    }\r\n\r\n    onDestroy() {\r\n        this.removeEventListeners();\r\n    }\r\n\r\n    subscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\r\n        if (!this.observer.has(eventType)) {\r\n            this.observer.set(eventType, []);\r\n        }\r\n        \r\n        this.observer.get(eventType)?.push(listener);\r\n    }\r\n\r\n    unsubscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\r\n        this.observer.set(eventType, this.observer.get(eventType)?.filter(fn => fn !== listener) || []);\r\n    }\r\n\r\n    private onMouseDown(e: IEvent) {\r\n        this.startCursorPosition = { ...this.getCursorPosition(e) };\r\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\r\n\r\n        this.observer.get(MouseEventType.MOUSE_DOWN)?.forEach(callback => callback({\r\n            startCursorPosition: this.startCursorPosition,\r\n            currentCursorPosition: this.currentCursorPosition,    \r\n        }));\r\n    }\r\n\r\n    private onMouseMove(e: IEvent) {\r\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\r\n\r\n        this.observer.get(MouseEventType.MOUSE_MOVE)?.forEach(callback => callback({\r\n            startCursorPosition: this.startCursorPosition,\r\n            currentCursorPosition: this.currentCursorPosition,    \r\n        }));\r\n    }\r\n\r\n    private onMouseUp(e: IEvent) {\r\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\r\n\r\n        this.observer.get(MouseEventType.MOUSE_UP)?.forEach(callback => callback({\r\n            startCursorPosition: this.startCursorPosition,\r\n            currentCursorPosition: this.currentCursorPosition,    \r\n        }));\r\n    }\r\n\r\n    private addEventListeners() {\r\n        const { canvas } = this.rootStore.canvasStore;\r\n        canvas.on(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\r\n        canvas.on(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\r\n        canvas.on(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\r\n    }\r\n\r\n    private removeEventListeners() {\r\n        const { canvas } = this.rootStore.canvasStore;\r\n        canvas.off(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\r\n        canvas.off(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\r\n        canvas.off(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\r\n    }\r\n\r\n    private getCursorPosition(e: IEvent) {\r\n        return this.rootStore.canvasStore.canvas.getPointer(e.e);\r\n    }\r\n}","import makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport React from \"react\";\r\nimport PropBoxLayout from \"./PropBoxLayout\";\r\nimport { AlignButton, ColorPicker, TextStyleButton } from \"../input\";\r\nimport { useStores } from \"hooks/useStores\";\r\nimport { observer } from \"mobx-react\";\r\nimport { Box, FormControl, Select } from \"@material-ui/core\";\r\nimport { MenuItem } from \"@material-ui/core\";\r\nimport { FontFaces, fontSizes } from \"models/tools/Text\";\r\nimport PropBoxItem from \"./PropBoxItem\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    propBox: {\r\n        \"& > *\": {\r\n            marginBottom: theme.spacing(3),\r\n        }\r\n    }\r\n}));\r\n\r\nconst TextPropBox = observer(() => {\r\n    const classes = useStyles();\r\n    const { textStore } = useStores();\r\n\r\n    const handleFontSizeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        const fontSize = parseInt(event.target.value as string, 10);\r\n        textStore.setFontSize(fontSize);\r\n    };\r\n\r\n    const handleFontFamilyChange = (event: React.ChangeEvent<{ value: unknown }>) => {\r\n        const fontFamily = event.target.value as string;\r\n        textStore.setFontFamily(fontFamily);\r\n    };\r\n\r\n    return (\r\n        <PropBoxLayout>\r\n            <div className={classes.propBox}>\r\n                <PropBoxItem label={\"폰트\"}>\r\n                    <FormControl fullWidth>\r\n                        <Select\r\n                            value={textStore.fontFamily}\r\n                            onChange={handleFontFamilyChange}\r\n                        >\r\n                            {FontFaces.values().map(font => (\r\n                                <MenuItem\r\n                                    key={font.value}\r\n                                    value={font.value}\r\n                                    style={{\r\n                                        fontFamily: font.value,\r\n                                    }}\r\n                                >\r\n                                    {font.display}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </PropBoxItem>\r\n                <PropBoxItem label={\"폰트 크기\"}>\r\n                    <Box display={\"flex\"}>\r\n                        <Box flex={1} mr={1.5}>\r\n                            <FormControl fullWidth>\r\n                                <Select\r\n                                    value={textStore.fontSize}\r\n                                    onChange={handleFontSizeChange}\r\n                                >\r\n                                    <MenuItem value={textStore.fontSize}>{textStore.fontSize}</MenuItem>\r\n                                    {fontSizes.map(fontSize => (\r\n                                        textStore.fontSize !== fontSize && <MenuItem key={fontSize} value={fontSize}>{fontSize}</MenuItem>\r\n                                    ))}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Box>\r\n                        <Box flexBasis={35}>\r\n                            <ColorPicker color={textStore.fill} onChange={(color) => textStore.setFill(color.hex)} />\r\n                        </Box>\r\n                    </Box>\r\n                </PropBoxItem>\r\n                <PropBoxItem label={\"폰트 스타일\"}>\r\n                    <TextStyleButton\r\n                        bold={textStore.isBold()}\r\n                        italic={textStore.isItalic()}\r\n                        underline={textStore.underline}\r\n                        toggleBold={(bold) => textStore.setBold(bold)}\r\n                        toggleItalic={(italic) => textStore.setItalic(italic)}\r\n                        toggleUnderline={(underline) => textStore.setUnderline(underline)}\r\n                    />\r\n                </PropBoxItem>\r\n                <PropBoxItem label={\"정렬\"}>\r\n                    <AlignButton textAlign={textStore.textAlign} onChange={(textAlign) => textStore.setTextAlign(textAlign)} />\r\n                </PropBoxItem>\r\n            </div>\r\n        </PropBoxLayout>\r\n    )\r\n})\r\n\r\nexport default TextPropBox;","import {observer} from \"mobx-react\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\nimport PropBoxLayout from \"./PropBoxLayout\";\r\nimport {Box, FormControl, Input, InputAdornment, InputLabel} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {ColorPalette} from \"../input\";\r\nimport PropBoxItem from \"./PropBoxItem\";\r\n\r\nconst CanvasPropBox = observer(() => {\r\n    const {canvasStore} = useStores();\r\n    const [width, setWidth] = React.useState(canvasStore.width);\r\n    const [height, setHeight] = React.useState(canvasStore.height);\r\n\r\n    return (\r\n        <PropBoxLayout>\r\n            <PropBoxItem label={\"캔버스 크기 조정\"} mb={3}>\r\n                <Box display={\"flex\"}>\r\n                    <Box flex={1} mr={1.5}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor={\"canvas-width\"}>너비</InputLabel>\r\n                            <Input\r\n                                id={\"canvas-width\"}\r\n                                type={\"number\"}\r\n                                value={width}\r\n                                onChange={(event) => setWidth(parseInt(event.target.value))}\r\n                                onBlur={() => canvasStore.setWidth(width)}\r\n                                endAdornment={<InputAdornment position=\"end\">px</InputAdornment>}\r\n                            />\r\n                        </FormControl>\r\n                    </Box>\r\n                    <Box flex={1}>\r\n                        <FormControl fullWidth>\r\n                            <InputLabel htmlFor={\"canvas-width\"}>높이</InputLabel>\r\n                            <Input\r\n                                id={\"canvas-width\"}\r\n                                type={\"number\"}\r\n                                value={height}\r\n                                onChange={(event) => setHeight(parseInt(event.target.value))}\r\n                                onBlur={() => canvasStore.setHeight(height)}\r\n                                endAdornment={<InputAdornment position=\"end\">px</InputAdornment>}\r\n                            />\r\n                        </FormControl>\r\n                    </Box>\r\n                </Box>\r\n            </PropBoxItem>\r\n            <PropBoxItem label={\"배경\"}>\r\n                <ColorPalette\r\n                    color={canvasStore.backgroundColor}\r\n                    onChange={(event) => canvasStore.setBackgroundColor(event.hex)}\r\n                    disableAlpha={true}\r\n                />\r\n            </PropBoxItem>\r\n        </PropBoxLayout>\r\n    )\r\n})\r\n\r\nexport default CanvasPropBox;","import PropBoxLayout from \"./PropBoxLayout\";\r\n\r\nconst SelectPropBox = () => {\r\n    return (\r\n        <PropBoxLayout>\r\n            오브젝트를 선택하면 속성을 변경할 수 있습니다.\r\n        </PropBoxLayout>\r\n    )\r\n}\r\n\r\nexport default SelectPropBox;","import React from \"react\";\r\nimport {observer} from \"mobx-react\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\nimport {ToolTypes} from \"../../models/tools/ToolTypes\";\r\nimport BrushPropBox from \"./BrushPropBox\";\r\nimport ShapePropBox from \"./ShapePropBox\";\r\nimport TextPropBox from \"./TextPropBox\";\r\nimport CanvasPropBox from \"./CanvasPropBox\";\r\nimport SelectPropBox from \"./SelectPropBox\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: theme.spacing(3),\r\n        height: \"100%\",\r\n    }\r\n}));\r\n\r\nconst PropBox = observer(() => {\r\n    const classes = useStyles();\r\n    const {canvasStore, objectManagerStore} = useStores();\r\n    const selectedTool = canvasStore.canvasMode;\r\n    const activeObject = objectManagerStore.activeObject;\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <div className={classes.root}>\r\n                {!activeObject && <React.Fragment>\r\n                    {selectedTool === ToolTypes.SELECT && (<SelectPropBox/>)}\r\n                    {selectedTool === ToolTypes.BRUSH && (<BrushPropBox/>)}\r\n                    {selectedTool === ToolTypes.SHAPE && (<ShapePropBox/>)}\r\n                    {selectedTool === ToolTypes.TEXT && (<TextPropBox/>)}\r\n                    {selectedTool === ToolTypes.CANVAS && (<CanvasPropBox/>)}\r\n                </React.Fragment>}\r\n                {activeObject && <React.Fragment>\r\n                    {objectManagerStore.isPath() && <BrushPropBox/>}\r\n                    {objectManagerStore.isShape() && <ShapePropBox/>}\r\n                    {objectManagerStore.isText() && <TextPropBox/>}\r\n                </React.Fragment>}\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n})\r\n\r\nexport default PropBox;","import React from \"react\";\r\nimport {Layout} from \"../layout\";\r\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\r\nimport {ToolBox} from \"../../components/tools\";\r\nimport {observer} from \"mobx-react\";\r\nimport {Toolbar} from \"@material-ui/core\";\r\nimport {useStores} from \"../../hooks/useStores\";\r\nimport {PropBox} from \"../../components/propbox\";\r\n\r\nconst leftMenuWidth = 260;\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        display: \"flex\",\r\n        flexDirection: \"column\",\r\n        width: \"100vw\",\r\n        height: \"100vh\",\r\n    },\r\n    flexBox: {\r\n        display: \"flex\",\r\n        flex: 1,\r\n    },\r\n    contents: {\r\n        display: \"flex\",\r\n    },\r\n    left: {\r\n        flexBasis: `${leftMenuWidth}px`,\r\n        backgroundColor: \"#f0f0f0\",\r\n    },\r\n    canvasWrapper: {\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n        flex: 1,\r\n        backgroundColor: \"#c0c0c0\",\r\n        padding: theme.spacing(3),\r\n    },\r\n}))\r\n\r\nconst Canvas = observer(() => {\r\n    const classes = useStyles();\r\n    const rootStore = useStores();\r\n    const canvasRef = React.useRef<HTMLDivElement>(null);\r\n\r\n    React.useEffect(() => {\r\n        if (!canvasRef.current) {\r\n            return;\r\n        }\r\n\r\n        rootStore.init(canvasRef.current);\r\n        rootStore.onInit();\r\n        return () => rootStore.onDestroy();\r\n    }, [rootStore, canvasRef]);\r\n\r\n    return (\r\n        <Layout>\r\n            <ToolBox/>\r\n            <div className={classes.root}>\r\n                <Toolbar variant={\"dense\"}/>\r\n                <div className={classes.flexBox}>\r\n                    <div className={classes.left}>\r\n                        <PropBox/>\r\n                    </div>\r\n                    <div className={classes.canvasWrapper} ref={canvasRef}/>\r\n                </div>\r\n            </div>\r\n        </Layout>\r\n    )\r\n})\r\n\r\nexport default Canvas;","import { makeAutoObservable } from \"mobx\";\r\nimport { BrushType } from \"models/tools/Brush\";\r\nimport { RootStore, Store } from \"./rootStore\";\r\nimport { fabric } from \"fabric\";\r\nimport { ObjectManagerStore } from \"./objectManagerStore\";\r\nimport { CanvasModeManager } from \"./canvasStore\";\r\nimport { ToolTypes } from \"models/tools/ToolTypes\";\r\n\r\nconst defaultStyles = {\r\n    brushType: BrushType.PENCIL,\r\n    stroke: \"#000000\",\r\n    strokeWidth: 1,\r\n}\r\n\r\ninterface PathStyles {\r\n    stroke: string | undefined,\r\n    strokeWidth: number | undefined,\r\n}\r\n\r\nexport class BrushStore implements Store, CanvasModeManager {\r\n    brushType = defaultStyles.brushType;\r\n    stroke = defaultStyles.stroke;\r\n    strokeWidth = defaultStyles.strokeWidth;\r\n    item: fabric.Path | undefined;\r\n\r\n    private readonly listeners: any;\r\n    private readonly canvas: fabric.Canvas;\r\n    private readonly objectManager: ObjectManagerStore;\r\n\r\n    constructor(\r\n        private readonly rootStore: RootStore,\r\n    ) {\r\n        makeAutoObservable(this);\r\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.BRUSH, this);\r\n        this.canvas = rootStore.canvasStore.canvas;\r\n        this.objectManager = rootStore.objectManagerStore;\r\n        this.listeners = {\r\n            updateObject: this.updateObject.bind(this),\r\n        }\r\n    }\r\n\r\n    onInit() {\r\n        this.addReactions();\r\n    }\r\n\r\n    onDestroy() {\r\n        this.removeReactions();\r\n    }\r\n\r\n    onSessionStart() {\r\n        this.canvas.isDrawingMode = true;\r\n        this.setBrushType(this.brushType);\r\n    }\r\n\r\n    onSessionEnd() {\r\n        this.canvas.isDrawingMode = false;\r\n    }\r\n\r\n    setBrushType(brushType: BrushType) {\r\n        this.brushType = brushType;\r\n        this.setFreeDrawingBrush();\r\n    }\r\n\r\n    setStroke(stroke: string | undefined) {\r\n        this.stroke = stroke || defaultStyles.stroke;\r\n        this.item?.set(\"stroke\", stroke);\r\n        this.canvas.freeDrawingBrush.color = this.stroke;\r\n        this.canvas.renderAll();\r\n    }\r\n\r\n    setStrokeWidth(strokeWidth: number | undefined) {\r\n        this.strokeWidth = strokeWidth || defaultStyles.strokeWidth;\r\n        this.item?.set(\"strokeWidth\", strokeWidth);\r\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\r\n        this.canvas.renderAll();\r\n    }\r\n\r\n    private setFreeDrawingBrush() {\r\n        this.canvas.freeDrawingBrush = this.brushType.getBrush(this.canvas);\r\n        this.canvas.freeDrawingBrush.color = this.stroke;\r\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\r\n    }\r\n\r\n    private updateObject(object: fabric.Object | undefined) {\r\n        if (this.isBrush(object)) {\r\n            this.item = object as fabric.Path;\r\n            this.updatePathStyles();\r\n        } else {\r\n            this.item = undefined;\r\n        }\r\n    }\r\n\r\n    private setPathStyles(styles: PathStyles) {\r\n        this.setStroke(styles.stroke);\r\n        this.setStrokeWidth(styles.strokeWidth);\r\n    }\r\n\r\n    private updatePathStyles() {\r\n        if (!this.item) {\r\n            return;\r\n        }\r\n\r\n        const {\r\n            stroke,\r\n            strokeWidth,\r\n        } = this.item;\r\n\r\n        this.setPathStyles({\r\n            stroke: stroke,\r\n            strokeWidth: strokeWidth,\r\n        })\r\n    }\r\n\r\n    private isBrush(object: fabric.Object | undefined) {\r\n        return object?.isType(\"path\");\r\n    }\r\n\r\n    private addReactions() {\r\n        this.objectManager.subscribe(this.listeners.updateObject);\r\n    }\r\n\r\n    private removeReactions() {\r\n        this.objectManager.unsubscribe(this.listeners.updateObject);\r\n    }\r\n}","import {makeAutoObservable} from \"mobx\";\r\nimport {ToolTypes} from \"models/tools/ToolTypes\";\r\nimport {RootStore, Store} from \"./rootStore\";\r\nimport {fabric} from \"fabric\";\r\n\r\nconst defaultStyles = {\r\n    width: 500,\r\n    height: 500,\r\n    backgroundColor: \"#ffffff\",\r\n}\r\n\r\nexport interface CanvasModeManager {\r\n    onSessionStart: () => void;\r\n    onSessionEnd: () => void;\r\n}\r\n\r\nexport class CanvasStore implements Store {\r\n    private readonly canvasModeManagers: Map<ToolTypes, CanvasModeManager> = new Map();\r\n\r\n    width = defaultStyles.width;\r\n    height = defaultStyles.height;\r\n    backgroundColor = defaultStyles.backgroundColor;\r\n    canvasMode = ToolTypes.CANVAS;\r\n\r\n    constructor(\r\n        private readonly rootStore: RootStore,\r\n        readonly canvas: fabric.Canvas,\r\n    ) {\r\n        makeAutoObservable(this);\r\n    }\r\n\r\n    onInit() {\r\n        this.canvas.setWidth(this.width);\r\n        this.canvas.setHeight(this.height);\r\n        this.canvas.setBackgroundColor(this.backgroundColor, () => {});\r\n        this.setCanvasMode(this.canvasMode);\r\n    }\r\n\r\n    onDestroy() {\r\n        this.canvas.dispose();\r\n    }\r\n\r\n    registerCanvasModeManager(mode: ToolTypes, manager: CanvasModeManager) {\r\n        this.canvasModeManagers.set(mode, manager);\r\n    }\r\n\r\n    setCanvasMode(mode: ToolTypes) {\r\n        const previousMode = this.canvasMode;\r\n        this.canvasMode = mode;\r\n\r\n        this.canvas.discardActiveObject().renderAll();\r\n        this.setAllCursor(\"default\");\r\n        this.setSelectable(false)\r\n\r\n        this.canvasModeManagers.get(previousMode)?.onSessionEnd();\r\n        this.canvasModeManagers.get(mode)?.onSessionStart();\r\n    }\r\n\r\n    setSelectable(selectable: boolean) {\r\n        this.canvas.selection = selectable;\r\n        this.canvas.getObjects().forEach(obj => {\r\n            obj.selectable = selectable;\r\n        });\r\n    }\r\n\r\n    setDefaultCursor(cursor: string) {\r\n        this.canvas.defaultCursor = cursor;\r\n    }\r\n\r\n    setHoverCursor(cursor: string) {\r\n        this.canvas.getObjects().forEach(obj => {\r\n            obj.hoverCursor = cursor;\r\n        });\r\n    }\r\n\r\n    setAllCursor(cursor: string) {\r\n        this.setDefaultCursor(cursor);\r\n        this.setHoverCursor(cursor);\r\n    }\r\n\r\n    setWidth(width: number) {\r\n        this.width = width;\r\n        this.canvas.setWidth(width);\r\n    }\r\n\r\n    setHeight(height: number) {\r\n        this.height = height;\r\n        this.canvas.setHeight(height);\r\n    }\r\n\r\n    setBackgroundColor(color: string) {\r\n        this.backgroundColor = color;\r\n        this.canvas.setBackgroundColor(color, () => {});\r\n    }\r\n}","const deleteIcon = \"data:image/svg+xml,%3C%3Fxml version='1.0' encoding='utf-8'%3F%3E%3C!DOCTYPE svg PUBLIC '-//W3C//DTD SVG 1.1//EN' 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd'%3E%3Csvg version='1.1' id='Ebene_1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' x='0px' y='0px' width='595.275px' height='595.275px' viewBox='200 215 230 470' xml:space='preserve'%3E%3Ccircle style='fill:%23F44336;' cx='299.76' cy='439.067' r='218.516'/%3E%3Cg%3E%3Crect x='267.162' y='307.978' transform='matrix(0.7071 -0.7071 0.7071 0.7071 -222.6202 340.6915)' style='fill:white;' width='65.545' height='262.18'/%3E%3Crect x='266.988' y='308.153' transform='matrix(0.7071 0.7071 -0.7071 0.7071 398.3889 -83.3116)' style='fill:white;' width='65.544' height='262.179'/%3E%3C/g%3E%3C/svg%3E\";\r\n\r\nexport const DeleteImageElement = document.createElement('img');\r\nDeleteImageElement.src = deleteIcon;","import {fabric} from \"fabric\";\r\nimport {DeleteImageElement} from \"../../components/element/DeleteImageElement\";\r\n\r\ntype DeleteAction = (eventData: MouseEvent, transformData: fabric.Transform, x: number, y: number) => boolean;\r\n\r\nexport class DeleteControl {\r\n    public static init(deleteAction: DeleteAction) {\r\n        fabric.Object.prototype.controls.deleteControl = new fabric.Control({\r\n            x: 0.5,\r\n            y: -0.5,\r\n            offsetY: -16,\r\n            offsetX: 16,\r\n            cursorStyle: 'pointer',\r\n            mouseUpHandler: deleteAction,\r\n            render: this.renderIcon(DeleteImageElement),\r\n        })\r\n    }\r\n\r\n    private static renderIcon(icon: CanvasImageSource) {\r\n        return (ctx: CanvasRenderingContext2D, left: number, top: number, styleOverride: any, fabricObject: fabric.Object) => {\r\n            const size = fabricObject.cornerSize;\r\n            if (size) {\r\n                ctx.save();\r\n                ctx.translate(left, top);\r\n                ctx.rotate(fabric.util.degreesToRadians(fabricObject.angle || 0));\r\n                ctx.drawImage(icon, -size / 2, -size / 2, size, size);\r\n                ctx.restore();\r\n            }\r\n        };\r\n    }\r\n}","import {IEvent, Transform} from \"fabric/fabric-impl\";\r\nimport { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ShapeType } from \"models/tools/Shape\";\r\nimport { CanvasStore } from \"./canvasStore\";\r\nimport { RootStore } from \"./rootStore\";\r\nimport {fabric} from \"fabric\";\r\nimport {DeleteControl} from \"../models/object/DeleteControl\";\r\n\r\nexport enum SelectionEventType {\r\n    SELECTION_CLEARED = \"selection:cleared\",\r\n    SELECTION_CREATED = \"selection:created\",\r\n    SELECTION_UPDATED = \"selection:updated\",\r\n}\r\n\r\nexport class ObjectManagerStore {\r\n    private readonly canvasStore: CanvasStore;\r\n    private readonly listeners: { [eventName: string]: (e: IEvent) => void }\r\n    private readonly observer: Set<(object: fabric.Object | undefined) => void> = new Set();\r\n\r\n    activeObject: fabric.Object | undefined;\r\n\r\n    constructor(\r\n        private readonly rootStore: RootStore,\r\n    ) {\r\n        makeAutoObservable(this);\r\n        this.canvasStore = rootStore.canvasStore;\r\n        this.listeners = {\r\n            onSelected: this.onSelected.bind(this),\r\n            onCleared: this.onCleared.bind(this),\r\n        }\r\n        this.addEventListeners();\r\n        this.initControl();\r\n    }\r\n\r\n    private onSelected(e: IEvent) {\r\n        const { target } = e;\r\n        if (!target) {\r\n            return;\r\n        }\r\n\r\n        this.activeObject = target;\r\n    }\r\n\r\n    private onCleared() {\r\n        this.activeObject = undefined;\r\n    }\r\n\r\n    private addEventListeners() {\r\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CREATED, this.listeners.onSelected);\r\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_UPDATED, this.listeners.onSelected);\r\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CLEARED, this.listeners.onCleared);\r\n        reaction(\r\n            () => this.activeObject,\r\n            () => this.observer.forEach(callback => callback(this.activeObject)),\r\n        );\r\n    }\r\n\r\n    private initControl() {\r\n        DeleteControl.init(this.removeActiveObjects);\r\n    }\r\n\r\n    private removeActiveObjects(_eventData: MouseEvent, transform: Transform): boolean {\r\n        const canvas = transform.target.canvas;\r\n        if (!canvas) {\r\n            return false;\r\n        }\r\n\r\n        const activeObjects = canvas.getActiveObjects();\r\n        if (activeObjects.length === 0) {\r\n            return false;\r\n        }\r\n\r\n        canvas.getActiveObjects().forEach(object => canvas.remove(object));\r\n        canvas.discardActiveObject();\r\n        canvas.requestRenderAll();\r\n        return true;\r\n    }\r\n\r\n    subscribe(listener: (object: fabric.Object | undefined) => void) {\r\n        this.observer.add(listener);\r\n    }\r\n\r\n    unsubscribe(listener: (object: fabric.Object | undefined) => void) {\r\n        this.observer.delete(listener);\r\n    }\r\n\r\n    isRect() {\r\n        return this.activeObject?.isType(ShapeType.RECT.value);\r\n    }\r\n\r\n    isEllipse() {\r\n        return this.activeObject?.isType(ShapeType.ELLIPSE.value);\r\n    }\r\n\r\n    isTriangle() {\r\n        return this.activeObject?.isType(ShapeType.TRIANGLE.value);\r\n    }\r\n\r\n    isShape() {\r\n        return this.isRect() || this.isEllipse() || this.isTriangle();\r\n    }\r\n\r\n    isPath() {\r\n        return this.activeObject?.isType(\"path\");\r\n    }\r\n\r\n    isText() {\r\n        return this.activeObject?.isType(\"i-text\");\r\n    }\r\n\r\n    isActiveSelection() {\r\n        return this.activeObject?.isType(\"activeSelection\");\r\n    }\r\n\r\n    isGroup() {\r\n        return this.activeObject?.isType(\"group\");\r\n    }\r\n\r\n    isCommonObject() {\r\n        return !this.isShape() && !this.isPath() && !this.isText();\r\n    }\r\n\r\n    getObjectTypeName(): string {\r\n        if (this.isRect()) {\r\n            return ShapeType.RECT.display;\r\n        } else if (this.isEllipse()) {\r\n            return ShapeType.ELLIPSE.display;\r\n        } else if (this.isTriangle()) {\r\n            return ShapeType.TRIANGLE.display;\r\n        } else if (this.isPath()) {\r\n            return \"패스\";\r\n        } else if (this.isText()) {\r\n            return \"텍스트\";\r\n        } else if (this.isGroup()) {\r\n            return \"그룹\"\r\n        } else {\r\n            return \"오브젝트\";\r\n        }\r\n    }\r\n}","import { IEvent } from \"fabric/fabric-impl\";\r\nimport { RootStore, Store } from \"./rootStore\";\r\n\r\nexport enum ObjectEventType {\r\n    OBJECT_SCALING = \"object:scaling\",\r\n    OBJECT_MODIFIED = \"object:modified\",\r\n}\r\n\r\nexport class ObjectEventStore implements Store {\r\n    private readonly listeners: any;\r\n    private readonly observer: Map<ObjectEventType, Set<(e: IEvent) => void>> = new Map();\r\n\r\n    constructor(private readonly rootStore: RootStore) {\r\n        this.listeners = {\r\n            onScaling: this.onScaling.bind(this),\r\n            onModified: this.onModified.bind(this),\r\n        }\r\n    }\r\n\r\n    onInit() {\r\n        this.addEventListener();\r\n    }\r\n\r\n    onDestroy() {\r\n        this.removeEventListener();\r\n    }\r\n\r\n    private addEventListener() {\r\n        const {canvas} = this.rootStore.canvasStore;\r\n        canvas.on(ObjectEventType.OBJECT_SCALING, this.listeners.onScaling);\r\n        canvas.on(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\r\n    }\r\n\r\n    private removeEventListener() {\r\n        const {canvas} = this.rootStore.canvasStore;\r\n        canvas.off(ObjectEventType.OBJECT_SCALING, this.listeners.onScaling);\r\n        canvas.off(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\r\n    }\r\n\r\n    private onScaling(e: IEvent) {\r\n        this.observer.get(ObjectEventType.OBJECT_SCALING)?.forEach(callbackFn => callbackFn(e));\r\n    }\r\n\r\n    private onModified(e: IEvent) {\r\n        this.observer.get(ObjectEventType.OBJECT_MODIFIED)?.forEach(callbackFn => callbackFn(e));\r\n    }\r\n\r\n    subscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\r\n        if (!this.observer.has(eventType)) {\r\n            this.observer.set(eventType, new Set());\r\n        }\r\n\r\n        this.observer.get(eventType)?.add(listener);\r\n    }\r\n\r\n    unsubscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\r\n        this.observer.get(eventType)?.delete(listener);\r\n    }\r\n}\r\n\r\nexport default ObjectEventStore;","import { makeAutoObservable } from \"mobx\";\r\nimport { ShapeType } from \"models/tools/Shape\";\r\nimport { ToolTypes } from \"models/tools/ToolTypes\";\r\nimport { CanvasModeManager } from \"./canvasStore\";\r\nimport { MouseEventObject, MouseEventStore, MouseEventType } from \"./mouseEventStore\";\r\nimport { ObjectManagerStore } from \"./objectManagerStore\";\r\nimport { RootStore, Store } from \"./rootStore\";\r\nimport {fabric} from \"fabric\";\r\n\r\nconst defaultStyles = {\r\n    shapeType: ShapeType.ELLIPSE,\r\n    fill: undefined,\r\n    strokeWidth: 3,\r\n    stroke: \"#000000\",\r\n}\r\n\r\ninterface ShapeStyles {\r\n    fill: string | undefined;\r\n    strokeWidth: number;\r\n    stroke: string | undefined;\r\n}\r\n\r\nexport class ShapeStore implements Store, CanvasModeManager {\r\n    private static readonly MIN_OBJECT_SIZE = 30;\r\n    private readonly canvas: fabric.Canvas;\r\n    private readonly mouseEventStore: MouseEventStore;\r\n    private readonly objectManager: ObjectManagerStore;\r\n    private readonly listeners: any;\r\n    private isDragMode = false;\r\n\r\n    item: fabric.Rect | fabric.Triangle | fabric.Ellipse | undefined;\r\n    shapeType = defaultStyles.shapeType;\r\n    fill: string | undefined = defaultStyles.fill;\r\n    strokeWidth = defaultStyles.strokeWidth;\r\n    stroke: string | undefined = defaultStyles.stroke;\r\n\r\n    constructor(private readonly rootStore: RootStore) {\r\n        makeAutoObservable(this);\r\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.SHAPE, this);\r\n        this.canvas = rootStore.canvasStore.canvas;\r\n        this.mouseEventStore = rootStore.mouseEventStore;\r\n        this.objectManager = rootStore.objectManagerStore;\r\n        this.listeners = {\r\n            onMouseUp: this.onMouseUp.bind(this),\r\n            onMouseDown: this.onMouseDown.bind(this),\r\n            onMouseMove: this.onMouseMove.bind(this),\r\n            updateObject: this.updateObject.bind(this),\r\n        }\r\n    }\r\n\r\n    onInit() {\r\n        this.addEventListeners();\r\n        this.addReactions();\r\n    }\r\n\r\n    onDestroy() {\r\n        this.removeEventListener();\r\n        this.removeReactions();\r\n    }\r\n\r\n    onSessionStart() {\r\n        this.rootStore.canvasStore.setAllCursor(\"crosshair\");\r\n    }\r\n\r\n    onSessionEnd() {\r\n        //\r\n    }\r\n\r\n    setShapeType(shapeType: ShapeType) {\r\n        this.shapeType = shapeType;\r\n    }\r\n\r\n    setFill(fill: string | undefined) {\r\n        this.fill = fill;\r\n        if (this.item) {\r\n            this.item.set({ fill: fill });\r\n            this.canvas.renderAll();\r\n        }\r\n    }\r\n\r\n    setStroke(stroke: string | undefined) {\r\n        this.stroke = stroke;\r\n        if (this.item) {\r\n            this.item.set({ stroke: stroke });\r\n            this.canvas.renderAll();\r\n        }\r\n    }\r\n\r\n    setStrokeWidth(strokeWidth: number) {\r\n        this.strokeWidth = strokeWidth;\r\n        if (this.item) {\r\n            this.item.set({ strokeWidth: strokeWidth });\r\n            this.canvas.renderAll();\r\n        }\r\n    }\r\n\r\n    private addReactions() {\r\n        this.objectManager.subscribe(this.listeners.updateObject);\r\n    }\r\n\r\n    private removeReactions() {\r\n        this.objectManager.unsubscribe(this.listeners.updateObject);\r\n    }\r\n\r\n    private updateObject(object: fabric.Object | undefined) {\r\n        if (this.isShape(object)) {\r\n            this.item = object;\r\n            this.updateShapeStyles();\r\n        } else {\r\n            this.item = undefined;\r\n        }\r\n    }\r\n\r\n    private setShapeStyles(styles: ShapeStyles) {\r\n        this.setFill(styles.fill);\r\n        this.setStroke(styles.stroke);\r\n        this.setStrokeWidth(styles.strokeWidth);\r\n    }\r\n\r\n    private updateShapeStyles() {\r\n        if (!this.item) {\r\n            return;\r\n        }\r\n\r\n        const {\r\n            stroke,\r\n            strokeWidth,\r\n            fill,\r\n        } = this.item;\r\n\r\n        this.setShapeStyles({\r\n            fill: fill === undefined ? fill : fill as string,\r\n            stroke: stroke,\r\n            strokeWidth: strokeWidth || defaultStyles.strokeWidth,\r\n        })\r\n    }\r\n\r\n    private addEventListeners() {\r\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\r\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\r\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\r\n    }\r\n\r\n    private removeEventListener() {\r\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\r\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\r\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\r\n    }\r\n\r\n    private isShapeTool() {\r\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.SHAPE;\r\n    }\r\n\r\n    private isShape(object: fabric.Object | undefined) {\r\n        return object?.isType(ShapeType.ELLIPSE.value) || object?.isType(ShapeType.RECT.value) || object?.isType(ShapeType.TRIANGLE.value);\r\n    }\r\n\r\n    private onMouseDown(e: MouseEventObject) {\r\n        if (!this.isShapeTool()) {\r\n            return;\r\n        }\r\n\r\n        this.isDragMode = true;\r\n        this.item = this.shapeType.getShape({\r\n            left: e.startCursorPosition.x,\r\n            top: e.startCursorPosition.y,\r\n            stroke: this.stroke,\r\n            strokeWidth: this.strokeWidth,\r\n            fill: this.fill,\r\n            selectable: false,\r\n            hoverCursor: \"default\",\r\n            strokeUniform: true,\r\n        });\r\n\r\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\r\n            this.item.set({\r\n                width: 0,\r\n                height: 0,\r\n            })\r\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\r\n            (this.item as fabric.Ellipse).set({\r\n                rx: 0,\r\n                ry: 0,\r\n            })\r\n        }\r\n\r\n        this.rootStore.canvasStore.canvas.add(this.item);\r\n    }\r\n\r\n    private onMouseMove(e: MouseEventObject) {\r\n        if (!this.isShapeTool() || !this.isDragMode || !this.item) {\r\n            return;\r\n        }\r\n\r\n        if (e.currentCursorPosition.x < e.startCursorPosition.x) {\r\n            this.item.set({ left: Math.abs(e.currentCursorPosition.x) });\r\n        }\r\n\r\n        if (e.currentCursorPosition.y < e.startCursorPosition.y) {\r\n            this.item.set({ top: Math.abs(e.currentCursorPosition.y) });\r\n        }\r\n\r\n        this.item.set({ flipX: e.currentCursorPosition.x < e.startCursorPosition.x });\r\n        this.item.set({ flipY: e.currentCursorPosition.y < e.startCursorPosition.y });\r\n\r\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\r\n            this.item.set({\r\n                width: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x),\r\n                height: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y),\r\n            });\r\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\r\n            (this.item as fabric.Ellipse).set({\r\n                rx: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x) / 2,\r\n                ry: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y) / 2,\r\n            })\r\n        }\r\n\r\n        this.rootStore.canvasStore.canvas.renderAll();\r\n    }\r\n\r\n    private onMouseUp(e: MouseEventObject) {\r\n        if (!this.isShapeTool() || !this.item) {\r\n            return;\r\n        }\r\n\r\n        this.isDragMode = false;\r\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\r\n            this.item.set({\r\n                width: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.width || ShapeStore.MIN_OBJECT_SIZE),\r\n                height: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.height || ShapeStore.MIN_OBJECT_SIZE),\r\n            }).setCoords();\r\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\r\n            const circle = this.item as fabric.Ellipse;\r\n            circle.set({\r\n                rx: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.rx || ShapeStore.MIN_OBJECT_SIZE / 2),\r\n                ry: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.ry || ShapeStore.MIN_OBJECT_SIZE / 2),\r\n            }).setCoords();\r\n        }\r\n\r\n        const canvasStore = this.rootStore.canvasStore;\r\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\r\n        canvasStore.canvas.setActiveObject(this.item);\r\n        canvasStore.canvas.renderAll();\r\n\r\n        this.item = undefined;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\nexport class UIStore {\r\n    constructor(private readonly rootStore: RootStore) {\r\n        makeAutoObservable(this);;\r\n    }\r\n}","import { MouseEventObject, MouseEventStore, MouseEventType } from \"./mouseEventStore\";\r\nimport { RootStore, Store } from \"./rootStore\";\r\nimport { fabric } from \"fabric\";\r\nimport { ToolTypes } from \"models/tools/ToolTypes\";\r\nimport { ObjectEventStore, ObjectEventType } from \"./objectEventStore\";\r\nimport { IEvent } from \"fabric/fabric-impl\";\r\nimport { ObjectManagerStore } from \"./objectManagerStore\";\r\nimport { makeAutoObservable } from \"mobx\";\r\nimport { FontFaces, fontSizes, FontStyle, FontWeight, TextAlign } from \"models/tools/Text\";\r\nimport WebFont from \"webfontloader\";\r\nimport { CanvasModeManager } from \"./canvasStore\";\r\n\r\nconst defaultStyles = {\r\n    FONT_SIZE: fontSizes[fontSizes.length / 2],\r\n    FILL: \"#000000\",\r\n    FONT_FAMILY: FontFaces.TIMES_NEW_ROMAN.value,\r\n    TEXT_ALIGN: TextAlign.LEFT,\r\n    FONT_STYLE: FontStyle.NORMAL,\r\n    FONT_WEIGHT: FontWeight.NORMAL,\r\n    UNDERLINE: false,\r\n}\r\n\r\ninterface TextStyles {\r\n    fontSize: number,\r\n    fill: string,\r\n    fontFamily: string,\r\n    textAlign: string,\r\n    fontStyle: string,\r\n    fontWeight: string | number,\r\n    underline: boolean,\r\n}\r\n\r\nexport class TextStore implements Store, CanvasModeManager {\r\n    private readonly objectManager: ObjectManagerStore;\r\n    private readonly mouseEventStore: MouseEventStore;\r\n    private readonly objectEventStore: ObjectEventStore;\r\n    private readonly canvas: fabric.Canvas;\r\n    private readonly listeners: any;\r\n    private fontStyle = defaultStyles.FONT_STYLE;\r\n    private fontWeight = defaultStyles.FONT_WEIGHT;\r\n    private autoRenderId: NodeJS.Timeout | undefined;\r\n\r\n    fontSize = defaultStyles.FONT_SIZE;\r\n    fill = defaultStyles.FILL;\r\n    fontFamily = defaultStyles.FONT_FAMILY;\r\n    textAlign = defaultStyles.TEXT_ALIGN;\r\n    underline = defaultStyles.UNDERLINE;\r\n    item: fabric.IText | undefined;\r\n\r\n    constructor(private readonly rootStore: RootStore) {\r\n        makeAutoObservable(this);\r\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.TEXT, this);\r\n        this.loadFont();\r\n        this.objectManager = rootStore.objectManagerStore;\r\n        this.mouseEventStore = rootStore.mouseEventStore;\r\n        this.objectEventStore = rootStore.objectEventStore;\r\n        this.canvas = rootStore.canvasStore.canvas;\r\n        this.listeners = {\r\n            onMouseUp: this.onMouseUp.bind(this),\r\n            onModified: this.onModified.bind(this),\r\n            updateObject: this.updateObject.bind(this),\r\n        }\r\n    }\r\n\r\n    onInit() {\r\n        this.addEventListener();\r\n        this.addFontAutoRender();\r\n    }\r\n\r\n    onDestroy() {\r\n        this.removeEventListener();\r\n        this.removeFontAutoRender();\r\n    }\r\n\r\n    onSessionStart() {\r\n        this.rootStore.canvasStore.setAllCursor(\"text\");\r\n    }\r\n\r\n    onSessionEnd() {\r\n        //\r\n    }\r\n\r\n    setFontSize(fontSize: number) {\r\n        this.fontSize = fontSize;\r\n        if (this.item) {\r\n            this.item.set({ fontSize: fontSize });\r\n            this.canvas.renderAll();\r\n        }\r\n    }\r\n\r\n    setFill(fill: string) {\r\n        this.fill = fill;\r\n        if (this.item) {\r\n            this.item.set({ fill: fill });\r\n            this.canvas.renderAll();\r\n        }\r\n    }\r\n\r\n    setFontFamily(fontFamily: string) {\r\n        this.fontFamily = fontFamily;\r\n        if (this.item) {\r\n            this.item.set({ fontFamily: fontFamily });\r\n            this.canvas.renderAll();\r\n        }\r\n    }\r\n\r\n    setTextAlign(textAlign: string) {\r\n        this.textAlign = textAlign;\r\n        if (this.item) {\r\n            this.item.set({ textAlign: textAlign });\r\n            this.canvas.renderAll();\r\n        }\r\n    }\r\n\r\n    setUnderline(underline: boolean) {\r\n        this.underline = underline;\r\n        if (this.item) {\r\n            this.item.set({ underline: underline });\r\n            this.canvas.renderAll();\r\n        }\r\n    }\r\n\r\n    setBold(bold: boolean) {\r\n        const changedValue = bold ? FontWeight.BOLD : FontWeight.NORMAL;\r\n        this.fontWeight = changedValue;\r\n        if (this.item) {\r\n            this.item.set({ fontWeight: changedValue });\r\n            this.canvas.renderAll();\r\n        }\r\n    }\r\n\r\n    isBold() {\r\n        return this.fontWeight === FontWeight.BOLD;\r\n    }\r\n\r\n    setItalic(italic: boolean) {\r\n        const changedValue = italic ? FontStyle.ITALIC : FontStyle.NORMAL;\r\n        this.fontStyle = changedValue;\r\n        if (this.item) {\r\n            this.item.set({ fontStyle: changedValue as any });\r\n            this.canvas.renderAll();\r\n        }\r\n    }\r\n\r\n    isItalic() {\r\n        return this.fontStyle === FontStyle.ITALIC;\r\n    }\r\n\r\n    private addEventListener() {\r\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\r\n        this.objectEventStore.subscribe(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\r\n        this.objectManager.subscribe(this.listeners.updateObject);\r\n    }\r\n\r\n    private removeEventListener() {\r\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\r\n        this.objectEventStore.unsubscribe(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\r\n        this.objectManager.unsubscribe(this.listeners.updateObject);\r\n    }\r\n\r\n    private updateObject(object: fabric.Object | undefined) {\r\n        if (object && this.isText(object)) {\r\n            this.item = object as fabric.IText;\r\n            this.updateTextStyles();\r\n        } else {\r\n            this.item = undefined;\r\n        }\r\n    }\r\n\r\n    private updateTextStyles() {\r\n        if (!this.item) {\r\n            return;\r\n        }\r\n\r\n        const {\r\n            fontSize,\r\n            fill,\r\n            fontFamily,\r\n            textAlign,\r\n            fontStyle,\r\n            fontWeight,\r\n            underline,\r\n        } = this.item;\r\n\r\n        this.setTextStyles({\r\n            fontSize: fontSize || defaultStyles.FONT_SIZE,\r\n            fill: !fill ? defaultStyles.FILL : fill as string,\r\n            fontFamily: fontFamily || defaultStyles.FONT_FAMILY,\r\n            textAlign: textAlign || defaultStyles.TEXT_ALIGN,\r\n            fontStyle: fontStyle || defaultStyles.FONT_STYLE,\r\n            fontWeight: fontWeight || defaultStyles.FONT_WEIGHT,\r\n            underline: !!underline,\r\n        })\r\n    }\r\n\r\n    private setTextStyles(styles: TextStyles) {\r\n        this.setFontSize(styles.fontSize);\r\n        this.setFill(styles.fill);\r\n        this.setFontFamily(styles.fontFamily);\r\n        this.setTextAlign(styles.textAlign);\r\n    }\r\n\r\n    private onMouseUp(e: MouseEventObject) {\r\n        if (!this.isTextTool()) {\r\n            return;\r\n        }\r\n\r\n        this.item = new fabric.IText(\"텍스트를 입력해주세요\", {\r\n            top: e.currentCursorPosition.y,\r\n            left: e.currentCursorPosition.x,\r\n            fontFamily: this.fontFamily,\r\n            fontSize: this.fontSize,\r\n            textAlign: this.textAlign,\r\n            lockUniScaling: true,\r\n            fill: this.fill,\r\n        });\r\n\r\n        this.item.setControlVisible(\"mt\", false);\r\n        this.item.setControlVisible(\"mb\", false);\r\n        this.item.setControlVisible(\"ml\", false);\r\n        this.item.setControlVisible(\"mr\", false);\r\n\r\n        const canvasStore = this.rootStore.canvasStore;\r\n        canvasStore.canvas.add(this.item);\r\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\r\n        canvasStore.canvas.setActiveObject(this.item);\r\n\r\n        this.item.selectAll();\r\n        this.item.enterEditing();\r\n    }\r\n\r\n    private onModified(e: IEvent) {\r\n        const { target } = e;\r\n        if (!target || !this.isText(target)) {\r\n            return;\r\n        }\r\n\r\n        const text = target as fabric.IText;\r\n        const fontSize = parseInt(((text.fontSize || defaultStyles.FONT_SIZE) * (text.scaleX || 1)).toFixed(0), 10);\r\n        text.set({\r\n            scaleX: 1,\r\n            scaleY: 1,\r\n        });\r\n        this.setFontSize(fontSize);\r\n    }\r\n\r\n    private isTextTool() {\r\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.TEXT;\r\n    }\r\n\r\n    private isText(object: fabric.Object) {\r\n        return object.isType(\"i-text\");\r\n    }\r\n\r\n    private loadFont() {\r\n        WebFont.load({\r\n            google: {\r\n                families: FontFaces.getGoogleFonts().map(font => font.value),\r\n            },\r\n        })\r\n    }\r\n\r\n    private addFontAutoRender() {\r\n        this.autoRenderId = setInterval(() => {\r\n            this.canvas.getActiveObjects()\r\n                .filter(object => this.isText(object))\r\n                .forEach((object) => {\r\n                    const textObject = object as fabric.IText;\r\n                    textObject.initDimensions();\r\n                    textObject.dirty = true;\r\n                });\r\n            fabric.util.clearFabricFontCache();\r\n            this.canvas.renderAll();\r\n        }, 1000);\r\n    }\r\n\r\n    private removeFontAutoRender() {\r\n        if (this.autoRenderId) {\r\n            clearInterval(this.autoRenderId);\r\n        }\r\n    }\r\n}","import { ToolTypes } from \"models/tools/ToolTypes\";\r\nimport { CanvasModeManager } from \"./canvasStore\";\r\nimport { RootStore } from \"./rootStore\";\r\n\r\nexport class SelectStore implements CanvasModeManager {\r\n    constructor(private readonly rootStore: RootStore) {\r\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.SELECT, this);\r\n    }\r\n\r\n    onSessionStart() {\r\n        this.rootStore.canvasStore.setSelectable(true);\r\n        this.rootStore.canvasStore.setHoverCursor(\"move\");\r\n    }\r\n\r\n    onSessionEnd() {\r\n        //\r\n    }\r\n}","import { fabric } from \"fabric\";\r\nimport { BrushStore } from \"./brushStore\";\r\nimport { CanvasStore } from \"./canvasStore\";\r\nimport { MouseEventStore } from \"./mouseEventStore\";\r\nimport { ObjectManagerStore } from \"./objectManagerStore\";\r\nimport { ObjectEventStore } from \"./objectEventStore\";\r\nimport { ShapeStore } from \"./shapeStore\";\r\nimport { UIStore } from \"./UIStore\";\r\nimport { TextStore } from \"./textStore\";\r\nimport { SelectStore } from \"./selectStore\";\r\n\r\nexport interface Store {\r\n    onInit: () => void;\r\n    onDestroy: () => void;\r\n}\r\n\r\nexport class RootStore implements Store {\r\n    private readonly canvasElement: HTMLCanvasElement;\r\n    canvasStore: CanvasStore;\r\n    objectManagerStore: ObjectManagerStore;\r\n    objectEventStore: ObjectEventStore;\r\n    mouseEventStore: MouseEventStore;\r\n\r\n    brushStore: BrushStore;\r\n    shapeStore: ShapeStore;\r\n    textStore: TextStore;\r\n    selectStore: SelectStore;\r\n    UIStore: UIStore;\r\n\r\n    constructor() {\r\n        this.canvasElement = document.createElement(\"canvas\");\r\n        document.body.append(this.canvasElement);\r\n\r\n        this.canvasStore = new CanvasStore(this, new fabric.Canvas(this.canvasElement));\r\n        this.objectManagerStore = new ObjectManagerStore(this);\r\n        this.objectEventStore = new ObjectEventStore(this);\r\n        this.mouseEventStore = new MouseEventStore(this);\r\n\r\n        this.brushStore = new BrushStore(this);\r\n        this.shapeStore = new ShapeStore(this);\r\n        this.textStore = new TextStore(this);\r\n        this.selectStore = new SelectStore(this);\r\n        this.UIStore = new UIStore(this);\r\n    }\r\n\r\n    onInit() {\r\n        Object.values(this).forEach(obj => {\r\n            if (obj.onInit) {\r\n                obj.onInit();\r\n            }\r\n        });\r\n    }\r\n\r\n    onDestroy() {\r\n        Object.values(this).forEach(obj => {\r\n            if (obj.onDestory) {\r\n                obj.onDestory();\r\n            }\r\n        });\r\n    }\r\n\r\n    init(container: HTMLElement): void {\r\n        container.append(this.canvasElement.parentElement!);\r\n    }\r\n}\r\n\r\nexport default new RootStore();","import {Canvas} from 'templates/canvas';\r\nimport React from 'react';\r\nimport {StoreProvider} from \"./contexts/storeContext\";\r\nimport rootStore from \"./stores/rootStore\";\r\nimport {CssBaseline} from \"@material-ui/core\";\r\n\r\nconst App = () => {\r\n    React.useEffect(() => {\r\n        document.title = \"캔버스\";\r\n    }, []);\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <CssBaseline />\r\n            <StoreProvider value={rootStore}>\r\n                <Canvas/>\r\n            </StoreProvider>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}