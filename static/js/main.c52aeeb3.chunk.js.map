{"version":3,"sources":["templates/layout/Layout.tsx","models/color/CommonColor.tsx","components/tools/ToolButton.tsx","contexts/storeContext.ts","hooks/useStores.tsx","models/tools/ToolTypes.ts","utils/FileUtils.tsx","components/tools/MenuToolButton.tsx","components/tools/ToolBox.tsx","models/tools/Brush.ts","models/tools/Text.ts","components/input/Range.tsx","components/input/ColorPicker.tsx","components/input/ColorPalette.tsx","hooks/usePrevious.tsx","components/input/ColorSelect.tsx","components/input/AlignButton.tsx","components/input/BoldButton.tsx","components/input/ItalicButton.tsx","components/input/UnderlineButton.tsx","components/input/TextStyleButton.tsx","components/tools/PropBoxLayout.tsx","components/tools/BrushPropBox.tsx","models/tools/Shape.ts","components/tools/ShapePropBox.tsx","components/tools/TextPropBox.tsx","components/tools/PropBox.tsx","templates/canvas/Canvas.tsx","App.tsx","stores/mouseEventStore.ts","stores/brushStore.ts","stores/canvasStore.ts","stores/objectManagerStore.ts","stores/objectEventStore.ts","stores/shapeStore.ts","stores/UIStore.ts","stores/textStore.ts","stores/selectStore.ts","stores/rootStore.ts","index.tsx"],"names":["useStyles","makeStyles","progressWrapper","display","justifyContent","alignItems","Layout","loading","children","classes","Fragment","CssBaseline","className","CircularProgress","CommonColor","theme","button","cursor","color","paddingTop","spacing","paddingBottom","paddingRight","paddingLeft","textAlign","caption","fontSize","selected","background","ToolButton","icon","text","onClick","clsx","StoreContext","React","createContext","StoreProvider","Provider","useStores","useContext","ToolTypes","value","_values","push","this","values","find","v","SELECT","BRUSH","SHAPE","TEXT","CANVAS","MimeType","FileUtils","fileName","blob","Blob","type","objectURL","window","URL","createObjectURL","write","dataURL","a","document","createElement","download","href","click","file","Promise","resolve","reject","reader","FileReader","onload","result","onerror","readAsText","StyledMenu","withStyles","paper","border","props","Menu","elevation","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","StyledMenuItem","root","backgroundColor","palette","primary","main","common","white","MenuItem","MenuToolButton","useState","anchorEl","setAnchorEl","canvasStore","inputRef","useRef","handleClose","onChange","e","target","files","item","read","then","jsonString","canvas","loadFromJSON","catch","console","error","ref","style","accept","event","currentTarget","keepMounted","open","Boolean","onClose","current","ListItemIcon","ListItemText","writeText","JSON","stringify","toJSON","fullQuality","toDataURL","appBarColor","left","center","flex","right","ToolBox","observer","AppBar","colorDefault","Toolbar","variant","setCanvasMode","canvasMode","BrushType","PENCIL","fabric","PencilBrush","CIRCLE","CircleBrush","SPRAY","SprayBrush","FontFaceType","label","Range","prefix","min","max","Typography","Input","margin","inputProps","endAdornment","InputAdornment","position","Slider","newValue","colorBox","width","height","borderStyle","borderColor","disabled","ColorPicker","Popover","disableAlpha","onChangeComplete","ColorPalette","Box","mb","usePrevious","useEffect","ColorSelect","previousColor","selectedValue","setSelectedValue","mr","flexBasis","rgb","r","g","b","hex","FormControl","fullWidth","Select","undefined","fontSizes","TextAlign","FontWeight","FontStyle","FontFaces","filter","font","GOOGLE","TIMES_NEW_ROMAN","DEFAULT","NOTO_SANS_KR","EAST_SEA_DOKDO","alignBox","alignButton","borderRadius","AlignButton","Button","BoldButton","bold","toggle","faBold","size","ItalicButton","italic","faItalic","UnderlineButton","underline","faUnderline","marginRight","TextStyleButton","toggleBold","toggleItalic","toggleUnderline","flexDirection","title","marginBottom","propBoxWrapper","PropBoxLayout","objectManagerStore","activeObject","getObjectTypeName","padding","propBox","BrushPropBox","brushStore","brushType","setBrushType","faPencilAlt","faSprayCan","faCircle","strokeWidth","setStrokeWidth","Divider","stroke","setStroke","ShapeType","options","RECT","Rect","ELLIPSE","Ellipse","TRIANGLE","Triangle","ShapePropBox","shapeStore","shapeType","setShapeType","cx","cy","fill","points","setFill","TextPropBox","textStore","fontFamily","setFontFamily","map","parseInt","setFontSize","isBold","isItalic","setBold","setItalic","setUnderline","setTextAlign","PropBox","selectedTool","isPath","isShape","isText","flexBox","contents","canvasWrapper","Canvas","rootStore","canvasRef","init","onDestory","App","MouseEventType","defaultStyles","BrushStore","listeners","objectManager","makeAutoObservable","registerCanvasModeManager","updateObject","bind","addReactions","removeReactions","isDrawingMode","setFreeDrawingBrush","set","freeDrawingBrush","renderAll","getBrush","object","isBrush","updatePathStyles","styles","setPathStyles","isType","subscribe","unsubscribe","CanvasStore","canvasModeManagers","Map","setWidth","setHeight","setBackgroundColor","dispose","mode","manager","previousMode","discardActiveObject","setAllCursor","setSelectable","get","onSessionEnd","onSessionStart","selectable","selection","getObjects","forEach","obj","defaultCursor","hoverCursor","setDefaultCursor","setHoverCursor","SelectionEventType","MouseEventStore","startCursorPosition","x","y","currentCursorPosition","onMouseDown","onMouseUp","onMouseMove","addEventListeners","removeEventListeners","eventType","listener","has","fn","getCursorPosition","MOUSE_DOWN","callback","MOUSE_MOVE","MOUSE_UP","on","off","getPointer","ObjectEventType","ObjectManagerStore","Set","onSelected","onCleared","SELECTION_CREATED","SELECTION_UPDATED","SELECTION_CLEARED","reaction","add","delete","isRect","isEllipse","isTriangle","ObjectEventStore","onScaling","onModified","addEventListener","removeEventListener","OBJECT_SCALING","OBJECT_MODIFIED","callbackFn","ShapeStore","mouseEventStore","isDragMode","updateShapeStyles","setShapeStyles","isShapeTool","getShape","top","strokeUniform","rx","ry","Math","abs","flipX","flipY","MIN_OBJECT_SIZE","setCoords","circle","setActiveObject","UIStore","FONT_SIZE","length","FILL","FONT_FAMILY","TEXT_ALIGN","FONT_STYLE","FONT_WEIGHT","UNDERLINE","TextStore","objectEventStore","fontStyle","fontWeight","autoRenderId","loadFont","addFontAutoRender","removeFontAutoRender","changedValue","updateTextStyles","setTextStyles","isTextTool","IText","lockUniScaling","setControlVisible","selectAll","enterEditing","scaleX","toFixed","scaleY","WebFont","load","google","families","getGoogleFonts","setInterval","getActiveObjects","textObject","initDimensions","dirty","util","clearFabricFontCache","clearInterval","SelectStore","canvasElement","selectStore","body","append","Object","container","parentElement","onInit","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c52aeeb3.chunk.js","sourcesContent":["import React from \"react\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport {CircularProgress} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\nconst useStyles = makeStyles(() => ({\n    progressWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n    }\n}))\n\nconst Layout = ({ loading, children }: Props) => {\n    const classes = useStyles();\n\n    return (\n        <React.Fragment>\n            <CssBaseline />\n            <div>\n                {loading ? (\n                    <div className={classes.progressWrapper}><CircularProgress /></div>\n                ) : children}\n            </div>\n        </React.Fragment>\n    )\n}\n\ninterface Props {\n    loading?: boolean;\n    children: React.ReactElement | React.ReactElement[];\n}\n\nexport default Layout;","export const CommonColor = {\n    PRIMARY: \"#ac76ff\",\n    BACKGROUND_GRADIENT: \"linear-gradient(90deg, rgba(172,118,255,1) 0%, rgba(91,91,255,1) 100%)\",\n    BACKGROUND_GRADIENT_HOVER: \"linear-gradient(90deg, rgba(172,118,255,.4) 0%, rgba(91,91,255,.4) 100%)\",\n}","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport clsx from \"clsx\";\nimport {CommonColor} from \"../../models/color/CommonColor\";\n\nconst useStyles = makeStyles((theme) => ({\n    button: {\n        display: \"inline-block\",\n        cursor: \"pointer\",\n        color: \"#fff\",\n        paddingTop: theme.spacing(0.5),\n        paddingBottom: theme.spacing(0.5),\n        paddingRight: theme.spacing(3),\n        paddingLeft: theme.spacing(3),\n        textAlign: \"center\",\n    },\n    caption: {\n        fontSize: \"0.70rem\",\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n    }\n}));\n\nconst ToolButton = ({icon, text, onClick, selected}: Props) => {\n    const classes = useStyles();\n    return (\n        <div className={clsx(classes.button, {\n            [classes.selected]: selected,\n        })} onClick={onClick}>\n            {icon}\n            <div className={classes.caption}>{text}</div>\n        </div>\n    )\n}\n\ninterface Props {\n    icon: any;\n    text: string;\n    onClick: (event: React.MouseEvent<HTMLElement>) => void;\n    selected?: boolean;\n}\n\nexport default ToolButton;","import React from \"react\";\nimport { RootStore } from \"stores/rootStore\";\n\nexport const StoreContext = React.createContext<RootStore>({} as RootStore);\nexport const StoreProvider = StoreContext.Provider;","import React from \"react\";\nimport {RootStore} from \"../stores/rootStore\";\nimport {StoreContext} from \"../contexts/storeContext\";\n\nexport const useStores = (): RootStore => React.useContext(StoreContext);","export class ToolTypes {\n    private static readonly _values: ToolTypes[] = [];\n    public static readonly SELECT = new ToolTypes(\"select\", \"선택\");\n    public static readonly BRUSH = new ToolTypes(\"brush\", \"브러쉬\");\n    public static readonly SHAPE = new ToolTypes(\"shape\", \"셰이프\");\n    public static readonly TEXT = new ToolTypes(\"text\", \"텍스트\");\n    public static readonly CANVAS = new ToolTypes(\"canvas\", \"캔버스\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        ToolTypes._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n}","enum MimeType {\n    TEXT = \"text/plain\",\n}\n\nexport class FileUtils {\n    public static writeText(fileName: string, text: string) {\n        const blob = new Blob([text], { type: MimeType.TEXT });\n        const objectURL = window.URL.createObjectURL(blob);\n        this.write(fileName, objectURL);\n    }\n\n    public static write(fileName: string, dataURL: string) {\n        const a = document.createElement('a');\n        a.download = fileName;\n        a.href = dataURL;\n        a.click();\n    }\n\n    public static async read(file: File): Promise<string> {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.onload = () => resolve(reader.result as string);\n            reader.onerror = () => reject();\n            reader.readAsText(file);\n        });\n    }\n}","import React from \"react\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport Menu, {MenuProps} from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ToolButton from \"./ToolButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport SaveAltIcon from \"@material-ui/icons/SaveAlt\";\nimport {useStores} from \"../../hooks/useStores\";\nimport {FileUtils} from \"../../utils/FileUtils\";\n\nconst StyledMenu = withStyles({\n    paper: {\n        border: \"1px solid #d3d4d5\",\n    },\n})((props: MenuProps) => (\n    <Menu\n        elevation={0}\n        getContentAnchorEl={null}\n        anchorOrigin={{\n            vertical: \"bottom\",\n            horizontal: \"center\",\n        }}\n        transformOrigin={{\n            vertical: \"top\",\n            horizontal: \"center\",\n        }}\n        {...props}\n    />\n));\n\nconst StyledMenuItem = withStyles((theme) => ({\n    root: {\n        \"&:focus\": {\n            backgroundColor: theme.palette.primary.main,\n            \"& .MuiListItemIcon-root, & .MuiListItemText-primary\": {\n                color: theme.palette.common.white,\n            },\n        },\n    },\n}))(MenuItem);\n\nexport default function MenuToolButton() {\n    const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\n    const {canvasStore} = useStores();\n    const inputRef = React.useRef<HTMLInputElement>(null);\n\n    const handleClick = (event: React.MouseEvent<HTMLElement>) => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleFileOpen = () => {\n        inputRef.current?.click();\n        handleClose();\n    }\n\n    const handleFileChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n        const file = e.target.files?.item(0);\n        e.target.value = \"\";\n\n        if (!!file) {\n            FileUtils.read(file).then(jsonString => {\n                canvasStore.canvas.loadFromJSON(jsonString, () => {\n                    //\n                })\n            }).catch(e => console.error(e));\n        }\n    }\n\n    const handleSave = () => {\n        FileUtils.writeText(\"canvas.json\", JSON.stringify(canvasStore.canvas.toJSON()));\n        handleClose();\n    }\n\n    const handleImageSave = () => {\n        const fullQuality = canvasStore.canvas.toDataURL();\n        FileUtils.write(\"canvas.png\", fullQuality);\n        handleClose();\n    }\n\n    return (\n        <div>\n            <input\n                type={\"file\"}\n                onChange={handleFileChange}\n                ref={inputRef}\n                style={{display: \"none\"}}\n                accept=\"application/json\"\n            />\n            <ToolButton icon={<MenuIcon/>} text={\"메뉴\"} onClick={handleClick}/>\n            <StyledMenu\n                anchorEl={anchorEl}\n                keepMounted\n                open={Boolean(anchorEl)}\n                onClose={handleClose}\n            >\n                <StyledMenuItem onClick={handleFileOpen}>\n                    <ListItemIcon>\n                        <DescriptionIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"열기\"/>\n                </StyledMenuItem>\n                <StyledMenuItem onClick={handleSave}>\n                    <ListItemIcon>\n                        <SaveIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"저장\"/>\n                </StyledMenuItem>\n                <StyledMenuItem onClick={handleImageSave}>\n                    <ListItemIcon>\n                        <SaveAltIcon fontSize=\"small\"/>\n                    </ListItemIcon>\n                    <ListItemText primary=\"이미지로 저장\"/>\n                </StyledMenuItem>\n            </StyledMenu>\n        </div>\n    );\n}","import React from \"react\";\nimport {AppBar, Toolbar} from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {observer} from \"mobx-react\";\nimport {useStores} from \"../../hooks/useStores\";\nimport ToolButton from \"./ToolButton\";\nimport MouseIcon from '@material-ui/icons/Mouse';\nimport DashboardIcon from '@material-ui/icons/Dashboard';\nimport BrushIcon from \"@material-ui/icons/Brush\";\nimport {ToolTypes} from \"../../models/tools/ToolTypes\";\nimport MenuToolButton from \"./MenuToolButton\";\nimport TextFieldsIcon from \"@material-ui/icons/TextFields\";\nimport PhotoSizeSelectSmallIcon from \"@material-ui/icons/PhotoSizeSelectSmall\";\n\nconst useStyles = makeStyles(() => ({\n    appBarColor: {\n        backgroundColor: \"rgba(30,30,30,0.95)\",\n    },\n    left: {\n        justifyContent: \"flex-start\",\n    },\n    center: {\n        display: \"flex\",\n        flex: 1,\n        justifyContent: \"center\",\n    },\n    right: {\n        justifyContent: \"flex-end\",\n    }\n}));\n\nconst ToolBox = observer(() => {\n    const classes = useStyles();\n    const {canvasStore} = useStores();\n\n    return (\n        <AppBar\n            classes={{\n                colorDefault: classes.appBarColor,\n            }}\n            color={\"default\"}\n            elevation={0}\n        >\n            <Toolbar variant={\"dense\"}>\n                <div className={classes.left}>\n                    <MenuToolButton/>\n                </div>\n                <div className={classes.center}>\n                    <ToolButton\n                        icon={<MouseIcon/>}\n                        text={ToolTypes.SELECT.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SELECT)}\n                        selected={canvasStore.canvasMode === ToolTypes.SELECT}\n                    />\n                    <ToolButton\n                        icon={<BrushIcon/>}\n                        text={ToolTypes.BRUSH.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.BRUSH)}\n                        selected={canvasStore.canvasMode === ToolTypes.BRUSH}\n                    />\n                    <ToolButton\n                        icon={<DashboardIcon/>}\n                        text={ToolTypes.SHAPE.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.SHAPE)}\n                        selected={canvasStore.canvasMode === ToolTypes.SHAPE}\n                    />\n                    <ToolButton\n                        icon={<TextFieldsIcon/>}\n                        text={ToolTypes.TEXT.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.TEXT)}\n                        selected={canvasStore.canvasMode === ToolTypes.TEXT}\n                    />\n                    <ToolButton\n                        icon={<PhotoSizeSelectSmallIcon/>}\n                        text={ToolTypes.CANVAS.display}\n                        onClick={() => canvasStore.setCanvasMode(ToolTypes.CANVAS)}\n                        selected={canvasStore.canvasMode === ToolTypes.CANVAS}\n                    />\n                </div>\n                <div className={classes.right}>\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n})\n\nexport default ToolBox;","import {fabric} from \"fabric\";\n\nexport class BrushType {\n    private static readonly _values: BrushType[] = [];\n    public static readonly PENCIL = new BrushType(\"pencil\", \"연필\");\n    public static readonly CIRCLE = new BrushType(\"circle\", \"원형\");\n    public static readonly SPRAY = new BrushType(\"spray\", \"스프레이\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        BrushType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getBrush(canvas: fabric.Canvas) {\n        switch (this) {\n            case BrushType.PENCIL:\n                return new (fabric.PencilBrush as any)(canvas);\n            case BrushType.CIRCLE:\n                return new (fabric.CircleBrush as any)(canvas);\n            case BrushType.SPRAY:\n                return new (fabric.SprayBrush as any)(canvas);\n            default:\n                return new (fabric.PencilBrush as any)(canvas);\n        }\n    }\n}","export const fontSizes = [8, 9, 10, 11, 12, 14, 16, 18, 20, 22, 24, 26, 28, 36, 48, 72, 94, 130];\n\nexport enum FontFaceType {\n    DEFAULT,\n    GOOGLE,\n}\n\nexport const TextAlign = {\n    LEFT: \"left\",\n    CENTER: \"center\",\n    RIGHT: \"right\",\n}\n\nexport const FontWeight = {\n    NORMAL: \"normal\",\n    BOLD: \"bold\",\n}\n\nexport const FontStyle = {\n    NORMAL: \"normal\",\n    ITALIC: \"italic\",\n}\n\nexport class FontFaces {\n    private static readonly _values: FontFaces[] = [];\n    public static readonly TIMES_NEW_ROMAN = new FontFaces(\"Times New Roman\", \"Times New Roman\", FontFaceType.DEFAULT);\n    public static readonly NOTO_SANS_KR = new FontFaces(\"Noto Sans KR\", \"Noto Sans KR\", FontFaceType.GOOGLE);\n    public static readonly EAST_SEA_DOKDO = new FontFaces(\"East Sea Dokdo\", \"East Sea Dokdo\", FontFaceType.GOOGLE);\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n        public readonly type: FontFaceType,\n    ) {\n        FontFaces._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public static getGoogleFonts() {\n        return this.values().filter(font => font.type === FontFaceType.GOOGLE);\n    }\n}","import React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { Slider } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport { Typography } from \"@material-ui/core\";\nimport { InputAdornment } from \"@material-ui/core\";\n\ninterface Props {\n    label: string;\n    value: number;\n    onChange: (value: number) => void;\n    prefix?: string;\n    min?: number;\n    max?: number;\n}\n\nconst useStyles = makeStyles(theme => ({\n    label: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n    }\n}));\n\nconst Range = ({ label, value, onChange, prefix, min, max }: Props) => {\n    const classes = useStyles();\n\n    const handleSliderChange = (event: any, newValue: number | number[]) => {\n        if (typeof newValue === \"number\") {\n            onChange(newValue);\n        }\n    };\n\n    return (\n        <div>\n            <div className={classes.label}>\n                <Typography variant={\"caption\"}>{label}</Typography>\n                <Input\n                    value={value}\n                    margin=\"dense\"\n                    inputProps={{\n                        min: 1,\n                        max: 100,\n                        type: 'number',\n                    }}\n                    endAdornment={<InputAdornment position=\"end\">{prefix}</InputAdornment>}\n                />\n            </div>\n            <div>\n                <Slider\n                    min={min}\n                    max={max}\n                    value={value}\n                    onChange={handleSliderChange}\n                />\n            </div>\n        </div>\n    )\n}\n\nexport default Range;","import { Popover, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport { ChromePicker, ColorResult } from \"react-color\"\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\n\ninterface Props {\n    label?: string,\n    color: string | undefined,\n    disableAlpha?: boolean,\n    disabled?: boolean,\n    onChange: (color: ColorResult) => void;\n}\n\nconst useStyles = makeStyles((theme) => ({\n    colorBox: {\n        width: \"100%\",\n        height: 35,\n        border: 1,\n        borderStyle: \"solid\",\n        borderColor: \"#c0c0c0\",\n        backgroundColor: (props: Props) => props.color,\n        cursor: (props: Props) => !props.disabled ? \"pointer\" : \"default\",\n    }\n}));\n\nconst ColorPicker = (props: Props) => {\n    const classes = useStyles(props);\n    const [anchorEl, setAnchorEl] = React.useState<HTMLButtonElement | null>(null);\n    const open = !!anchorEl;\n\n    const handleClick = (e: any) => {\n        setAnchorEl(e.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    return (\n        <div>\n            {props.label && <Typography variant={\"caption\"}>{props.label}</Typography>}\n            <div>\n                <div className={classes.colorBox} onClick={handleClick} />\n                <Popover\n                    open={open && !props.disabled}\n                    anchorEl={anchorEl}\n                    onClose={handleClose}\n                >\n                    <ChromePicker color={props.color} disableAlpha={props.disableAlpha} onChangeComplete={props.onChange} />\n                </Popover>\n            </div>\n        </div>\n    )\n}\n\nexport default ColorPicker;","import { Box } from \"@material-ui/core\";\nimport React from \"react\";\nimport { ColorResult, TwitterPicker } from \"react-color\"\nimport ColorPicker from \"./ColorPicker\";\n\ninterface Props {\n    color: string,\n    disableAlpha?: boolean,\n    onChange: (color: ColorResult) => void;\n}\n\nconst ColorPalette = (props: Props) => {\n    return (\n        <div>\n            <Box mb={2}>\n                <ColorPicker {...props} />\n            </Box>\n            <TwitterPicker width={\"100%\"} color={props.color} onChangeComplete={props.onChange} />\n        </div>\n    )\n}\n\nexport default ColorPalette;","import React from \"react\";\n\nconst usePrevious = (value: any) => {\n    const ref = React.useRef();\n    React.useEffect(() => {\n        ref.current = value;\n    });\n\n    return ref.current;\n}\n\nexport default usePrevious;","import { Select } from \"@material-ui/core\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { FormControl } from \"@material-ui/core\";\nimport { Box } from \"@material-ui/core\";\nimport usePrevious from \"hooks/usePrevious\";\nimport { CommonColor } from \"models/color/CommonColor\";\nimport React from \"react\"\nimport { ColorResult } from \"react-color\"\nimport ColorPicker from \"./ColorPicker\"\n\ninterface Props {\n    color: string | undefined;\n    onChange: (color: string | undefined) => void;\n}\n\nconst ColorSelect = ({ color, onChange }: Props) => {\n    const previousColor = usePrevious(color);\n    const [selectedValue, setSelectedValue] = React.useState<string>(!color ? \"none\" : \"solid\");\n\n    const handleColorChange = (color: ColorResult) => {\n        const rgb = !color.rgb.a && color.rgb.a !== 0 ? color.hex : `rgba(${color.rgb.r}, ${color.rgb.g}, ${color.rgb.b}, ${color.rgb.a})`;\n        onChange(rgb);\n    }\n\n    const handleSelectedValueChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const value = event.target.value as string;\n        setSelectedValue(value);\n\n        if (value === \"none\") {\n            onChange(undefined);\n        } else {\n            onChange(previousColor || CommonColor.PRIMARY);\n        }\n    };\n\n    return (\n        <Box display={\"flex\"}>\n            <Box mr={1.5} flexBasis={35}>\n                <ColorPicker color={color} onChange={handleColorChange} disabled={selectedValue === \"none\"} />\n            </Box>\n            <Box flex={1}>\n                <FormControl fullWidth>\n                    <Select\n                        value={selectedValue}\n                        onChange={handleSelectedValueChange}\n                    >\n                        <MenuItem value=\"none\">\n                            <em>없음</em>\n                        </MenuItem>\n                        <MenuItem value={\"solid\"}>단색</MenuItem>\n                    </Select>\n                </FormControl>\n            </Box>\n        </Box>\n    )\n}\n\nexport default ColorSelect","import FormatAlignLeftIcon from '@material-ui/icons/FormatAlignLeft';\nimport FormatAlignCenterIcon from '@material-ui/icons/FormatAlignCenter';\nimport FormatAlignRightIcon from '@material-ui/icons/FormatAlignRight';\nimport React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport { Button } from '@material-ui/core';\nimport clsx from 'clsx';\nimport { TextAlign } from 'models/tools/Text';\nimport { CommonColor } from 'models/color/CommonColor';\n\nconst useStyles = makeStyles((theme) => ({\n    alignBox: {\n        display: \"flex\",\n        border: 2,\n        borderStyle: \"solid\",\n        borderColor: \"#ddd\",\n    },\n    alignButton: {\n        flex: 1,\n        borderRadius: 0,\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        color: \"#ffffff\",\n    }\n}));\n\ninterface Props {\n    textAlign: string,\n    onChange: (textAlign: string) => void,\n}\n\nconst AlignButton = ({textAlign, onChange}: Props) => {\n    const classes = useStyles();\n    \n    return (\n        <div className={classes.alignBox}>\n            <Button className={clsx(classes.alignButton, textAlign === TextAlign.LEFT && classes.selected)} onClick={() => onChange(TextAlign.LEFT)}>\n                <FormatAlignLeftIcon/>\n            </Button>\n            <Button className={clsx(classes.alignButton, textAlign === TextAlign.CENTER && classes.selected)} onClick={() => onChange(TextAlign.CENTER)}>\n                <FormatAlignCenterIcon/>\n            </Button>\n            <Button className={clsx(classes.alignButton, textAlign === TextAlign.RIGHT && classes.selected)} onClick={() => onChange(TextAlign.RIGHT)}>\n                <FormatAlignRightIcon/>\n            </Button>\n        </div>\n    )\n}\n\nexport default AlignButton;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBold } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CommonColor } from \"models/color/CommonColor\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        borderRadius: 0,\n        border: 2,\n        borderStyle: \"solid\",\n        borderColor: \"#ddd\",\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        color: \"#ffffff\",\n    }\n}));\n\n\ninterface Props {\n    bold: boolean,\n    toggle: (bold: boolean) => void,\n}\n\nconst BoldButton = ({bold, toggle}: Props) => {\n    const classes = useStyles();\n    return (\n        <Button className={clsx(classes.button, bold && classes.selected)} onClick={() => toggle(!bold)}>\n            <FontAwesomeIcon icon={faBold} size=\"lg\" />\n        </Button>\n    )\n}\n\nexport default BoldButton;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faItalic } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CommonColor } from \"models/color/CommonColor\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        borderRadius: 0,\n        border: 2,\n        borderStyle: \"solid\",\n        borderColor: \"#ddd\",\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        color: \"#ffffff\",\n    }\n}));\n\n\ninterface Props {\n    italic: boolean,\n    toggle: (bold: boolean) => void,\n}\n\nconst ItalicButton = ({italic, toggle}: Props) => {\n    const classes = useStyles();\n    return (\n        <Button className={clsx(classes.button, italic && classes.selected)} onClick={() => toggle(!italic)}>\n            <FontAwesomeIcon icon={faItalic} size=\"lg\" />\n        </Button>\n    )\n}\n\nexport default ItalicButton;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUnderline } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { CommonColor } from \"models/color/CommonColor\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(() => ({\n    button: {\n        borderRadius: 0,\n        border: 2,\n        borderStyle: \"solid\",\n        borderColor: \"#ddd\",\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        color: \"#ffffff\",\n    }\n}));\n\n\ninterface Props {\n    underline: boolean,\n    toggle: (bold: boolean) => void,\n}\n\nconst UnderlineButton = ({underline, toggle}: Props) => {\n    const classes = useStyles();\n    return (\n        <Button className={clsx(classes.button, underline && classes.selected)} onClick={() => toggle(!underline)}>\n            <FontAwesomeIcon icon={faUnderline} size=\"lg\" />\n        </Button>\n    )\n}\n\nexport default UnderlineButton;","import React from 'react';\nimport makeStyles from '@material-ui/core/styles/makeStyles';\nimport BoldButton from './BoldButton';\nimport ItalicButton from './ItalicButton';\nimport UnderlineButton from './UnderlineButton';\n\nconst useStyles = makeStyles((theme) => ({\n    alignBox: {\n        display: \"flex\",\n        \"& > *\": {\n            flex: 1,\n            marginRight: theme.spacing(1),\n            paddingTop: theme.spacing(1),\n            paddingBottom: theme.spacing(1),\n            \"&:last-child\": {\n                marginRight: 0,\n            }\n        }\n    },\n}));\n\ninterface Props {\n    bold: boolean;\n    italic: boolean;\n    underline: boolean;\n    toggleBold: (bold: boolean) => void;\n    toggleItalic: (italic: boolean) => void;\n    toggleUnderline: (underline: boolean) => void;\n}\n\nconst TextStyleButton = ({bold, italic, underline, toggleBold, toggleItalic, toggleUnderline}: Props) => {\n    const classes = useStyles();\n    \n    return (\n        <div className={classes.alignBox}>\n            <BoldButton bold={bold} toggle={toggleBold}/>\n            <ItalicButton italic={italic} toggle={toggleItalic}/>\n            <UnderlineButton underline={underline} toggle={toggleUnderline}/>\n        </div>\n    )\n}\n\nexport default TextStyleButton;","import { Typography } from \"@material-ui/core\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { useStores } from \"hooks/useStores\";\nimport { observer } from \"mobx-react\";\nimport React from \"react\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n    },\n    title: {\n        marginBottom: theme.spacing(3),\n    },\n    propBoxWrapper: {\n        flex: 1,\n        display: \"flex\",\n        flexDirection: \"column\",\n    },\n}))\n\nconst PropBoxLayout: React.FC = observer(({ children }) => {\n    const classes = useStyles();\n    const { canvasStore, objectManagerStore } = useStores();\n\n    return (\n        <div className={classes.root}>\n            <div className={classes.title}>\n                <Typography variant={\"h6\"} color={\"primary\"}>{objectManagerStore.activeObject ? objectManagerStore.getObjectTypeName() : canvasStore.canvasMode.display}</Typography>\n            </div>\n            <div className={classes.propBoxWrapper}>\n                {children}\n            </div>\n        </div>\n    )\n})\n\nexport default PropBoxLayout;","import { Box, Divider, Typography } from \"@material-ui/core\";\nimport { BrushType } from \"../../models/tools/Brush\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { observer } from \"mobx-react\";\nimport { useStores } from \"../../hooks/useStores\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPencilAlt, faSprayCan, faCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport clsx from \"clsx\";\nimport { CommonColor } from \"../../models/color/CommonColor\";\nimport { ColorPalette, Range } from \"components/input\";\nimport PropBoxLayout from \"./PropBoxLayout\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        \"&:hover\": {\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\n            \"& *\": {\n                color: \"white\",\n            }\n        },\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        \"& *\": {\n            color: \"white\",\n        }\n    },\n    propBox: {\n        flex: 1,\n        \"& > div\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}))\n\nconst BrushPropBox = observer(() => {\n    const classes = useStyles();\n    const { brushStore } = useStores();\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                {!brushStore.item && <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>모양</Typography>\n                    </Box>\n                    <Box display=\"flex\">\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.PENCIL && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.PENCIL)}\n                        >\n                            <FontAwesomeIcon icon={faPencilAlt} size=\"lg\" />\n                        </div>\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.SPRAY && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.SPRAY)}\n                        >\n                            <FontAwesomeIcon icon={faSprayCan} size=\"lg\" />\n                        </div>\n                        <div\n                            className={clsx(classes.button, brushStore.brushType === BrushType.CIRCLE && classes.selected)}\n                            onClick={() => brushStore.setBrushType(BrushType.CIRCLE)}\n                        >\n                            <FontAwesomeIcon icon={faCircle} size=\"lg\" />\n                        </div>\n                    </Box>\n                </div>}\n                <div>\n                    <Range\n                        label=\"두께\"\n                        value={brushStore.strokeWidth}\n                        onChange={(strokeWidth) => brushStore.setStrokeWidth(strokeWidth)}\n                        prefix={\"px\"}\n                        min={1}\n                    />\n                </div>\n            </div>\n            <div>\n                <Box paddingTop={3} paddingBottom={3}><Divider /></Box>\n                <ColorPalette color={brushStore.stroke} onChange={(color) => brushStore.setStroke(color.hex)} disableAlpha={true} />\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default BrushPropBox;","import {fabric} from \"fabric\";\n\nexport class ShapeType {\n    private static readonly _values: ShapeType[] = [];\n    public static readonly RECT = new ShapeType(\"rect\", \"사각형\");\n    public static readonly ELLIPSE = new ShapeType(\"ellipse\", \"원\");\n    public static readonly TRIANGLE = new ShapeType(\"triangle\", \"삼각형\");\n\n    constructor(\n        public readonly value: string,\n        public readonly display: string,\n    ) {\n        ShapeType._values.push(this);\n    }\n\n    public static values() {\n        return this._values;\n    }\n\n    public static valueOf(value: string) {\n        return this.values().find(v => v.value === value);\n    }\n\n    public getShape<T extends fabric.IObjectOptions>(options?: T) {\n        switch (this) {\n            case ShapeType.RECT:\n                return new fabric.Rect(options);\n            case ShapeType.ELLIPSE:\n                return new fabric.Ellipse(options);\n            case ShapeType.TRIANGLE:\n                return new fabric.Triangle(options);\n            default:\n                return new fabric.Rect(options);\n        }\n    }\n}","import { Box, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { observer } from \"mobx-react\";\nimport { ShapeType } from \"../../models/tools/Shape\";\nimport clsx from \"clsx\";\nimport { CommonColor } from \"../../models/color/CommonColor\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport { useStores } from \"hooks/useStores\";\nimport { ColorSelect, Range } from \"components/input\";\n\nconst useStyles = makeStyles(theme => ({\n    button: {\n        borderRadius: \"4px\",\n        cursor: \"pointer\",\n        padding: theme.spacing(1),\n        marginRight: theme.spacing(0.5),\n        height: 40,\n        \"&:hover\": {\n            background: CommonColor.BACKGROUND_GRADIENT_HOVER,\n            \"& svg > *\": {\n                stroke: \"white\",\n            }\n        },\n    },\n    selected: {\n        background: CommonColor.BACKGROUND_GRADIENT,\n        \"& svg > *\": {\n            stroke: \"white\",\n        }\n    },\n    propBox: {\n        \"& > div\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}))\n\nconst ShapePropBox = observer(() => {\n    const classes = useStyles();\n    const { shapeStore } = useStores();\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                {!shapeStore.item && <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>모양</Typography>\n                    </Box>\n                    <Box display={\"flex\"}>\n                        <div\n                            className={clsx(classes.button, shapeStore.shapeType === ShapeType.ELLIPSE && classes.selected)}\n                            onClick={() => shapeStore.setShapeType(ShapeType.ELLIPSE)}\n                        >\n                            <svg height=\"24\" width=\"24\">\n                                <circle cx=\"12\" cy=\"12\" r=\"10\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\n                            </svg>\n                        </div>\n                        <div\n                            className={clsx(classes.button, shapeStore.shapeType === ShapeType.RECT && classes.selected)}\n                            onClick={() => shapeStore.setShapeType(ShapeType.RECT)}\n                        >\n                            <svg width=\"24\" height=\"24\">\n                                <rect width=\"24\" height=\"24\" stroke=\"black\" fill=\"transparent\" strokeWidth={4} />\n                            </svg>\n                        </div>\n                        <div\n                            className={clsx(classes.button, shapeStore.shapeType === ShapeType.TRIANGLE && classes.selected)}\n                            onClick={() => shapeStore.setShapeType(ShapeType.TRIANGLE)}\n                        >\n                            <svg width=\"24\" height=\"24\">\n                                <polygon points=\"12,2 22,22 2,22\" stroke=\"black\" fill=\"transparent\" strokeWidth={2} />\n                            </svg>\n                        </div>\n                    </Box>\n                </div>}\n                <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>채우기</Typography>\n                        <div>\n                            <ColorSelect color={shapeStore.fill} onChange={(color: string | undefined) => shapeStore.setFill(color)} />\n                        </div>\n                    </Box>\n                </div>\n                <div>\n                    <Box mb={1}>\n                        <Typography variant={\"caption\"}>선 색상</Typography>\n                        <div>\n                            <ColorSelect color={shapeStore.stroke} onChange={(color: string | undefined) => shapeStore.setStroke(color)} />\n                        </div>\n                    </Box>\n                </div>\n                <div>\n                    <Range label=\"선 두께\" value={shapeStore.strokeWidth} onChange={(strokeWidth) => shapeStore.setStrokeWidth(strokeWidth)} prefix={\"px\"} />\n                </div>\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default ShapePropBox;","import makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport React from \"react\";\nimport PropBoxLayout from \"./PropBoxLayout\";\nimport { AlignButton, ColorPicker, TextStyleButton } from \"../input\";\nimport { useStores } from \"hooks/useStores\";\nimport { observer } from \"mobx-react\";\nimport { Box, FormControl, Select } from \"@material-ui/core\";\nimport { MenuItem } from \"@material-ui/core\";\nimport { FontFaces, fontSizes } from \"models/tools/Text\";\n\nconst useStyles = makeStyles(theme => ({\n    propBox: {\n        \"& > *\": {\n            marginBottom: theme.spacing(3),\n        }\n    }\n}));\n\nconst TextPropBox = observer(() => {\n    const classes = useStyles();\n    const { textStore } = useStores();\n\n    const handleFontSizeChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const fontSize = parseInt(event.target.value as string, 10);\n        textStore.setFontSize(fontSize);\n    };\n\n    const handleFontFmailyChange = (event: React.ChangeEvent<{ value: unknown }>) => {\n        const fontFamily = event.target.value as string;\n        textStore.setFontFamily(fontFamily);\n    };\n\n    return (\n        <PropBoxLayout>\n            <div className={classes.propBox}>\n                <div>\n                    <FormControl fullWidth>\n                        <Select\n                            value={textStore.fontFamily}\n                            onChange={handleFontFmailyChange}\n                        >\n                            {FontFaces.values().map(font => (\n                                <MenuItem key={font.value} value={font.value}>{font.display}</MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </div>\n                <div>\n                    <Box display={\"flex\"}>\n                        <Box flex={1} mr={1.5}>\n                            <FormControl fullWidth>\n                                <Select\n                                    value={textStore.fontSize}\n                                    onChange={handleFontSizeChange}\n                                >\n                                    <MenuItem value={textStore.fontSize}>{textStore.fontSize}</MenuItem>\n                                    {fontSizes.map(fontSize => (\n                                        textStore.fontSize !== fontSize && <MenuItem key={fontSize} value={fontSize}>{fontSize}</MenuItem>\n                                    ))}\n                                </Select>\n                            </FormControl>\n                        </Box>\n                        <Box flexBasis={35}>\n                            <ColorPicker color={textStore.fill} onChange={(color) => textStore.setFill(color.hex)} />\n                        </Box>\n                    </Box>\n                </div>\n                <div>\n                    <TextStyleButton\n                        bold={textStore.isBold()}\n                        italic={textStore.isItalic()}\n                        underline={textStore.underline}\n                        toggleBold={(bold) => textStore.setBold(bold)}\n                        toggleItalic={(italic) => textStore.setItalic(italic)}\n                        toggleUnderline={(underline) => textStore.setUnderline(underline)}\n                    />\n                </div>\n                <div>\n                    <AlignButton textAlign={textStore.textAlign} onChange={(textAlign) => textStore.setTextAlign(textAlign)} />\n                </div>\n            </div>\n        </PropBoxLayout>\n    )\n})\n\nexport default TextPropBox;","import React from \"react\";\nimport { observer } from \"mobx-react\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport { useStores } from \"../../hooks/useStores\";\nimport { ToolTypes } from \"../../models/tools/ToolTypes\";\nimport BrushPropBox from \"./BrushPropBox\";\nimport ShapePropBox from \"./ShapePropBox\";\nimport TextPropBox from \"./TextPropBox\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(3),\n        height: \"100%\",\n    }\n}));\n\nconst PropBox = observer(() => {\n    const classes = useStyles();\n    const { canvasStore, objectManagerStore } = useStores();\n    const selectedTool = canvasStore.canvasMode;\n    const activeObject = objectManagerStore.activeObject;\n\n    return (\n        <React.Fragment>\n            <div className={classes.root}>\n                {!activeObject && <React.Fragment>\n                    {selectedTool === ToolTypes.BRUSH && (<BrushPropBox />)}\n                    {selectedTool === ToolTypes.SHAPE && (<ShapePropBox />)}\n                    {selectedTool === ToolTypes.TEXT && (<TextPropBox />)}\n                </React.Fragment>}\n                {activeObject && <React.Fragment>\n                    {objectManagerStore.isPath() && <BrushPropBox />}\n                    {objectManagerStore.isShape() && <ShapePropBox />}\n                    {objectManagerStore.isText() && <TextPropBox />}\n                </React.Fragment>}\n            </div>\n        </React.Fragment>\n    )\n})\n\nexport default PropBox;","import React from \"react\";\nimport {Layout} from \"../layout\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport {PropBox, ToolBox} from \"../../components/tools\";\nimport {observer} from \"mobx-react\";\nimport {Toolbar} from \"@material-ui/core\";\nimport {useStores} from \"../../hooks/useStores\";\n\nconst leftMenuWidth = 260;\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: \"100vw\",\n        height: \"100vh\",\n    },\n    flexBox: {\n        display: \"flex\",\n        flex: 1,\n    },\n    contents: {\n        display: \"flex\",\n    },\n    left: {\n        flexBasis: `${leftMenuWidth}px`,\n        backgroundColor: \"#f0f0f0\",\n    },\n    canvasWrapper: {\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flex: 1,\n        backgroundColor: \"#c0c0c0\",\n        padding: theme.spacing(3),\n    },\n}))\n\nconst Canvas = observer(() => {\n    const classes = useStyles();\n    const rootStore = useStores();\n    const canvasRef = React.useRef<HTMLDivElement>(null);\n\n    React.useEffect(() => {\n        if (!canvasRef.current) {\n            return;\n        }\n\n        rootStore.init(canvasRef.current);\n        return () => rootStore.onDestory();\n    }, [rootStore, canvasRef]);\n\n    return (\n        <Layout>\n            <ToolBox/>\n            <div className={classes.root}>\n                <Toolbar variant={\"dense\"}/>\n                <div className={classes.flexBox}>\n                    <div className={classes.left}>\n                        <PropBox/>\n                    </div>\n                    <div className={classes.canvasWrapper} ref={canvasRef}/>\n                </div>\n            </div>\n        </Layout>\n    )\n})\n\nexport default Canvas;","import {Canvas} from 'templates/canvas';\nimport React from 'react';\n\nfunction App() {\n    return (\n        <Canvas/>\n    );\n}\n\nexport default App;\n","import { IEvent } from \"fabric/fabric-impl\";\nimport { RootStore, Store } from \"./rootStore\";\n\nexport enum MouseEventType {\n    MOUSE_UP = \"mouse:up\",\n    MOUSE_DOWN = \"mouse:down\",\n    MOUSE_MOVE = \"mouse:move\",\n}\n\nexport interface MouseEventObject {\n    startCursorPosition: {x: number, y: number},\n    currentCursorPosition: {x: number, y: number},\n}\n\nexport class MouseEventStore implements Store {\n    private readonly listeners: any;\n    private startCursorPosition = { x: 0, y: 0 };\n    private currentCursorPosition = { x: 0, y: 0 };\n    private observer: Map<MouseEventType, Array<(e: MouseEventObject) => void>> = new Map();\n\n    constructor(private readonly rootStore: RootStore) {\n        // this.addEventListeners();\n        this.listeners = {\n            onMouseDown: this.onMouseDown.bind(this),\n            onMouseUp: this.onMouseUp.bind(this),\n            onMouseMove: this.onMouseMove.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListeners();\n    }\n\n    onDestory() {\n        this.removeEventListeners();\n    }\n\n    subscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\n        if (!this.observer.has(eventType)) {\n            this.observer.set(eventType, []);\n        }\n        \n        this.observer.get(eventType)?.push(listener);\n    }\n\n    unsubscribe(eventType: MouseEventType, listener: (e: MouseEventObject) => void) {\n        this.observer.set(eventType, this.observer.get(eventType)?.filter(fn => fn !== listener) || []);\n    }\n\n    private onMouseDown(e: IEvent) {\n        this.startCursorPosition = { ...this.getCursorPosition(e) };\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_DOWN)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }))\n    }\n\n    private onMouseMove(e: IEvent) {\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_MOVE)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }))\n    }\n\n    private onMouseUp(e: IEvent) {\n        this.currentCursorPosition = { ...this.getCursorPosition(e) };\n\n        this.observer.get(MouseEventType.MOUSE_UP)?.forEach(callback => callback({\n            startCursorPosition: this.startCursorPosition,\n            currentCursorPosition: this.currentCursorPosition,    \n        }))\n    }\n\n    private addEventListeners() {\n        const { canvas } = this.rootStore.canvasStore;\n        canvas.on(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        canvas.on(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n        canvas.on(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n    }\n\n    private removeEventListeners() {\n        const { canvas } = this.rootStore.canvasStore;\n        canvas.off(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        canvas.off(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n        canvas.off(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n    }\n\n    private getCursorPosition(e: IEvent) {\n        return this.rootStore.canvasStore.canvas.getPointer(e.e);\n    }\n}","import { makeAutoObservable } from \"mobx\";\nimport { BrushType } from \"models/tools/Brush\";\nimport { RootStore, Store } from \"./rootStore\";\nimport { fabric } from \"fabric\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\nimport { CanvasModeManager } from \"./canvasStore\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\n\nconst defaultStyles = {\n    brushType: BrushType.PENCIL,\n    stroke: \"#000000\",\n    strokeWidth: 1,\n}\n\ninterface PathStyles {\n    stroke: string | undefined,\n    strokeWidth: number | undefined,\n}\n\nexport class BrushStore implements Store, CanvasModeManager {\n    brushType = defaultStyles.brushType;\n    stroke = defaultStyles.stroke;\n    strokeWidth = defaultStyles.strokeWidth;\n    item: fabric.Path | undefined;\n\n    private readonly listeners: any;\n    private readonly canvas: fabric.Canvas;\n    private readonly objectManager: ObjectManagerStore;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.BRUSH, this);\n        this.canvas = rootStore.canvasStore.canvas;\n        this.objectManager = rootStore.objectManagerStore;\n        this.listeners = {\n            updateObject: this.updateObject.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addReactions();\n    }\n\n    onDestory() {\n        this.removeReactions();\n    }\n\n    onSessionStart() {\n        this.canvas.isDrawingMode = true;\n        this.setBrushType(this.brushType);\n    }\n\n    onSessionEnd() {\n        this.removeReactions();\n        this.canvas.isDrawingMode = false;\n    }\n\n    setBrushType(brushType: BrushType) {\n        this.brushType = brushType;\n        this.setFreeDrawingBrush();\n    }\n\n    setStroke(stroke: string | undefined) {\n        this.stroke = stroke || defaultStyles.stroke;\n        this.item?.set(\"stroke\", stroke);\n        this.canvas.freeDrawingBrush.color = this.stroke;\n        this.canvas.renderAll();\n    }\n\n    setStrokeWidth(strokeWidth: number | undefined) {\n        this.strokeWidth = strokeWidth || defaultStyles.strokeWidth;\n        this.item?.set(\"strokeWidth\", strokeWidth);\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\n        this.canvas.renderAll();\n    }\n\n    private setFreeDrawingBrush() {\n        this.canvas.freeDrawingBrush = this.rootStore.brushStore.brushType.getBrush(this.canvas);\n        this.canvas.freeDrawingBrush.color = this.stroke;\n        this.canvas.freeDrawingBrush.width = this.strokeWidth;\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (this.isBrush(object)) {\n            this.item = object as fabric.Path;\n            this.updatePathStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private setPathStyles(styles: PathStyles) {\n        this.setStroke(styles.stroke);\n        this.setStrokeWidth(styles.strokeWidth);\n    }\n\n    private updatePathStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            stroke,\n            strokeWidth,\n        } = this.item;\n\n        this.setPathStyles({\n            stroke: stroke,\n            strokeWidth: strokeWidth,\n        })\n    }\n\n    private isBrush(object: fabric.Object | undefined) {\n        return object?.isType(\"path\");\n    }\n\n    private addReactions() {\n        this.objectManager.subscribe(this.listeners.updateObject);\n    }\n\n    private removeReactions() {\n        this.objectManager.unsubscribe(this.listeners.updateObject);\n    }\n}","import { makeAutoObservable } from \"mobx\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport { RootStore, Store } from \"./rootStore\";\n\nconst defaultStyles = {\n    width: 500,\n    height: 500,\n    backgroundColor: \"#ffffff\",\n}\n\nexport interface CanvasModeManager {\n    onSessionStart: () => void;\n    onSessionEnd: () => void;\n}\n\nexport class CanvasStore implements Store {\n    private readonly canvasModeManagers: Map<ToolTypes, CanvasModeManager> = new Map();\n\n    width = defaultStyles.width;\n    height = defaultStyles.height;\n    backgroundColor = defaultStyles.backgroundColor;\n    canvasMode = ToolTypes.BRUSH;\n\n    constructor(\n        private readonly rootStore: RootStore,\n        readonly canvas: fabric.Canvas,\n    ) {\n        makeAutoObservable(this);\n    }\n\n    onInit() {\n        this.canvas.setWidth(this.width);\n        this.canvas.setHeight(this.height);\n        this.canvas.setBackgroundColor(this.backgroundColor, () => {});\n        this.setCanvasMode(this.canvasMode);\n    }\n\n    onDestory() {\n        this.canvas.dispose();\n    }\n\n    registerCanvasModeManager(mode: ToolTypes, manager: CanvasModeManager) {\n        this.canvasModeManagers.set(mode, manager);\n    }\n\n    setCanvasMode(mode: ToolTypes) {\n        const previousMode = this.canvasMode;\n        this.canvasMode = mode;\n\n        this.canvas.discardActiveObject().renderAll();\n        this.setAllCursor(\"default\");\n        this.setSelectable(false)\n\n        this.canvasModeManagers.get(previousMode)?.onSessionEnd();\n        this.canvasModeManagers.get(mode)?.onSessionStart();\n    }\n\n    setSelectable(selectable: boolean) {\n        this.canvas.selection = selectable;\n        this.canvas.getObjects().forEach(obj => {\n            obj.selectable = selectable;\n        });\n    }\n\n    setDefaultCursor(cursor: string) {\n        this.canvas.defaultCursor = cursor;\n    }\n\n    setHoverCursor(cursor: string) {\n        this.canvas.getObjects().forEach(obj => {\n            obj.hoverCursor = cursor;\n        });\n    }\n\n    setAllCursor(cursor: string) {\n        this.setDefaultCursor(cursor);\n        this.setHoverCursor(cursor);\n    }\n}","import { IEvent } from \"fabric/fabric-impl\";\nimport { makeAutoObservable, reaction } from \"mobx\";\nimport { ShapeType } from \"models/tools/Shape\";\nimport { CanvasStore } from \"./canvasStore\";\nimport { RootStore } from \"./rootStore\";\n\nexport enum SelectionEventType {\n    SELECTION_CLEARED = \"selection:cleared\",\n    SELECTION_CREATED = \"selection:created\",\n    SELECTION_UPDATED = \"selection:updated\",\n}\n\nexport class ObjectManagerStore {\n    private readonly canvasStore: CanvasStore;\n    private readonly listeners: { [eventName: string]: (e: IEvent) => void }\n    private readonly observer: Set<(object: fabric.Object | undefined) => void> = new Set();\n\n    activeObject: fabric.Object | undefined;\n\n    constructor(\n        private readonly rootStore: RootStore,\n    ) {\n        makeAutoObservable(this);\n        this.canvasStore = rootStore.canvasStore;\n        this.listeners = {\n            onSelected: this.onSelected.bind(this),\n            onCleared: this.onCleared.bind(this),\n        }\n        this.addEventListeners();\n    }\n\n    private onSelected(e: IEvent) {\n        const { target } = e;\n        if (!target) {\n            return;\n        }\n\n        this.activeObject = target;\n    }\n\n    private onCleared() {\n        this.activeObject = undefined;\n    }\n\n    private addEventListeners() {\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CREATED, this.listeners.onSelected);\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_UPDATED, this.listeners.onSelected);\n        this.canvasStore.canvas.on(SelectionEventType.SELECTION_CLEARED, this.listeners.onCleared);\n        reaction(\n            () => this.activeObject,\n            () => this.observer.forEach(callback => callback(this.activeObject)),\n        );\n    }\n\n    subscribe(listener: (object: fabric.Object | undefined) => void) {\n        this.observer.add(listener);\n    }\n\n    unsubscribe(listener: (object: fabric.Object | undefined) => void) {\n        this.observer.delete(listener);\n    }\n\n    isRect() {\n        return this.activeObject?.isType(ShapeType.RECT.value);\n    }\n\n    isEllipse() {\n        return this.activeObject?.isType(ShapeType.ELLIPSE.value);\n    }\n\n    isTriangle() {\n        return this.activeObject?.isType(ShapeType.TRIANGLE.value);\n    }\n\n    isShape() {\n        return this.isRect() || this.isEllipse() || this.isTriangle();\n    }\n\n    isPath() {\n        return this.activeObject?.isType(\"path\");\n    }\n\n    isText() {\n        return this.activeObject?.isType(\"i-text\");\n    }\n\n    getObjectTypeName(): string {\n        if (this.isRect()) {\n            return ShapeType.RECT.display;\n        } else if (this.isEllipse()) {\n            return ShapeType.ELLIPSE.display;\n        } else if (this.isTriangle()) {\n            return ShapeType.TRIANGLE.display;\n        } else if (this.isPath()) {\n            return \"패스\";\n        } else if (this.isText()) {\n            return \"텍스트\";\n        } else {\n            return \"오브젝트\";\n        }\n    }\n}","import { IEvent } from \"fabric/fabric-impl\";\nimport { RootStore, Store } from \"./rootStore\";\n\nexport enum ObjectEventType {\n    OBJECT_SCALING = \"object:scaling\",\n    OBJECT_MODIFIED = \"object:modified\",\n}\n\nexport class ObjectEventStore implements Store {\n    private readonly listeners: any;\n    private readonly observer: Map<ObjectEventType, Set<(e: IEvent) => void>> = new Map();\n\n    constructor(private readonly rootStore: RootStore) {\n        this.listeners = {\n            onScaling: this.onScaling.bind(this),\n            onModified: this.onModified.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListener();\n    }\n\n    onDestory() {\n        this.removeEventListener();\n    }\n\n    private addEventListener() {\n        const {canvas} = this.rootStore.canvasStore;\n        canvas.on(ObjectEventType.OBJECT_SCALING, this.listeners.onScaling);\n        canvas.on(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n    }\n\n    private removeEventListener() {\n        const {canvas} = this.rootStore.canvasStore;\n        canvas.off(ObjectEventType.OBJECT_SCALING, this.listeners.onScaling);\n        canvas.off(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n    }\n\n    private onScaling(e: IEvent) {\n        this.observer.get(ObjectEventType.OBJECT_SCALING)?.forEach(callbackFn => callbackFn(e));\n    }\n\n    private onModified(e: IEvent) {\n        this.observer.get(ObjectEventType.OBJECT_MODIFIED)?.forEach(callbackFn => callbackFn(e));\n    }\n\n    subscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\n        if (!this.observer.has(eventType)) {\n            this.observer.set(eventType, new Set());\n        }\n\n        this.observer.get(eventType)?.add(listener);\n    }\n\n    unsubscribe(eventType: ObjectEventType, listener: (e: IEvent) => void) {\n        this.observer.get(eventType)?.delete(listener);\n    }\n}\n\nexport default ObjectEventStore;","import { makeAutoObservable } from \"mobx\";\nimport { ShapeType } from \"models/tools/Shape\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport { CanvasModeManager } from \"./canvasStore\";\nimport { MouseEventObject, MouseEventStore, MouseEventType } from \"./mouseEventStore\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\nimport { RootStore, Store } from \"./rootStore\";\n\nconst defaultStyles = {\n    shapeType: ShapeType.ELLIPSE,\n    fill: undefined,\n    strokeWidth: 3,\n    stroke: \"#000000\",\n}\n\ninterface ShapeStyles {\n    fill: string | undefined;\n    strokeWidth: number;\n    stroke: string | undefined;\n}\n\nexport class ShapeStore implements Store, CanvasModeManager {\n    private static readonly MIN_OBJECT_SIZE = 30;\n    private readonly canvas: fabric.Canvas;\n    private readonly mouseEventStore: MouseEventStore;\n    private readonly objectManager: ObjectManagerStore;\n    private readonly listeners: any;\n    private isDragMode = false;\n\n    item: fabric.Rect | fabric.Triangle | fabric.Ellipse | undefined;\n    shapeType = defaultStyles.shapeType;\n    fill: string | undefined = defaultStyles.fill;\n    strokeWidth = defaultStyles.strokeWidth;\n    stroke: string | undefined = defaultStyles.stroke;\n\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.SHAPE, this);\n        this.canvas = rootStore.canvasStore.canvas;\n        this.mouseEventStore = rootStore.mouseEventStore;\n        this.objectManager = rootStore.objectManagerStore;\n        this.listeners = {\n            onMouseUp: this.onMouseUp.bind(this),\n            onMouseDown: this.onMouseDown.bind(this),\n            onMouseMove: this.onMouseMove.bind(this),\n            updateObject: this.updateObject.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListeners();\n        this.addReactions();\n    }\n\n    onDestory() {\n        this.removeEventListener();\n        this.removeReactions();\n    }\n\n    onSessionStart() {\n        this.rootStore.canvasStore.setAllCursor(\"crosshair\");\n    }\n\n    onSessionEnd() {\n        //\n    }\n\n    setShapeType(shapeType: ShapeType) {\n        this.shapeType = shapeType;\n    }\n\n    setFill(fill: string | undefined) {\n        this.fill = fill;\n        if (this.item) {\n            this.item.set({ fill: fill });\n            this.canvas.renderAll();\n        }\n    }\n\n    setStroke(stroke: string | undefined) {\n        this.stroke = stroke;\n        if (this.item) {\n            this.item.set({ stroke: stroke });\n            this.canvas.renderAll();\n        }\n    }\n\n    setStrokeWidth(strokeWidth: number) {\n        this.strokeWidth = strokeWidth;\n        if (this.item) {\n            this.item.set({ strokeWidth: strokeWidth });\n            this.canvas.renderAll();\n        }\n    }\n\n    private addReactions() {\n        this.objectManager.subscribe(this.listeners.updateObject);\n    }\n\n    private removeReactions() {\n        this.objectManager.unsubscribe(this.listeners.updateObject);\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (this.isShape(object)) {\n            this.item = object;\n            this.updateShapeStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private setShapeStyles(styles: ShapeStyles) {\n        this.setFill(styles.fill);\n        this.setStroke(styles.stroke);\n        this.setStrokeWidth(styles.strokeWidth);\n    }\n\n    private updateShapeStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            stroke,\n            strokeWidth,\n            fill,\n        } = this.item;\n\n        this.setShapeStyles({\n            fill: fill === undefined ? fill : fill as string,\n            stroke: stroke,\n            strokeWidth: strokeWidth || defaultStyles.strokeWidth,\n        })\n    }\n\n    private addEventListeners() {\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n    }\n\n    private removeEventListener() {\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_DOWN, this.listeners.onMouseDown);\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_MOVE, this.listeners.onMouseMove);\n    }\n\n    private isShapeTool() {\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.SHAPE;\n    }\n\n    private isShape(object: fabric.Object | undefined) {\n        return object?.isType(ShapeType.ELLIPSE.value) || object?.isType(ShapeType.RECT.value) || object?.isType(ShapeType.TRIANGLE.value);\n    }\n\n    private onMouseDown(e: MouseEventObject) {\n        if (!this.isShapeTool()) {\n            return;\n        }\n\n        this.isDragMode = true;\n        this.item = this.shapeType.getShape({\n            left: e.startCursorPosition.x,\n            top: e.startCursorPosition.y,\n            stroke: this.stroke,\n            strokeWidth: this.strokeWidth,\n            fill: this.fill,\n            selectable: false,\n            hoverCursor: \"default\",\n            strokeUniform: true,\n        });\n\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: 0,\n                height: 0,\n            })\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            (this.item as fabric.Ellipse).set({\n                rx: 0,\n                ry: 0,\n            })\n        }\n\n        this.rootStore.canvasStore.canvas.add(this.item);\n    }\n\n    private onMouseMove(e: MouseEventObject) {\n        if (!this.isShapeTool() || !this.isDragMode || !this.item) {\n            return;\n        }\n\n        if (e.currentCursorPosition.x < e.startCursorPosition.x) {\n            this.item.set({ left: Math.abs(e.currentCursorPosition.x) });\n        }\n\n        if (e.currentCursorPosition.y < e.startCursorPosition.y) {\n            this.item.set({ top: Math.abs(e.currentCursorPosition.y) });\n        }\n\n        this.item.set({ flipX: e.currentCursorPosition.x < e.startCursorPosition.x });\n        this.item.set({ flipY: e.currentCursorPosition.y < e.startCursorPosition.y });\n\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x),\n                height: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y),\n            });\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            (this.item as fabric.Ellipse).set({\n                rx: Math.abs(e.startCursorPosition.x - e.currentCursorPosition.x) / 2,\n                ry: Math.abs(e.startCursorPosition.y - e.currentCursorPosition.y) / 2,\n            })\n        }\n\n        this.rootStore.canvasStore.canvas.renderAll();\n    }\n\n    private onMouseUp(e: MouseEventObject) {\n        if (!this.isShapeTool() || !this.item) {\n            return;\n        }\n\n        this.isDragMode = false;\n        if (this.item.isType(ShapeType.RECT.value) || this.item.isType(ShapeType.TRIANGLE.value)) {\n            this.item.set({\n                width: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.width || ShapeStore.MIN_OBJECT_SIZE),\n                height: Math.max(ShapeStore.MIN_OBJECT_SIZE, this.item.height || ShapeStore.MIN_OBJECT_SIZE),\n            }).setCoords();\n        } else if (this.item.isType(ShapeType.ELLIPSE.value)) {\n            const circle = this.item as fabric.Ellipse;\n            circle.set({\n                rx: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.rx || ShapeStore.MIN_OBJECT_SIZE / 2),\n                ry: Math.max(ShapeStore.MIN_OBJECT_SIZE / 2, circle.ry || ShapeStore.MIN_OBJECT_SIZE / 2),\n            }).setCoords();\n        }\n\n        const canvasStore = this.rootStore.canvasStore;\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\n        canvasStore.canvas.setActiveObject(this.item);\n        canvasStore.canvas.renderAll();\n\n        this.item = undefined;\n    }\n}","import { makeAutoObservable } from \"mobx\";\nimport { RootStore } from \"./rootStore\";\n\nexport class UIStore {\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);;\n    }\n}","import { MouseEventObject, MouseEventStore, MouseEventType } from \"./mouseEventStore\";\nimport { RootStore, Store } from \"./rootStore\";\nimport { fabric } from \"fabric\";\nimport { ToolTypes } from \"models/tools/ToolTypes\";\nimport { ObjectEventStore, ObjectEventType } from \"./objectEventStore\";\nimport { IEvent } from \"fabric/fabric-impl\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\nimport { makeAutoObservable } from \"mobx\";\nimport { FontFaces, fontSizes, FontStyle, FontWeight, TextAlign } from \"models/tools/Text\";\nimport WebFont from \"webfontloader\";\nimport { CanvasModeManager } from \"./canvasStore\";\n\nconst defaultStyles = {\n    FONT_SIZE: fontSizes[fontSizes.length / 2],\n    FILL: \"#000000\",\n    FONT_FAMILY: FontFaces.TIMES_NEW_ROMAN.value,\n    TEXT_ALIGN: TextAlign.LEFT,\n    FONT_STYLE: FontStyle.NORMAL,\n    FONT_WEIGHT: FontWeight.NORMAL,\n    UNDERLINE: false,\n}\n\ninterface TextStyles {\n    fontSize: number,\n    fill: string,\n    fontFamily: string,\n    textAlign: string,\n    fontStyle: string,\n    fontWeight: string | number,\n    underline: boolean,\n}\n\nexport class TextStore implements Store, CanvasModeManager {\n    private readonly objectManager: ObjectManagerStore;\n    private readonly mouseEventStore: MouseEventStore;\n    private readonly objectEventStore: ObjectEventStore;\n    private readonly canvas: fabric.Canvas;\n    private readonly listeners: any;\n    private fontStyle = defaultStyles.FONT_STYLE;\n    private fontWeight = defaultStyles.FONT_WEIGHT;\n    private autoRenderId: NodeJS.Timeout | undefined;\n\n    fontSize = defaultStyles.FONT_SIZE;\n    fill = defaultStyles.FILL;\n    fontFamily = defaultStyles.FONT_FAMILY;\n    textAlign = defaultStyles.TEXT_ALIGN;\n    underline = defaultStyles.UNDERLINE;\n    item: fabric.IText | undefined;\n\n    constructor(private readonly rootStore: RootStore) {\n        makeAutoObservable(this);\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.TEXT, this);\n        this.loadFont();\n        this.objectManager = rootStore.objectManagerStore;\n        this.mouseEventStore = rootStore.mouseEventStore;\n        this.objectEventStore = rootStore.objectEventStore;\n        this.canvas = rootStore.canvasStore.canvas;\n        this.listeners = {\n            onMouseUp: this.onMouseUp.bind(this),\n            onModified: this.onModified.bind(this),\n            updateObject: this.updateObject.bind(this),\n        }\n    }\n\n    onInit() {\n        this.addEventListener();\n        this.addFontAutoRender();\n    }\n\n    onDestory() {\n        this.removeEventListener();\n        this.removeFontAutoRender();\n    }\n\n    onSessionStart() {\n        this.rootStore.canvasStore.setAllCursor(\"text\");\n    }\n\n    onSessionEnd() {\n        //\n    }\n\n    setFontSize(fontSize: number) {\n        this.fontSize = fontSize;\n        if (this.item) {\n            this.item.set({ fontSize: fontSize });\n            this.canvas.renderAll();\n        }\n    }\n\n    setFill(fill: string) {\n        this.fill = fill;\n        if (this.item) {\n            this.item.set({ fill: fill });\n            this.canvas.renderAll();\n        }\n    }\n\n    setFontFamily(fontFamily: string) {\n        this.fontFamily = fontFamily;\n        if (this.item) {\n            this.item.set({ fontFamily: fontFamily });\n            this.canvas.renderAll();\n        }\n    }\n\n    setTextAlign(textAlign: string) {\n        this.textAlign = textAlign;\n        if (this.item) {\n            this.item.set({ textAlign: textAlign });\n            this.canvas.renderAll();\n        }\n    }\n\n    setUnderline(underline: boolean) {\n        this.underline = underline;\n        if (this.item) {\n            this.item.set({ underline: underline });\n            this.canvas.renderAll();\n        }\n    }\n\n    setBold(bold: boolean) {\n        const changedValue = bold ? FontWeight.BOLD : FontWeight.NORMAL;\n        this.fontWeight = changedValue;\n        if (this.item) {\n            this.item.set({ fontWeight: changedValue });\n            this.canvas.renderAll();\n        }\n    }\n\n    isBold() {\n        return this.fontWeight === FontWeight.BOLD;\n    }\n\n    setItalic(italic: boolean) {\n        const changedValue = italic ? FontStyle.ITALIC : FontStyle.NORMAL;\n        this.fontStyle = changedValue;\n        if (this.item) {\n            this.item.set({ fontStyle: changedValue as any });\n            this.canvas.renderAll();\n        }\n    }\n\n    isItalic() {\n        return this.fontStyle === FontStyle.ITALIC;\n    }\n\n    private addEventListener() {\n        this.mouseEventStore.subscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.objectEventStore.subscribe(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n        this.objectManager.subscribe(this.listeners.updateObject);\n    }\n\n    private removeEventListener() {\n        this.mouseEventStore.unsubscribe(MouseEventType.MOUSE_UP, this.listeners.onMouseUp);\n        this.objectEventStore.unsubscribe(ObjectEventType.OBJECT_MODIFIED, this.listeners.onModified);\n        this.objectManager.unsubscribe(this.listeners.updateObject);\n    }\n\n    private updateObject(object: fabric.Object | undefined) {\n        if (object && this.isText(object)) {\n            this.item = object as fabric.IText;\n            this.updateTextStyles();\n        } else {\n            this.item = undefined;\n        }\n    }\n\n    private updateTextStyles() {\n        if (!this.item) {\n            return;\n        }\n\n        const {\n            fontSize,\n            fill,\n            fontFamily,\n            textAlign,\n            fontStyle,\n            fontWeight,\n            underline,\n        } = this.item;\n\n        this.setTextStyles({\n            fontSize: fontSize || defaultStyles.FONT_SIZE,\n            fill: !fill ? defaultStyles.FILL : fill as string,\n            fontFamily: fontFamily || defaultStyles.FONT_FAMILY,\n            textAlign: textAlign || defaultStyles.TEXT_ALIGN,\n            fontStyle: fontStyle || defaultStyles.FONT_STYLE,\n            fontWeight: fontWeight || defaultStyles.FONT_WEIGHT,\n            underline: !!underline,\n        })\n    }\n\n    private setTextStyles(styles: TextStyles) {\n        this.setFontSize(styles.fontSize);\n        this.setFill(styles.fill);\n        this.setFontFamily(styles.fontFamily);\n        this.setTextAlign(styles.textAlign);\n    }\n\n    private onMouseUp(e: MouseEventObject) {\n        if (!this.isTextTool()) {\n            return;\n        }\n\n        this.item = new fabric.IText(\"텍스트를 입력해주세요\", {\n            top: e.currentCursorPosition.y,\n            left: e.currentCursorPosition.x,\n            fontFamily: this.fontFamily,\n            fontSize: this.fontSize,\n            textAlign: this.textAlign,\n            lockUniScaling: true,\n            fill: this.fill,\n        });\n\n        this.item.setControlVisible(\"mt\", false);\n        this.item.setControlVisible(\"mb\", false);\n        this.item.setControlVisible(\"ml\", false);\n        this.item.setControlVisible(\"mr\", false);\n\n        const canvasStore = this.rootStore.canvasStore;\n        canvasStore.canvas.add(this.item);\n        canvasStore.setCanvasMode(ToolTypes.SELECT);\n        canvasStore.canvas.setActiveObject(this.item);\n\n        this.item.selectAll();\n        this.item.enterEditing();\n    }\n\n    private onModified(e: IEvent) {\n        const { target } = e;\n        if (!target || !this.isText(target)) {\n            return;\n        }\n\n        const text = target as fabric.IText;\n        const fontSize = parseInt(((text.fontSize || defaultStyles.FONT_SIZE) * (text.scaleX || 1)).toFixed(0), 10);\n        text.set({\n            scaleX: 1,\n            scaleY: 1,\n        });\n        this.setFontSize(fontSize);\n    }\n\n    private isTextTool() {\n        return this.rootStore.canvasStore.canvasMode === ToolTypes.TEXT;\n    }\n\n    private isText(object: fabric.Object) {\n        return object.isType(\"i-text\");\n    }\n\n    private loadFont() {\n        WebFont.load({\n            google: {\n                families: FontFaces.getGoogleFonts().map(font => font.value),\n            },\n        })\n    }\n\n    private addFontAutoRender() {\n        this.autoRenderId = setInterval(() => {\n            this.canvas.getActiveObjects()\n                .filter(object => this.isText(object))\n                .forEach((object) => {\n                    const textObject = object as fabric.IText;\n                    textObject.initDimensions();\n                    textObject.dirty = true;\n                });\n            fabric.util.clearFabricFontCache();\n            this.canvas.renderAll();\n        }, 1000);\n    }\n\n    private removeFontAutoRender() {\n        if (this.autoRenderId) {\n            clearInterval(this.autoRenderId);\n        }\n    }\n}","import { ToolTypes } from \"models/tools/ToolTypes\";\nimport { CanvasModeManager } from \"./canvasStore\";\nimport { RootStore } from \"./rootStore\";\n\nexport class SelectStore implements CanvasModeManager {\n    constructor(private readonly rootStore: RootStore) {\n        rootStore.canvasStore.registerCanvasModeManager(ToolTypes.SELECT, this);\n    }\n\n    onSessionStart() {\n        this.rootStore.canvasStore.setSelectable(true);\n        this.rootStore.canvasStore.setHoverCursor(\"move\");\n    }\n\n    onSessionEnd() {\n        //\n    }\n}","import { fabric } from \"fabric\";\nimport { BrushStore } from \"./brushStore\";\nimport { CanvasStore } from \"./canvasStore\";\nimport { MouseEventStore } from \"./mouseEventStore\";\nimport { ObjectManagerStore } from \"./objectManagerStore\";\nimport { ObjectEventStore } from \"./objectEventStore\";\nimport { ShapeStore } from \"./shapeStore\";\nimport { UIStore } from \"./UIStore\";\nimport { TextStore } from \"./textStore\";\nimport { SelectStore } from \"./selectStore\";\n\nexport interface Store {\n    onInit: () => void;\n    onDestory: () => void;\n}\n\nexport class RootStore implements Store {\n    private readonly canvasElement: HTMLCanvasElement;\n    canvasStore: CanvasStore;\n    objectManagerStore: ObjectManagerStore;\n    objectEventStore: ObjectEventStore;\n    mouseEventStore: MouseEventStore;\n    brushStore: BrushStore;\n    shapeStore: ShapeStore;\n    textStore: TextStore;\n    selectStore: SelectStore;\n    UIStore: UIStore;\n\n    constructor() {\n        this.canvasElement = document.createElement(\"canvas\");\n        document.body.append(this.canvasElement);\n\n        this.canvasStore = new CanvasStore(this, new fabric.Canvas(this.canvasElement));\n        this.objectManagerStore = new ObjectManagerStore(this);\n        this.objectEventStore = new ObjectEventStore(this);\n        this.mouseEventStore = new MouseEventStore(this);\n        this.brushStore = new BrushStore(this);\n        this.shapeStore = new ShapeStore(this);\n        this.textStore = new TextStore(this);\n        this.selectStore = new SelectStore(this);\n        this.UIStore = new UIStore(this);\n    }\n\n    onInit() {\n        //\n    }\n\n    onDestory() {\n        Object.values(this).forEach(obj => {\n            if (obj.onDestory) {\n                obj.onDestory();\n            }\n        })\n    }\n\n    init(container: HTMLElement): void {\n        container.append(this.canvasElement.parentElement as Node);\n        Object.values(this).forEach(obj => {\n            if (obj.onInit) {\n                obj.onInit();\n            }\n        })\n    }\n}\n\nexport default new RootStore();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport {StoreProvider} from \"./contexts/storeContext\";\nimport rootStore from \"./stores/rootStore\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <StoreProvider value={rootStore}>\n            <App/>\n        </StoreProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}